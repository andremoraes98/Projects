{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documentos/Projetos/sd-019-b-project-trybewallet/src/pages/Wallet.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Proptypes from 'prop-types';\nimport { fetchCurrencyJSONFromAPI } from '../actions';\nimport Header from '../components/Header';\nimport WalletForm from '../components/WalletForm';\nimport Table from '../components/Table';\nimport EdittionWalletForm from '../components/EdittionWalletForm';\n\nclass Wallet extends React.Component {\n  componentDidMount() {\n    const {\n      getDataFromAPI,\n      expenses\n    } = this.props;\n    getDataFromAPI(expenses);\n  }\n\n  render() {\n    const {\n      wantToEdit\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }), wantToEdit ? /*#__PURE__*/React.createElement(EdittionWalletForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 24\n      }\n    }) : /*#__PURE__*/React.createElement(WalletForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  wantToEdit: state.wallet.wantToEdit,\n  expenses: state.wallet.expenses\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getDataFromAPI: expense => dispatch(fetchCurrencyJSONFromAPI(expense))\n});\n\nWallet.propTypes = {\n  getDataFromAPI: Proptypes.func.isRequired,\n  wantToEdit: Proptypes.bool.isRequired,\n  expenses: Proptypes.arrayOf({\n    currency: Proptypes.string,\n    description: Proptypes.string,\n    exchangeRates: Proptypes.objectOf(Proptypes.object),\n    id: Proptypes.number,\n    method: Proptypes.string,\n    tag: Proptypes.string,\n    value: Proptypes.string\n  }).isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);","map":{"version":3,"sources":["/home/andre/Documentos/Projetos/sd-019-b-project-trybewallet/src/pages/Wallet.js"],"names":["React","connect","Proptypes","fetchCurrencyJSONFromAPI","Header","WalletForm","Table","EdittionWalletForm","Wallet","Component","componentDidMount","getDataFromAPI","expenses","props","render","wantToEdit","mapStateToProps","state","wallet","mapDispatchToProps","dispatch","expense","propTypes","func","isRequired","bool","arrayOf","currency","string","description","exchangeRates","objectOf","object","id","number","method","tag","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,wBAAT,QAAyC,YAAzC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;;AAEA,MAAMC,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAqC;AACnCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,QAA+B,KAAKC,KAA1C;AACAF,IAAAA,cAAc,CAACC,QAAD,CAAd;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAiB,KAAKF,KAA5B;AACA,wBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEIE,UAAU,gBAAG,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,gBAA4B,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF1C,eAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AAfkC;;AAkBrC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCF,EAAAA,UAAU,EAAEE,KAAK,CAACC,MAAN,CAAaH,UADS;AAElCH,EAAAA,QAAQ,EAAEK,KAAK,CAACC,MAAN,CAAaN;AAFW,CAAZ,CAAxB;;AAKA,MAAMO,kBAAkB,GAAIC,QAAD,KAAe;AACxCT,EAAAA,cAAc,EAAGU,OAAD,IAAaD,QAAQ,CAACjB,wBAAwB,CAACkB,OAAD,CAAzB;AADG,CAAf,CAA3B;;AAIAb,MAAM,CAACc,SAAP,GAAmB;AACjBX,EAAAA,cAAc,EAAET,SAAS,CAACqB,IAAV,CAAeC,UADd;AAEjBT,EAAAA,UAAU,EAAEb,SAAS,CAACuB,IAAV,CAAeD,UAFV;AAGjBZ,EAAAA,QAAQ,EAAEV,SAAS,CAACwB,OAAV,CAAkB;AAC1BC,IAAAA,QAAQ,EAAEzB,SAAS,CAAC0B,MADM;AAE1BC,IAAAA,WAAW,EAAE3B,SAAS,CAAC0B,MAFG;AAG1BE,IAAAA,aAAa,EAAE5B,SAAS,CAAC6B,QAAV,CAAmB7B,SAAS,CAAC8B,MAA7B,CAHW;AAI1BC,IAAAA,EAAE,EAAE/B,SAAS,CAACgC,MAJY;AAK1BC,IAAAA,MAAM,EAAEjC,SAAS,CAAC0B,MALQ;AAM1BQ,IAAAA,GAAG,EAAElC,SAAS,CAAC0B,MANW;AAO1BS,IAAAA,KAAK,EAAEnC,SAAS,CAAC0B;AAPS,GAAlB,EAQPJ;AAXc,CAAnB;AAcA,eAAevB,OAAO,CAACe,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CX,MAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Proptypes from 'prop-types';\nimport { fetchCurrencyJSONFromAPI } from '../actions';\nimport Header from '../components/Header';\nimport WalletForm from '../components/WalletForm';\nimport Table from '../components/Table';\nimport EdittionWalletForm from '../components/EdittionWalletForm';\n\nclass Wallet extends React.Component {\n  componentDidMount() {\n    const { getDataFromAPI, expenses } = this.props;\n    getDataFromAPI(expenses);\n  }\n\n  render() {\n    const { wantToEdit } = this.props;\n    return (\n      <>\n        <Header />\n        { wantToEdit ? <EdittionWalletForm /> : <WalletForm /> }\n        <Table />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  wantToEdit: state.wallet.wantToEdit,\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getDataFromAPI: (expense) => dispatch(fetchCurrencyJSONFromAPI(expense)),\n});\n\nWallet.propTypes = {\n  getDataFromAPI: Proptypes.func.isRequired,\n  wantToEdit: Proptypes.bool.isRequired,\n  expenses: Proptypes.arrayOf({\n    currency: Proptypes.string,\n    description: Proptypes.string,\n    exchangeRates: Proptypes.objectOf(Proptypes.object),\n    id: Proptypes.number,\n    method: Proptypes.string,\n    tag: Proptypes.string,\n    value: Proptypes.string,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n"]},"metadata":{},"sourceType":"module"}