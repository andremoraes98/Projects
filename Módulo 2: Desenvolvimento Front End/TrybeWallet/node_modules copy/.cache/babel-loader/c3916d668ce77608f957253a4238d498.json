{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documentos/Projetos/sd-019-b-project-trybewallet/src/pages/Login.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { saveEmail } from '../actions';\nimport crypto from '../images/crypto.png';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.redirectToWallet = () => {\n      const {\n        saveEmailinStorage\n      } = this.props;\n      const {\n        emailInput\n      } = this.state;\n      saveEmailinStorage(emailInput);\n      this.setState({\n        willRedirect: true\n      });\n    };\n\n    this.state = {\n      emailInput: '',\n      passwordInput: '',\n      willRedirect: false\n    };\n  }\n\n  render() {\n    const {\n      emailInput,\n      passwordInput,\n      willRedirect\n    } = this.state;\n    const emailRegex = /^[a-z0-9.]+@[a-z0-9]+\\.[a-z]+(\\.[a-z]+)?$/i;\n    const minCharacterPassword = 6;\n    const disabledButton = true;\n    return willRedirect ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/carteira\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: crypto,\n      alt: \"Crypto Wallet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"emailInput\",\n      className: \"loginInput\",\n      placeholder: \"E-mail\",\n      value: emailInput,\n      onChange: this.handleChange,\n      \"data-testid\": \"email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"passwordInput\",\n      className: \"loginInput\",\n      value: passwordInput,\n      onChange: this.handleChange,\n      placeholder: \"Senha\",\n      \"data-testid\": \"password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      disabled: passwordInput.length >= minCharacterPassword && emailRegex.test(emailInput) ? !disabledButton : disabledButton,\n      onClick: this.redirectToWallet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"Entrar\"));\n  }\n\n}\n\nLogin.propTypes = {\n  saveEmailinStorage: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  saveEmailinStorage: user => dispatch(saveEmail(user))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/andre/Documentos/Projetos/sd-019-b-project-trybewallet/src/pages/Login.js"],"names":["React","PropTypes","Redirect","connect","saveEmail","crypto","Login","Component","constructor","handleChange","target","name","value","setState","redirectToWallet","saveEmailinStorage","props","emailInput","state","willRedirect","passwordInput","render","emailRegex","minCharacterPassword","disabledButton","length","test","propTypes","func","isRequired","mapDispatchToProps","dispatch","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAUdC,YAVc,GAUC,QAAgB;AAAA,UAAf;AAAEC,QAAAA;AAAF,OAAe;AAC7B,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,MAAxB;AACA,WAAKG,QAAL,CAAc;AACZ,SAACF,IAAD,GAAQC;AADI,OAAd;AAGD,KAfa;;AAAA,SAiBdE,gBAjBc,GAiBK,MAAM;AACvB,YAAM;AAAEC,QAAAA;AAAF,UAAyB,KAAKC,KAApC;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAiB,KAAKC,KAA5B;AACAH,MAAAA,kBAAkB,CAACE,UAAD,CAAlB;AACA,WAAKJ,QAAL,CAAc;AACZM,QAAAA,YAAY,EAAE;AADF,OAAd;AAGD,KAxBa;;AAGZ,SAAKD,KAAL,GAAa;AACXD,MAAAA,UAAU,EAAE,EADD;AAEXG,MAAAA,aAAa,EAAE,EAFJ;AAGXD,MAAAA,YAAY,EAAE;AAHH,KAAb;AAKD;;AAkBDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA,UAAF;AAAcG,MAAAA,aAAd;AAA6BD,MAAAA;AAA7B,QAA8C,KAAKD,KAAzD;AACA,UAAMI,UAAU,GAAG,4CAAnB;AACA,UAAMC,oBAAoB,GAAG,CAA7B;AACA,UAAMC,cAAc,GAAG,IAAvB;AAEA,WACEL,YAAY,gBACR,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADQ,gBAGR;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAGd,MAAX;AAAoB,MAAA,GAAG,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,SAAS,EAAC,YAHZ;AAIE,MAAA,WAAW,EAAC,QAJd;AAKE,MAAA,KAAK,EAAGY,UALV;AAME,MAAA,QAAQ,EAAG,KAAKR,YANlB;AAOE,qBAAY,aAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAYE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,eAFP;AAGE,MAAA,SAAS,EAAC,YAHZ;AAIE,MAAA,KAAK,EAAGW,aAJV;AAKE,MAAA,QAAQ,EAAG,KAAKX,YALlB;AAME,MAAA,WAAW,EAAC,OANd;AAOE,qBAAY,gBAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,eAsBE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,QAAQ,EACNW,aAAa,CAACK,MAAd,IAAwBF,oBAAxB,IACGD,UAAU,CAACI,IAAX,CAAgBT,UAAhB,CADH,GAEI,CAACO,cAFL,GAGIA,cANR;AAQE,MAAA,OAAO,EAAG,KAAKV,gBARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBF,CAJN;AAyCD;;AA1EiC;;AA6EpCR,KAAK,CAACqB,SAAN,GAAkB;AAChBZ,EAAAA,kBAAkB,EAAEd,SAAS,CAAC2B,IAAV,CAAeC;AADnB,CAAlB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxChB,EAAAA,kBAAkB,EAAGiB,IAAD,IAAUD,QAAQ,CAAC3B,SAAS,CAAC4B,IAAD,CAAV;AADE,CAAf,CAA3B;;AAIA,eAAe7B,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkCxB,KAAlC,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { saveEmail } from '../actions';\nimport crypto from '../images/crypto.png';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      emailInput: '',\n      passwordInput: '',\n      willRedirect: false,\n    };\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  redirectToWallet = () => {\n    const { saveEmailinStorage } = this.props;\n    const { emailInput } = this.state;\n    saveEmailinStorage(emailInput);\n    this.setState({\n      willRedirect: true,\n    });\n  }\n\n  render() {\n    const { emailInput, passwordInput, willRedirect } = this.state;\n    const emailRegex = /^[a-z0-9.]+@[a-z0-9]+\\.[a-z]+(\\.[a-z]+)?$/i;\n    const minCharacterPassword = 6;\n    const disabledButton = true;\n\n    return (\n      willRedirect\n        ? <Redirect to=\"/carteira\" />\n        : (\n          <div className=\"login\">\n            <img src={ crypto } alt=\"Crypto Wallet\" />\n            <input\n              type=\"text\"\n              name=\"emailInput\"\n              className=\"loginInput\"\n              placeholder=\"E-mail\"\n              value={ emailInput }\n              onChange={ this.handleChange }\n              data-testid=\"email-input\"\n            />\n\n            <input\n              type=\"password\"\n              name=\"passwordInput\"\n              className=\"loginInput\"\n              value={ passwordInput }\n              onChange={ this.handleChange }\n              placeholder=\"Senha\"\n              data-testid=\"password-input\"\n            />\n\n            <button\n              type=\"button\"\n              disabled={\n                passwordInput.length >= minCharacterPassword\n                && emailRegex.test(emailInput)\n                  ? !disabledButton\n                  : disabledButton\n              }\n              onClick={ this.redirectToWallet }\n            >\n              Entrar\n            </button>\n          </div>\n        )\n    );\n  }\n}\n\nLogin.propTypes = {\n  saveEmailinStorage: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveEmailinStorage: (user) => dispatch(saveEmail(user)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}