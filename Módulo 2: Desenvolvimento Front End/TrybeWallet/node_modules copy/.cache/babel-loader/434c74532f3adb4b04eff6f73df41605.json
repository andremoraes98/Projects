{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStream = void 0;\n\nconst alignTableData_1 = require(\"./alignTableData\");\n\nconst calculateRowHeights_1 = require(\"./calculateRowHeights\");\n\nconst drawBorder_1 = require(\"./drawBorder\");\n\nconst drawRow_1 = require(\"./drawRow\");\n\nconst makeStreamConfig_1 = require(\"./makeStreamConfig\");\n\nconst mapDataUsingRowHeights_1 = require(\"./mapDataUsingRowHeights\");\n\nconst padTableData_1 = require(\"./padTableData\");\n\nconst stringifyTableData_1 = require(\"./stringifyTableData\");\n\nconst truncateTableData_1 = require(\"./truncateTableData\");\n\nconst prepareData = (data, config) => {\n  let rows = (0, stringifyTableData_1.stringifyTableData)(data);\n  rows = (0, truncateTableData_1.truncateTableData)(rows, config);\n  const rowHeights = (0, calculateRowHeights_1.calculateRowHeights)(rows, config);\n  rows = (0, mapDataUsingRowHeights_1.mapDataUsingRowHeights)(rows, rowHeights, config);\n  rows = (0, alignTableData_1.alignTableData)(rows, config);\n  rows = (0, padTableData_1.padTableData)(rows, config);\n  return rows;\n};\n\nconst create = (row, columnWidths, config) => {\n  const rows = prepareData([row], config);\n  const body = rows.map(literalRow => {\n    return (0, drawRow_1.drawRow)(literalRow, config);\n  }).join('');\n  let output;\n  output = '';\n  output += (0, drawBorder_1.drawBorderTop)(columnWidths, config);\n  output += body;\n  output += (0, drawBorder_1.drawBorderBottom)(columnWidths, config);\n  output = output.trimEnd();\n  process.stdout.write(output);\n};\n\nconst append = (row, columnWidths, config) => {\n  const rows = prepareData([row], config);\n  const body = rows.map(literalRow => {\n    return (0, drawRow_1.drawRow)(literalRow, config);\n  }).join('');\n  let output = '';\n  const bottom = (0, drawBorder_1.drawBorderBottom)(columnWidths, config);\n\n  if (bottom !== '\\n') {\n    output = '\\r\\u001B[K';\n  }\n\n  output += (0, drawBorder_1.drawBorderJoin)(columnWidths, config);\n  output += body;\n  output += bottom;\n  output = output.trimEnd();\n  process.stdout.write(output);\n};\n\nconst createStream = userConfig => {\n  const config = (0, makeStreamConfig_1.makeStreamConfig)(userConfig);\n  const columnWidths = Object.values(config.columns).map(column => {\n    return column.width + column.paddingLeft + column.paddingRight;\n  });\n  let empty = true;\n  return {\n    write: row => {\n      if (row.length !== config.columnCount) {\n        throw new Error('Row cell count does not match the config.columnCount.');\n      }\n\n      if (empty) {\n        empty = false;\n        create(row, columnWidths, config);\n      } else {\n        append(row, columnWidths, config);\n      }\n    }\n  };\n};\n\nexports.createStream = createStream;","map":{"version":3,"sources":["/home/andre/Documentos/Projetos/sd-019-b-project-trybewallet/node_modules/stylelint/node_modules/table/dist/src/createStream.js"],"names":["Object","defineProperty","exports","value","createStream","alignTableData_1","require","calculateRowHeights_1","drawBorder_1","drawRow_1","makeStreamConfig_1","mapDataUsingRowHeights_1","padTableData_1","stringifyTableData_1","truncateTableData_1","prepareData","data","config","rows","stringifyTableData","truncateTableData","rowHeights","calculateRowHeights","mapDataUsingRowHeights","alignTableData","padTableData","create","row","columnWidths","body","map","literalRow","drawRow","join","output","drawBorderTop","drawBorderBottom","trimEnd","process","stdout","write","append","bottom","drawBorderJoin","userConfig","makeStreamConfig","values","columns","column","width","paddingLeft","paddingRight","empty","length","columnCount","Error"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createStream = void 0;\nconst alignTableData_1 = require(\"./alignTableData\");\nconst calculateRowHeights_1 = require(\"./calculateRowHeights\");\nconst drawBorder_1 = require(\"./drawBorder\");\nconst drawRow_1 = require(\"./drawRow\");\nconst makeStreamConfig_1 = require(\"./makeStreamConfig\");\nconst mapDataUsingRowHeights_1 = require(\"./mapDataUsingRowHeights\");\nconst padTableData_1 = require(\"./padTableData\");\nconst stringifyTableData_1 = require(\"./stringifyTableData\");\nconst truncateTableData_1 = require(\"./truncateTableData\");\nconst prepareData = (data, config) => {\n    let rows = (0, stringifyTableData_1.stringifyTableData)(data);\n    rows = (0, truncateTableData_1.truncateTableData)(rows, config);\n    const rowHeights = (0, calculateRowHeights_1.calculateRowHeights)(rows, config);\n    rows = (0, mapDataUsingRowHeights_1.mapDataUsingRowHeights)(rows, rowHeights, config);\n    rows = (0, alignTableData_1.alignTableData)(rows, config);\n    rows = (0, padTableData_1.padTableData)(rows, config);\n    return rows;\n};\nconst create = (row, columnWidths, config) => {\n    const rows = prepareData([row], config);\n    const body = rows.map((literalRow) => {\n        return (0, drawRow_1.drawRow)(literalRow, config);\n    }).join('');\n    let output;\n    output = '';\n    output += (0, drawBorder_1.drawBorderTop)(columnWidths, config);\n    output += body;\n    output += (0, drawBorder_1.drawBorderBottom)(columnWidths, config);\n    output = output.trimEnd();\n    process.stdout.write(output);\n};\nconst append = (row, columnWidths, config) => {\n    const rows = prepareData([row], config);\n    const body = rows.map((literalRow) => {\n        return (0, drawRow_1.drawRow)(literalRow, config);\n    }).join('');\n    let output = '';\n    const bottom = (0, drawBorder_1.drawBorderBottom)(columnWidths, config);\n    if (bottom !== '\\n') {\n        output = '\\r\\u001B[K';\n    }\n    output += (0, drawBorder_1.drawBorderJoin)(columnWidths, config);\n    output += body;\n    output += bottom;\n    output = output.trimEnd();\n    process.stdout.write(output);\n};\nconst createStream = (userConfig) => {\n    const config = (0, makeStreamConfig_1.makeStreamConfig)(userConfig);\n    const columnWidths = Object.values(config.columns).map((column) => {\n        return column.width + column.paddingLeft + column.paddingRight;\n    });\n    let empty = true;\n    return {\n        write: (row) => {\n            if (row.length !== config.columnCount) {\n                throw new Error('Row cell count does not match the config.columnCount.');\n            }\n            if (empty) {\n                empty = false;\n                create(row, columnWidths, config);\n            }\n            else {\n                append(row, columnWidths, config);\n            }\n        },\n    };\n};\nexports.createStream = createStream;\n//# sourceMappingURL=createStream.js.map"]},"metadata":{},"sourceType":"script"}