{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documentos/Projetos/sd-019-b-project-trybewallet/src/components/WalletForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchEconomyJSONFromAPI } from '../actions';\nconst ALIMENTAÇÃO = 'Alimentação';\n\nclass WalletForm extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.addExpense = () => {\n      const {\n        saveExpenseInfos,\n        expenses\n      } = this.props;\n      saveExpenseInfos(expenses.length, this.state);\n      this.setState({\n        value: '',\n        descriptionInput: '',\n        currenciesInput: 'USD',\n        methodInput: 'Dinheiro',\n        tag: ALIMENTAÇÃO\n      });\n    };\n\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      methodInput: 'Dinheiro',\n      tag: ALIMENTAÇÃO\n    };\n  }\n\n  render() {\n    const {\n      value,\n      description,\n      currency,\n      methodInput,\n      tag\n    } = this.state;\n    const {\n      currencies\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"value\",\n      name: \"value\",\n      value: value,\n      onChange: this.handleChange,\n      \"data-testid\": \"value-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"Descri\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      name: \"description\",\n      value: description,\n      onChange: this.handleChange,\n      \"data-testid\": \"description-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"Moeda:\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"currency\",\n      id: \"currency\",\n      value: currency,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, currencies.map((eachCurrency, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, eachCurrency)))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"methodInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, \"M\\xE9todo de pagamento:\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"methodInput\",\n      id: \"methodInput\",\n      value: methodInput,\n      onChange: this.handleChange,\n      \"data-testid\": \"method-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, \"Tag da despesa:\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"tag\",\n      id: \"tag\",\n      value: tag,\n      onChange: this.handleChange,\n      \"data-testid\": \"tag-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, \"Sa\\xFAde\"))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.addExpense,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, \"Adicionar despesa\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses\n});\n\nconst mapDispatchToProps = dispatch => ({\n  saveExpenseInfos: (id, expenseInfos) => dispatch(fetchEconomyJSONFromAPI(id, expenseInfos))\n});\n\nWalletForm.propTypes = {\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  saveExpenseInfos: PropTypes.func.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);","map":{"version":3,"sources":["/home/andre/Documentos/Projetos/sd-019-b-project-trybewallet/src/components/WalletForm.js"],"names":["React","Component","connect","PropTypes","fetchEconomyJSONFromAPI","ALIMENTAÇÃO","WalletForm","constructor","handleChange","target","name","value","setState","addExpense","saveExpenseInfos","expenses","props","length","state","descriptionInput","currenciesInput","methodInput","tag","description","currency","render","currencies","map","eachCurrency","index","mapStateToProps","wallet","mapDispatchToProps","dispatch","id","expenseInfos","propTypes","arrayOf","string","isRequired","func","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,uBAAT,QAAwC,YAAxC;AAEA,MAAMC,WAAW,GAAG,aAApB;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AACjCM,EAAAA,WAAW,GAAG;AACZ;;AADY,SAYdC,YAZc,GAYC,QAAgB;AAAA,UAAf;AAAEC,QAAAA;AAAF,OAAe;AAC7B,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,MAAxB;AACA,WAAKG,QAAL,CAAc;AACZ,SAACF,IAAD,GAAQC;AADI,OAAd;AAGD,KAjBa;;AAAA,SAmBdE,UAnBc,GAmBD,MAAM;AACjB,YAAM;AAAEC,QAAAA,gBAAF;AAAoBC,QAAAA;AAApB,UAAiC,KAAKC,KAA5C;AACAF,MAAAA,gBAAgB,CAACC,QAAQ,CAACE,MAAV,EAAkB,KAAKC,KAAvB,CAAhB;AACA,WAAKN,QAAL,CAAc;AACZD,QAAAA,KAAK,EAAE,EADK;AAEZQ,QAAAA,gBAAgB,EAAE,EAFN;AAGZC,QAAAA,eAAe,EAAE,KAHL;AAIZC,QAAAA,WAAW,EAAE,UAJD;AAKZC,QAAAA,GAAG,EAAEjB;AALO,OAAd;AAOD,KA7Ba;;AAGZ,SAAKa,KAAL,GAAa;AACXP,MAAAA,KAAK,EAAE,EADI;AAEXY,MAAAA,WAAW,EAAE,EAFF;AAGXC,MAAAA,QAAQ,EAAE,KAHC;AAIXH,MAAAA,WAAW,EAAE,UAJF;AAKXC,MAAAA,GAAG,EAAEjB;AALM,KAAb;AAOD;;AAqBDoB,EAAAA,MAAM,GAAG;AACP,UAAM;AACJd,MAAAA,KADI;AAEJY,MAAAA,WAFI;AAGJC,MAAAA,QAHI;AAIJH,MAAAA,WAJI;AAKJC,MAAAA;AALI,QAMF,KAAKJ,KANT;AAOA,UAAM;AAAEQ,MAAAA;AAAF,QAAiB,KAAKV,KAA5B;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,OAFL;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,KAAK,EAAGL,KAJV;AAKE,MAAA,QAAQ,EAAG,KAAKH,YALlB;AAME,qBAAY,aANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAaE;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,aAFL;AAGE,MAAA,IAAI,EAAC,aAHP;AAIE,MAAA,KAAK,EAAGe,WAJV;AAKE,MAAA,QAAQ,EAAG,KAAKf,YALlB;AAME,qBAAY,mBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAbF,eAyBE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,EAAE,EAAC,UAFL;AAGE,MAAA,KAAK,EAAGgB,QAHV;AAIE,MAAA,QAAQ,EAAG,KAAKhB,YAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMIkB,UAAU,CAACC,GAAX,CAAe,CAACC,YAAD,EAAeC,KAAf,kBACf;AAAQ,MAAA,GAAG,EAAGA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBD,YAAvB,CADA,CANJ,CAFF,CAzBF,eAuCE;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEE;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,EAAE,EAAC,aAFL;AAGE,MAAA,KAAK,EAAGP,WAHV;AAIE,MAAA,QAAQ,EAAG,KAAKb,YAJlB;AAKE,qBAAY,cALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCATF,CAFF,CAvCF,eAsDE;AAAO,MAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAEE;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,EAAE,EAAC,KAFL;AAGE,MAAA,KAAK,EAAGc,GAHV;AAIE,MAAA,QAAQ,EAAG,KAAKd,YAJlB;AAKE,qBAAY,WALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,CAFF,CAtDF,eAuEE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAG,KAAKK,UAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAvEF,CADF;AAgFD;;AAzHgC;;AA4HnC,MAAMiB,eAAe,GAAIZ,KAAD,KAAY;AAClCQ,EAAAA,UAAU,EAAER,KAAK,CAACa,MAAN,CAAaL,UADS;AAElCX,EAAAA,QAAQ,EAAEG,KAAK,CAACa,MAAN,CAAahB;AAFW,CAAZ,CAAxB;;AAKA,MAAMiB,kBAAkB,GAAIC,QAAD,KAAe;AACxCnB,EAAAA,gBAAgB,EAAE,CAChBoB,EADgB,EACZC,YADY,KAEbF,QAAQ,CAAC7B,uBAAuB,CAAC8B,EAAD,EAAKC,YAAL,CAAxB;AAH2B,CAAf,CAA3B;;AAMA7B,UAAU,CAAC8B,SAAX,GAAuB;AACrBV,EAAAA,UAAU,EAAEvB,SAAS,CAACkC,OAAV,CAAkBlC,SAAS,CAACmC,MAA5B,EAAoCC,UAD3B;AAErBzB,EAAAA,gBAAgB,EAAEX,SAAS,CAACqC,IAAV,CAAeD,UAFZ;AAGrBxB,EAAAA,QAAQ,EAAEZ,SAAS,CAACkC,OAAV,CAAkBlC,SAAS,CAACsC,MAA5B,EAAoCF;AAHzB,CAAvB;AAMA,eAAerC,OAAO,CAAC4B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C1B,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchEconomyJSONFromAPI } from '../actions';\n\nconst ALIMENTAÇÃO = 'Alimentação';\n\nclass WalletForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      methodInput: 'Dinheiro',\n      tag: ALIMENTAÇÃO,\n    };\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  addExpense = () => {\n    const { saveExpenseInfos, expenses } = this.props;\n    saveExpenseInfos(expenses.length, this.state);\n    this.setState({\n      value: '',\n      descriptionInput: '',\n      currenciesInput: 'USD',\n      methodInput: 'Dinheiro',\n      tag: ALIMENTAÇÃO,\n    });\n  }\n\n  render() {\n    const {\n      value,\n      description,\n      currency,\n      methodInput,\n      tag,\n    } = this.state;\n    const { currencies } = this.props;\n    return (\n      <form>\n        <label htmlFor=\"value\">\n          Valor:\n          <input\n            type=\"text\"\n            id=\"value\"\n            name=\"value\"\n            value={ value }\n            onChange={ this.handleChange }\n            data-testid=\"value-input\"\n          />\n        </label>\n\n        <label htmlFor=\"description\">\n          Descrição:\n          <input\n            type=\"text\"\n            id=\"description\"\n            name=\"description\"\n            value={ description }\n            onChange={ this.handleChange }\n            data-testid=\"description-input\"\n          />\n        </label>\n\n        <label htmlFor=\"currency\">\n          Moeda:\n          <select\n            name=\"currency\"\n            id=\"currency\"\n            value={ currency }\n            onChange={ this.handleChange }\n          >\n            { currencies.map((eachCurrency, index) => (\n              <option key={ index }>{eachCurrency}</option>\n            ))}\n          </select>\n        </label>\n\n        <label htmlFor=\"methodInput\">\n          Método de pagamento:\n          <select\n            name=\"methodInput\"\n            id=\"methodInput\"\n            value={ methodInput }\n            onChange={ this.handleChange }\n            data-testid=\"method-input\"\n          >\n            <option>Dinheiro</option>\n            <option>Cartão de crédito</option>\n            <option>Cartão de débito</option>\n          </select>\n        </label>\n\n        <label htmlFor=\"tag\">\n          Tag da despesa:\n          <select\n            name=\"tag\"\n            id=\"tag\"\n            value={ tag }\n            onChange={ this.handleChange }\n            data-testid=\"tag-input\"\n          >\n            <option>Alimentação</option>\n            <option>Lazer</option>\n            <option>Trabalho</option>\n            <option>Transporte</option>\n            <option>Saúde</option>\n          </select>\n        </label>\n\n        <button\n          type=\"button\"\n          onClick={ this.addExpense }\n        >\n          Adicionar despesa\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveExpenseInfos: (\n    id, expenseInfos,\n  ) => dispatch(fetchEconomyJSONFromAPI(id, expenseInfos)),\n});\n\nWalletForm.propTypes = {\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  saveExpenseInfos: PropTypes.func.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);\n"]},"metadata":{},"sourceType":"module"}