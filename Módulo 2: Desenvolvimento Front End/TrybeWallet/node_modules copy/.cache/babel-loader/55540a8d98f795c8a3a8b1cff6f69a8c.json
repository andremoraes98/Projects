{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.drawTable = void 0;\n\nconst string_width_1 = __importDefault(require(\"string-width\"));\n\nconst drawBorder_1 = require(\"./drawBorder\");\n\nconst drawContent_1 = require(\"./drawContent\");\n\nconst drawHeader_1 = require(\"./drawHeader\");\n\nconst drawRow_1 = require(\"./drawRow\");\n\nconst utils_1 = require(\"./utils\");\n\nconst drawTable = (rows, columnWidths, rowHeights, config) => {\n  const {\n    drawHorizontalLine,\n    singleLine\n  } = config;\n  const contents = (0, utils_1.groupBySizes)(rows, rowHeights).map(group => {\n    return group.map(row => {\n      return (0, drawRow_1.drawRow)(row, config);\n    }).join('');\n  });\n\n  if (config.header) {\n    // assume that topLeft/right border have width = 1\n    const headerWidth = (0, string_width_1.default)((0, drawRow_1.drawRow)(rows[0], config)) - 2 - config.header.paddingLeft - config.header.paddingRight;\n    const header = (0, drawHeader_1.drawHeader)(headerWidth, config);\n    contents.unshift(header);\n  }\n\n  return (0, drawContent_1.drawContent)(contents, {\n    drawSeparator: (index, size) => {\n      // Top/bottom border\n      if (index === 0 || index === size) {\n        return drawHorizontalLine(index, size);\n      }\n\n      return !singleLine && drawHorizontalLine(index, size);\n    },\n    separatorGetter: (0, drawBorder_1.createTableBorderGetter)(columnWidths, config)\n  });\n};\n\nexports.drawTable = drawTable;","map":{"version":3,"sources":["/home/andre/Documentos/Projetos/sd-019-b-project-trybewallet/node_modules/stylelint/node_modules/table/dist/src/drawTable.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","drawTable","string_width_1","require","drawBorder_1","drawContent_1","drawHeader_1","drawRow_1","utils_1","rows","columnWidths","rowHeights","config","drawHorizontalLine","singleLine","contents","groupBySizes","map","group","row","drawRow","join","header","headerWidth","default","paddingLeft","paddingRight","drawHeader","unshift","drawContent","drawSeparator","index","size","separatorGetter","createTableBorderGetter"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,SAAR,GAAoB,KAAK,CAAzB;;AACA,MAAMC,cAAc,GAAGR,eAAe,CAACS,OAAO,CAAC,cAAD,CAAR,CAAtC;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,cAAD,CAA5B;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,eAAD,CAA7B;;AACA,MAAMG,YAAY,GAAGH,OAAO,CAAC,cAAD,CAA5B;;AACA,MAAMI,SAAS,GAAGJ,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAMK,OAAO,GAAGL,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMF,SAAS,GAAG,CAACQ,IAAD,EAAOC,YAAP,EAAqBC,UAArB,EAAiCC,MAAjC,KAA4C;AAC1D,QAAM;AAAEC,IAAAA,kBAAF;AAAsBC,IAAAA;AAAtB,MAAsCF,MAA5C;AACA,QAAMG,QAAQ,GAAG,CAAC,GAAGP,OAAO,CAACQ,YAAZ,EAA0BP,IAA1B,EAAgCE,UAAhC,EAA4CM,GAA5C,CAAiDC,KAAD,IAAW;AACxE,WAAOA,KAAK,CAACD,GAAN,CAAWE,GAAD,IAAS;AACtB,aAAO,CAAC,GAAGZ,SAAS,CAACa,OAAd,EAAuBD,GAAvB,EAA4BP,MAA5B,CAAP;AACH,KAFM,EAEJS,IAFI,CAEC,EAFD,CAAP;AAGH,GAJgB,CAAjB;;AAKA,MAAIT,MAAM,CAACU,MAAX,EAAmB;AACf;AACA,UAAMC,WAAW,GAAG,CAAC,GAAGrB,cAAc,CAACsB,OAAnB,EAA4B,CAAC,GAAGjB,SAAS,CAACa,OAAd,EAAuBX,IAAI,CAAC,CAAD,CAA3B,EAAgCG,MAAhC,CAA5B,IAAuE,CAAvE,GAChBA,MAAM,CAACU,MAAP,CAAcG,WADE,GACYb,MAAM,CAACU,MAAP,CAAcI,YAD9C;AAEA,UAAMJ,MAAM,GAAG,CAAC,GAAGhB,YAAY,CAACqB,UAAjB,EAA6BJ,WAA7B,EAA0CX,MAA1C,CAAf;AACAG,IAAAA,QAAQ,CAACa,OAAT,CAAiBN,MAAjB;AACH;;AACD,SAAO,CAAC,GAAGjB,aAAa,CAACwB,WAAlB,EAA+Bd,QAA/B,EAAyC;AAC5Ce,IAAAA,aAAa,EAAE,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC5B;AACA,UAAID,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAKC,IAA7B,EAAmC;AAC/B,eAAOnB,kBAAkB,CAACkB,KAAD,EAAQC,IAAR,CAAzB;AACH;;AACD,aAAO,CAAClB,UAAD,IAAeD,kBAAkB,CAACkB,KAAD,EAAQC,IAAR,CAAxC;AACH,KAP2C;AAQ5CC,IAAAA,eAAe,EAAE,CAAC,GAAG7B,YAAY,CAAC8B,uBAAjB,EAA0CxB,YAA1C,EAAwDE,MAAxD;AAR2B,GAAzC,CAAP;AAUH,CAxBD;;AAyBAb,OAAO,CAACE,SAAR,GAAoBA,SAApB","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.drawTable = void 0;\nconst string_width_1 = __importDefault(require(\"string-width\"));\nconst drawBorder_1 = require(\"./drawBorder\");\nconst drawContent_1 = require(\"./drawContent\");\nconst drawHeader_1 = require(\"./drawHeader\");\nconst drawRow_1 = require(\"./drawRow\");\nconst utils_1 = require(\"./utils\");\nconst drawTable = (rows, columnWidths, rowHeights, config) => {\n    const { drawHorizontalLine, singleLine, } = config;\n    const contents = (0, utils_1.groupBySizes)(rows, rowHeights).map((group) => {\n        return group.map((row) => {\n            return (0, drawRow_1.drawRow)(row, config);\n        }).join('');\n    });\n    if (config.header) {\n        // assume that topLeft/right border have width = 1\n        const headerWidth = (0, string_width_1.default)((0, drawRow_1.drawRow)(rows[0], config)) - 2 -\n            config.header.paddingLeft - config.header.paddingRight;\n        const header = (0, drawHeader_1.drawHeader)(headerWidth, config);\n        contents.unshift(header);\n    }\n    return (0, drawContent_1.drawContent)(contents, {\n        drawSeparator: (index, size) => {\n            // Top/bottom border\n            if (index === 0 || index === size) {\n                return drawHorizontalLine(index, size);\n            }\n            return !singleLine && drawHorizontalLine(index, size);\n        },\n        separatorGetter: (0, drawBorder_1.createTableBorderGetter)(columnWidths, config),\n    });\n};\nexports.drawTable = drawTable;\n//# sourceMappingURL=drawTable.js.map"]},"metadata":{},"sourceType":"script"}