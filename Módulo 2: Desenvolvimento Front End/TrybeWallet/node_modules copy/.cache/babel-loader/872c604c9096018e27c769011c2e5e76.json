{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.drawBorderTop = exports.drawBorderJoin = exports.drawBorderBottom = exports.drawBorder = exports.createTableBorderGetter = void 0;\n\nconst drawContent_1 = require(\"./drawContent\");\n\nconst drawBorder = (columnWidths, config) => {\n  const {\n    separator,\n    drawVerticalLine\n  } = config;\n  const columns = columnWidths.map(size => {\n    return config.separator.body.repeat(size);\n  });\n  return (0, drawContent_1.drawContent)(columns, {\n    drawSeparator: drawVerticalLine,\n    separatorGetter: (index, columnCount) => {\n      if (index === 0) {\n        return separator.left;\n      }\n\n      if (index === columnCount) {\n        return separator.right;\n      }\n\n      return separator.join;\n    }\n  }) + '\\n';\n};\n\nexports.drawBorder = drawBorder;\n\nconst drawBorderTop = (columnWidths, config) => {\n  const result = drawBorder(columnWidths, { ...config,\n    separator: {\n      body: config.border.topBody,\n      join: config.border.topJoin,\n      left: config.border.topLeft,\n      right: config.border.topRight\n    }\n  });\n\n  if (result === '\\n') {\n    return '';\n  }\n\n  return result;\n};\n\nexports.drawBorderTop = drawBorderTop;\n\nconst drawBorderJoin = (columnWidths, config) => {\n  return drawBorder(columnWidths, { ...config,\n    separator: {\n      body: config.border.joinBody,\n      join: config.border.joinJoin,\n      left: config.border.joinLeft,\n      right: config.border.joinRight\n    }\n  });\n};\n\nexports.drawBorderJoin = drawBorderJoin;\n\nconst drawBorderBottom = (columnWidths, config) => {\n  return drawBorder(columnWidths, { ...config,\n    separator: {\n      body: config.border.bottomBody,\n      join: config.border.bottomJoin,\n      left: config.border.bottomLeft,\n      right: config.border.bottomRight\n    }\n  });\n};\n\nexports.drawBorderBottom = drawBorderBottom;\n\nconst createTableBorderGetter = (columnWidths, config) => {\n  return (index, size) => {\n    if (!config.header) {\n      if (index === 0) {\n        return drawBorderTop(columnWidths, config);\n      }\n\n      if (index === size) {\n        return drawBorderBottom(columnWidths, config);\n      }\n\n      return drawBorderJoin(columnWidths, config);\n    } // Deal with the header\n\n\n    if (index === 0) {\n      return drawBorderTop(columnWidths, { ...config,\n        border: { ...config.border,\n          topJoin: config.border.topBody\n        }\n      });\n    }\n\n    if (index === 1) {\n      return drawBorderJoin(columnWidths, { ...config,\n        border: { ...config.border,\n          joinJoin: config.border.headerJoin\n        }\n      });\n    }\n\n    if (index === size) {\n      return drawBorderBottom(columnWidths, config);\n    }\n\n    return drawBorderJoin(columnWidths, config);\n  };\n};\n\nexports.createTableBorderGetter = createTableBorderGetter;","map":{"version":3,"sources":["/home/andre/Documentos/Projetos/sd-019-b-project-trybewallet/node_modules/stylelint/node_modules/table/dist/src/drawBorder.js"],"names":["Object","defineProperty","exports","value","drawBorderTop","drawBorderJoin","drawBorderBottom","drawBorder","createTableBorderGetter","drawContent_1","require","columnWidths","config","separator","drawVerticalLine","columns","map","size","body","repeat","drawContent","drawSeparator","separatorGetter","index","columnCount","left","right","join","result","border","topBody","topJoin","topLeft","topRight","joinBody","joinJoin","joinLeft","joinRight","bottomBody","bottomJoin","bottomLeft","bottomRight","header","headerJoin"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.drawBorderTop = exports.drawBorderJoin = exports.drawBorderBottom = exports.drawBorder = exports.createTableBorderGetter = void 0;\nconst drawContent_1 = require(\"./drawContent\");\nconst drawBorder = (columnWidths, config) => {\n    const { separator, drawVerticalLine } = config;\n    const columns = columnWidths.map((size) => {\n        return config.separator.body.repeat(size);\n    });\n    return (0, drawContent_1.drawContent)(columns, {\n        drawSeparator: drawVerticalLine,\n        separatorGetter: (index, columnCount) => {\n            if (index === 0) {\n                return separator.left;\n            }\n            if (index === columnCount) {\n                return separator.right;\n            }\n            return separator.join;\n        },\n    }) + '\\n';\n};\nexports.drawBorder = drawBorder;\nconst drawBorderTop = (columnWidths, config) => {\n    const result = drawBorder(columnWidths, {\n        ...config,\n        separator: {\n            body: config.border.topBody,\n            join: config.border.topJoin,\n            left: config.border.topLeft,\n            right: config.border.topRight,\n        },\n    });\n    if (result === '\\n') {\n        return '';\n    }\n    return result;\n};\nexports.drawBorderTop = drawBorderTop;\nconst drawBorderJoin = (columnWidths, config) => {\n    return drawBorder(columnWidths, {\n        ...config,\n        separator: {\n            body: config.border.joinBody,\n            join: config.border.joinJoin,\n            left: config.border.joinLeft,\n            right: config.border.joinRight,\n        },\n    });\n};\nexports.drawBorderJoin = drawBorderJoin;\nconst drawBorderBottom = (columnWidths, config) => {\n    return drawBorder(columnWidths, {\n        ...config,\n        separator: {\n            body: config.border.bottomBody,\n            join: config.border.bottomJoin,\n            left: config.border.bottomLeft,\n            right: config.border.bottomRight,\n        },\n    });\n};\nexports.drawBorderBottom = drawBorderBottom;\nconst createTableBorderGetter = (columnWidths, config) => {\n    return (index, size) => {\n        if (!config.header) {\n            if (index === 0) {\n                return drawBorderTop(columnWidths, config);\n            }\n            if (index === size) {\n                return drawBorderBottom(columnWidths, config);\n            }\n            return drawBorderJoin(columnWidths, config);\n        }\n        // Deal with the header\n        if (index === 0) {\n            return drawBorderTop(columnWidths, {\n                ...config,\n                border: {\n                    ...config.border,\n                    topJoin: config.border.topBody,\n                },\n            });\n        }\n        if (index === 1) {\n            return drawBorderJoin(columnWidths, {\n                ...config,\n                border: {\n                    ...config.border,\n                    joinJoin: config.border.headerJoin,\n                },\n            });\n        }\n        if (index === size) {\n            return drawBorderBottom(columnWidths, config);\n        }\n        return drawBorderJoin(columnWidths, config);\n    };\n};\nexports.createTableBorderGetter = createTableBorderGetter;\n//# sourceMappingURL=drawBorder.js.map"]},"metadata":{},"sourceType":"script"}