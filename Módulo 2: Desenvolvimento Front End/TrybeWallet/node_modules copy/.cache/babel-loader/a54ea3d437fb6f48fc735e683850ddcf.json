{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documentos/Projetos/sd-019-b-project-trybewallet/src/components/WalletForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass WalletForm extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.addExpense = () => {\n      const {\n        saveInfosInExpenses\n      } = this.props;\n    };\n\n    this.state = {\n      valueInput: '',\n      descriptionInput: '',\n      currenciesInput: 'USD',\n      methodInput: 'Dinheiro',\n      tag: 'Alimentação'\n    };\n  }\n\n  render() {\n    const {\n      valueInput,\n      descriptionInput,\n      currenciesInput,\n      methodInput,\n      tag\n    } = this.state;\n    const {\n      currencies\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"valueInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"valueInput\",\n      name: \"valueInput\",\n      value: valueInput,\n      onChange: this.handleChange,\n      \"data-testid\": \"value-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"descriptionInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Descri\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"descriptionInput\",\n      name: \"descriptionInput\",\n      value: descriptionInput,\n      onChange: this.handleChange,\n      \"data-testid\": \"description-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currenciesInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"Moeda:\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"currenciesInput\",\n      id: \"currenciesInput\",\n      value: currenciesInput,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, currencies.map((currency, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, currency)))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"methodInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, \"M\\xE9todo de pagamento:\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"methodInput\",\n      id: \"methodInput\",\n      value: methodInput,\n      onChange: this.handleChange,\n      \"data-testid\": \"method-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, \"Tag da despesa:\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"tag\",\n      id: \"tag\",\n      value: tag,\n      onChange: this.handleChange,\n      \"data-testid\": \"tag-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, \"Sa\\xFAde\"))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.addExpense,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, \"Adicionar despesa\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currencies: state.wallet.currencies\n});\n\nconst mapDispatchToProps = dispatch => ({\n  saveInfosInExpenses: () => dispatch()\n});\n\nWalletForm.propTypes = {\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);","map":{"version":3,"sources":["/home/andre/Documentos/Projetos/sd-019-b-project-trybewallet/src/components/WalletForm.js"],"names":["React","Component","connect","PropTypes","WalletForm","constructor","handleChange","target","name","value","setState","addExpense","saveInfosInExpenses","props","state","valueInput","descriptionInput","currenciesInput","methodInput","tag","render","currencies","map","currency","index","mapStateToProps","wallet","mapDispatchToProps","dispatch","propTypes","arrayOf","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass WalletForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      valueInput: '',\n      descriptionInput: '',\n      currenciesInput: 'USD',\n      methodInput: 'Dinheiro',\n      tag: 'Alimentação',\n    };\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  addExpense = () => {\n    const { saveInfosInExpenses } = this.props;\n\n  }\n\n  render() {\n    const {\n      valueInput,\n      descriptionInput,\n      currenciesInput,\n      methodInput,\n      tag,\n    } = this.state;\n    const { currencies } = this.props;\n    return (\n      <form>\n        <label htmlFor=\"valueInput\">\n          Valor:\n          <input\n            type=\"text\"\n            id=\"valueInput\"\n            name=\"valueInput\"\n            value={ valueInput }\n            onChange={ this.handleChange }\n            data-testid=\"value-input\"\n          />\n        </label>\n\n        <label htmlFor=\"descriptionInput\">\n          Descrição:\n          <input\n            type=\"text\"\n            id=\"descriptionInput\"\n            name=\"descriptionInput\"\n            value={ descriptionInput }\n            onChange={ this.handleChange }\n            data-testid=\"description-input\"\n          />\n        </label>\n\n        <label htmlFor=\"currenciesInput\">\n          Moeda:\n          <select\n            name=\"currenciesInput\"\n            id=\"currenciesInput\"\n            value={ currenciesInput }\n            onChange={ this.handleChange }\n          >\n            { currencies.map((currency, index) => (\n              <option key={ index }>{currency}</option>\n            ))}\n          </select>\n        </label>\n\n        <label htmlFor=\"methodInput\">\n          Método de pagamento:\n          <select\n            name=\"methodInput\"\n            id=\"methodInput\"\n            value={ methodInput }\n            onChange={ this.handleChange }\n            data-testid=\"method-input\"\n          >\n            <option>Dinheiro</option>\n            <option>Cartão de crédito</option>\n            <option>Cartão de débito</option>\n          </select>\n        </label>\n\n        <label htmlFor=\"tag\">\n          Tag da despesa:\n          <select\n            name=\"tag\"\n            id=\"tag\"\n            value={ tag }\n            onChange={ this.handleChange }\n            data-testid=\"tag-input\"\n          >\n            <option>Alimentação</option>\n            <option>Lazer</option>\n            <option>Trabalho</option>\n            <option>Transporte</option>\n            <option>Saúde</option>\n          </select>\n        </label>\n\n        <button\n          type=\"button\"\n          onClick={ this.addExpense }\n        >\n          Adicionar despesa\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveInfosInExpenses: () => dispatch(),\n});\n\nWalletForm.propTypes = {\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);\n"]},"metadata":{},"sourceType":"module"}