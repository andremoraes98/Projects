{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documentos/Projetos/sd-019-b-project-trybewallet/src/components/EdittionWalletForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { changeExpense } from '../actions';\nconst ALIMENTAÇÃO = 'Alimentação';\n\nclass WalletForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.addExpense = () => {\n      const {\n        saveExpenseInfos,\n        expenses\n      } = this.props;\n      saveExpenseInfos(expenses.length, this.state);\n      this.setState({\n        value: '',\n        description: '',\n        currency: 'USD',\n        method: 'Dinheiro',\n        tag: ALIMENTAÇÃO\n      });\n    };\n\n    const {\n      selectedEditExpense\n    } = this.props;\n    this.state = selectedEditExpense;\n  }\n\n  render() {\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag\n    } = this.state;\n    const {\n      currencies,\n      selectedEditExpense\n    } = this.props;\n    console.log(selectedEditExpense);\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"value\",\n      name: \"value\",\n      value: value,\n      onChange: this.handleChange,\n      \"data-testid\": \"value-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"Descri\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      name: \"description\",\n      value: description,\n      onChange: this.handleChange,\n      \"data-testid\": \"description-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Moeda:\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"currency\",\n      id: \"currency\",\n      value: currency,\n      onChange: this.handleChange,\n      \"data-testid\": \"currency-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, currencies.map((eachCurrency, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, eachCurrency)))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, \"M\\xE9todo de pagamento:\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"method\",\n      id: \"method\",\n      value: method,\n      onChange: this.handleChange,\n      \"data-testid\": \"method-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, \"Tag da despesa:\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"tag\",\n      id: \"tag\",\n      value: tag,\n      onChange: this.handleChange,\n      \"data-testid\": \"tag-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"Sa\\xFAde\"))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.addExpense,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, \"Editar despesa\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n  selectedEditExpense: state.wallet.selectedExpense\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeExpenseInfo: (id, expenseInfos) => dispatch(changeExpense(id, expenseInfos))\n});\n\nWalletForm.propTypes = {\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  saveExpenseInfos: PropTypes.func.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectedEditExpense: PropTypes.shape({\n    currency: PropTypes.string,\n    description: PropTypes.string,\n    exchangeRates: PropTypes.objectOf(PropTypes.object),\n    id: PropTypes.number,\n    method: PropTypes.string,\n    tag: PropTypes.string,\n    value: PropTypes.string\n  }).isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);","map":{"version":3,"sources":["/home/andre/Documentos/Projetos/sd-019-b-project-trybewallet/src/components/EdittionWalletForm.js"],"names":["React","Component","connect","PropTypes","changeExpense","ALIMENTAÇÃO","WalletForm","constructor","props","handleChange","target","name","value","setState","addExpense","saveExpenseInfos","expenses","length","state","description","currency","method","tag","selectedEditExpense","render","currencies","console","log","map","eachCurrency","index","mapStateToProps","wallet","selectedExpense","mapDispatchToProps","dispatch","changeExpenseInfo","id","expenseInfos","propTypes","arrayOf","string","isRequired","func","object","shape","exchangeRates","objectOf","number"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { changeExpense } from '../actions';\n\nconst ALIMENTAÇÃO = 'Alimentação';\n\nclass WalletForm extends Component {\n  constructor(props) {\n    super(props);\n\n    const { selectedEditExpense } = this.props;\n\n    this.state = selectedEditExpense;\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  addExpense = () => {\n    const { saveExpenseInfos, expenses } = this.props;\n    saveExpenseInfos(expenses.length, this.state);\n    this.setState({\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: ALIMENTAÇÃO,\n    });\n  }\n\n  render() {\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag } = this.state;\n    const { currencies, selectedEditExpense } = this.props;\n    console.log(selectedEditExpense);\n    return (\n      <form>\n        <label htmlFor=\"value\">\n          Valor:\n          <input\n            type=\"text\"\n            id=\"value\"\n            name=\"value\"\n            value={ value }\n            onChange={ this.handleChange }\n            data-testid=\"value-input\"\n          />\n        </label>\n\n        <label htmlFor=\"description\">\n          Descrição:\n          <input\n            type=\"text\"\n            id=\"description\"\n            name=\"description\"\n            value={ description }\n            onChange={ this.handleChange }\n            data-testid=\"description-input\"\n          />\n        </label>\n\n        <label htmlFor=\"currency\">\n          Moeda:\n          <select\n            name=\"currency\"\n            id=\"currency\"\n            value={ currency }\n            onChange={ this.handleChange }\n            data-testid=\"currency-input\"\n          >\n            { currencies.map((eachCurrency, index) => (\n              <option key={ index }>{eachCurrency}</option>\n            ))}\n          </select>\n        </label>\n\n        <label htmlFor=\"method\">\n          Método de pagamento:\n          <select\n            name=\"method\"\n            id=\"method\"\n            value={ method }\n            onChange={ this.handleChange }\n            data-testid=\"method-input\"\n          >\n            <option>Dinheiro</option>\n            <option>Cartão de crédito</option>\n            <option>Cartão de débito</option>\n          </select>\n        </label>\n\n        <label htmlFor=\"tag\">\n          Tag da despesa:\n          <select\n            name=\"tag\"\n            id=\"tag\"\n            value={ tag }\n            onChange={ this.handleChange }\n            data-testid=\"tag-input\"\n          >\n            <option>Alimentação</option>\n            <option>Lazer</option>\n            <option>Trabalho</option>\n            <option>Transporte</option>\n            <option>Saúde</option>\n          </select>\n        </label>\n\n        <button\n          type=\"button\"\n          onClick={ this.addExpense }\n        >\n          Editar despesa\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n  selectedEditExpense: state.wallet.selectedExpense,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeExpenseInfo: (\n    id, expenseInfos,\n  ) => dispatch(changeExpense(id, expenseInfos)),\n});\n\nWalletForm.propTypes = {\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  saveExpenseInfos: PropTypes.func.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectedEditExpense: PropTypes.shape({\n    currency: PropTypes.string,\n    description: PropTypes.string,\n    exchangeRates: PropTypes.objectOf(PropTypes.object),\n    id: PropTypes.number,\n    method: PropTypes.string,\n    tag: PropTypes.string,\n    value: PropTypes.string,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);\n"]},"metadata":{},"sourceType":"module"}