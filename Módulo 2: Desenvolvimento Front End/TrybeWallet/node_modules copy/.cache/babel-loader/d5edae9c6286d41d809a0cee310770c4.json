{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documentos/Projetos/sd-019-b-project-trybewallet/src/components/Header.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport crypto from '../images/crypto.png';\n\nclass Header extends Component {\n  render() {\n    const {\n      userEmail,\n      expenses\n    } = this.props;\n    const startValues = expenses.map(expense => expense.value * Object.entries(expense.exchangeRates).filter(currency => currency[0] === expense.currency)[0][1].ask);\n    const totalValue = startValues.reduce((acumulator, startValue) => acumulator + startValue, 0);\n    console.log(expenses.map(expense => expense.value));\n    return /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: crypto,\n      alt: \"Crypto Wallet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"userInfos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, \"Email:\", /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, userEmail)), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, totalValue.toFixed(2)), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, \"BRL\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userEmail: state.user.email,\n  expenses: state.wallet.expenses\n});\n\nHeader.propTypes = {\n  userEmail: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["/home/andre/Documentos/Projetos/sd-019-b-project-trybewallet/src/components/Header.js"],"names":["React","Component","connect","PropTypes","crypto","Header","render","userEmail","expenses","props","startValues","map","expense","value","Object","entries","exchangeRates","filter","currency","ask","totalValue","reduce","acumulator","startValue","console","log","toFixed","mapStateToProps","state","user","email","wallet","propTypes","string","isRequired","arrayOf","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAC7BK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA0B,KAAKC,KAArC;AACA,UAAMC,WAAW,GAAGF,QAAQ,CACzBG,GADiB,CACZC,OAAD,IAAaA,OAAO,CAACC,KAAR,GAAgBC,MAAM,CAACC,OAAP,CAAeH,OAAO,CAACI,aAAvB,EAC/BC,MAD+B,CACvBC,QAAD,IAAcA,QAAQ,CAAC,CAAD,CAAR,KAAgBN,OAAO,CAACM,QADd,EACwB,CADxB,EAC2B,CAD3B,EAC8BC,GAF9C,CAApB;AAGA,UAAMC,UAAU,GAAGV,WAAW,CAC3BW,MADgB,CACT,CAACC,UAAD,EAAaC,UAAb,KAA4BD,UAAU,GAAGC,UADhC,EAC4C,CAD5C,CAAnB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAQ,CAACG,GAAT,CAAcC,OAAD,IAAaA,OAAO,CAACC,KAAlC,CAAZ;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAGT,MAAX;AAAoB,MAAA,GAAG,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEE;AAAM,qBAAY,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCG,SAAjC,CAFF,CADF,eAME;AAAG,qBAAY,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIa,UAAU,CAACM,OAAX,CAAmB,CAAnB,CADJ,CANF,eAUE;AAAG,qBAAY,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVF,CAFF,CADF;AAmBD;;AA5B4B;;AA+B/B,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCrB,EAAAA,SAAS,EAAEqB,KAAK,CAACC,IAAN,CAAWC,KADY;AAElCtB,EAAAA,QAAQ,EAAEoB,KAAK,CAACG,MAAN,CAAavB;AAFW,CAAZ,CAAxB;;AAKAH,MAAM,CAAC2B,SAAP,GAAmB;AACjBzB,EAAAA,SAAS,EAAEJ,SAAS,CAAC8B,MAAV,CAAiBC,UADX;AAEjB1B,EAAAA,QAAQ,EAAEL,SAAS,CAACgC,OAAV,CAAkBhC,SAAS,CAACiC,MAA5B,EAAoCF;AAF7B,CAAnB;AAKA,eAAehC,OAAO,CAACyB,eAAD,CAAP,CAAyBtB,MAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport crypto from '../images/crypto.png';\n\nclass Header extends Component {\n  render() {\n    const { userEmail, expenses } = this.props;\n    const startValues = expenses\n      .map((expense) => expense.value * Object.entries(expense.exchangeRates)\n        .filter((currency) => currency[0] === expense.currency)[0][1].ask);\n    const totalValue = startValues\n      .reduce((acumulator, startValue) => acumulator + startValue, 0);\n    console.log(expenses.map((expense) => expense.value));\n    return (\n      <header>\n        <img src={ crypto } alt=\"Crypto Wallet\" />\n        <div className=\"userInfos\">\n          <p>\n            Email:\n            <span data-testid=\"email-field\">{userEmail}</span>\n          </p>\n\n          <p data-testid=\"total-field\">\n            { totalValue.toFixed(2) }\n          </p>\n\n          <p data-testid=\"header-currency-field\">\n            BRL\n          </p>\n        </div>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  userEmail: state.user.email,\n  expenses: state.wallet.expenses,\n});\n\nHeader.propTypes = {\n  userEmail: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default connect(mapStateToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}