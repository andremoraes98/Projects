{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.padTableData = exports.padString = void 0;\n\nconst padString = (input, paddingLeft, paddingRight) => {\n  return ' '.repeat(paddingLeft) + input + ' '.repeat(paddingRight);\n};\n\nexports.padString = padString;\n\nconst padTableData = (rows, config) => {\n  return rows.map(cells => {\n    return cells.map((cell, cellIndex) => {\n      const {\n        paddingLeft,\n        paddingRight\n      } = config.columns[cellIndex];\n      return (0, exports.padString)(cell, paddingLeft, paddingRight);\n    });\n  });\n};\n\nexports.padTableData = padTableData;","map":{"version":3,"sources":["/home/andre/Documentos/Projetos/sd-019-b-project-trybewallet/node_modules/stylelint/node_modules/table/dist/src/padTableData.js"],"names":["Object","defineProperty","exports","value","padTableData","padString","input","paddingLeft","paddingRight","repeat","rows","config","map","cells","cell","cellIndex","columns"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,SAAR,GAAoB,KAAK,CAAhD;;AACA,MAAMA,SAAS,GAAG,CAACC,KAAD,EAAQC,WAAR,EAAqBC,YAArB,KAAsC;AACpD,SAAO,IAAIC,MAAJ,CAAWF,WAAX,IAA0BD,KAA1B,GAAkC,IAAIG,MAAJ,CAAWD,YAAX,CAAzC;AACH,CAFD;;AAGAN,OAAO,CAACG,SAAR,GAAoBA,SAApB;;AACA,MAAMD,YAAY,GAAG,CAACM,IAAD,EAAOC,MAAP,KAAkB;AACnC,SAAOD,IAAI,CAACE,GAAL,CAAUC,KAAD,IAAW;AACvB,WAAOA,KAAK,CAACD,GAAN,CAAU,CAACE,IAAD,EAAOC,SAAP,KAAqB;AAClC,YAAM;AAAER,QAAAA,WAAF;AAAeC,QAAAA;AAAf,UAAgCG,MAAM,CAACK,OAAP,CAAeD,SAAf,CAAtC;AACA,aAAO,CAAC,GAAGb,OAAO,CAACG,SAAZ,EAAuBS,IAAvB,EAA6BP,WAA7B,EAA0CC,YAA1C,CAAP;AACH,KAHM,CAAP;AAIH,GALM,CAAP;AAMH,CAPD;;AAQAN,OAAO,CAACE,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.padTableData = exports.padString = void 0;\nconst padString = (input, paddingLeft, paddingRight) => {\n    return ' '.repeat(paddingLeft) + input + ' '.repeat(paddingRight);\n};\nexports.padString = padString;\nconst padTableData = (rows, config) => {\n    return rows.map((cells) => {\n        return cells.map((cell, cellIndex) => {\n            const { paddingLeft, paddingRight } = config.columns[cellIndex];\n            return (0, exports.padString)(cell, paddingLeft, paddingRight);\n        });\n    });\n};\nexports.padTableData = padTableData;\n//# sourceMappingURL=padTableData.js.map"]},"metadata":{},"sourceType":"script"}