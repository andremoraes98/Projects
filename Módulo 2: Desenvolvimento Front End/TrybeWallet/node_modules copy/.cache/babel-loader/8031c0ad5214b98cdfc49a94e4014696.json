{"ast":null,"code":"\"use strict\";\n\nexports[\"config.json\"] = validate43;\nconst schema13 = {\n  \"$id\": \"config.json\",\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"border\": {\n      \"$ref\": \"shared.json#/definitions/borders\"\n    },\n    \"header\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"content\": {\n          \"type\": \"string\"\n        },\n        \"alignment\": {\n          \"$ref\": \"shared.json#/definitions/alignment\"\n        },\n        \"wrapWord\": {\n          \"type\": \"boolean\"\n        },\n        \"truncate\": {\n          \"type\": \"integer\"\n        },\n        \"paddingLeft\": {\n          \"type\": \"integer\"\n        },\n        \"paddingRight\": {\n          \"type\": \"integer\"\n        }\n      },\n      \"required\": [\"content\"],\n      \"additionalProperties\": false\n    },\n    \"columns\": {\n      \"$ref\": \"shared.json#/definitions/columns\"\n    },\n    \"columnDefault\": {\n      \"$ref\": \"shared.json#/definitions/column\"\n    },\n    \"drawVerticalLine\": {\n      \"typeof\": \"function\"\n    },\n    \"drawHorizontalLine\": {\n      \"typeof\": \"function\"\n    },\n    \"singleLine\": {\n      \"typeof\": \"boolean\"\n    }\n  },\n  \"additionalProperties\": false\n};\nconst schema15 = {\n  \"type\": \"object\",\n  \"properties\": {\n    \"topBody\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"topJoin\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"topLeft\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"topRight\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"bottomBody\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"bottomJoin\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"bottomLeft\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"bottomRight\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"bodyLeft\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"bodyRight\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"bodyJoin\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"headerJoin\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"joinBody\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"joinLeft\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"joinRight\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"joinJoin\": {\n      \"$ref\": \"#/definitions/border\"\n    }\n  },\n  \"additionalProperties\": false\n};\nconst func8 = Object.prototype.hasOwnProperty;\nconst schema16 = {\n  \"type\": \"string\"\n};\n\nfunction validate46(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let vErrors = null;\n  let errors = 0;\n\n  if (typeof data !== \"string\") {\n    const err0 = {\n      instancePath,\n      schemaPath: \"#/type\",\n      keyword: \"type\",\n      params: {\n        type: \"string\"\n      },\n      message: \"must be string\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err0];\n    } else {\n      vErrors.push(err0);\n    }\n\n    errors++;\n  }\n\n  validate46.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate45(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let vErrors = null;\n  let errors = 0;\n\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!func8.call(schema15.properties, key0)) {\n        const err0 = {\n          instancePath,\n          schemaPath: \"#/additionalProperties\",\n          keyword: \"additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"must NOT have additional properties\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.topBody !== undefined) {\n      if (!validate46(data.topBody, {\n        instancePath: instancePath + \"/topBody\",\n        parentData: data,\n        parentDataProperty: \"topBody\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.topJoin !== undefined) {\n      if (!validate46(data.topJoin, {\n        instancePath: instancePath + \"/topJoin\",\n        parentData: data,\n        parentDataProperty: \"topJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.topLeft !== undefined) {\n      if (!validate46(data.topLeft, {\n        instancePath: instancePath + \"/topLeft\",\n        parentData: data,\n        parentDataProperty: \"topLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.topRight !== undefined) {\n      if (!validate46(data.topRight, {\n        instancePath: instancePath + \"/topRight\",\n        parentData: data,\n        parentDataProperty: \"topRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bottomBody !== undefined) {\n      if (!validate46(data.bottomBody, {\n        instancePath: instancePath + \"/bottomBody\",\n        parentData: data,\n        parentDataProperty: \"bottomBody\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bottomJoin !== undefined) {\n      if (!validate46(data.bottomJoin, {\n        instancePath: instancePath + \"/bottomJoin\",\n        parentData: data,\n        parentDataProperty: \"bottomJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bottomLeft !== undefined) {\n      if (!validate46(data.bottomLeft, {\n        instancePath: instancePath + \"/bottomLeft\",\n        parentData: data,\n        parentDataProperty: \"bottomLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bottomRight !== undefined) {\n      if (!validate46(data.bottomRight, {\n        instancePath: instancePath + \"/bottomRight\",\n        parentData: data,\n        parentDataProperty: \"bottomRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bodyLeft !== undefined) {\n      if (!validate46(data.bodyLeft, {\n        instancePath: instancePath + \"/bodyLeft\",\n        parentData: data,\n        parentDataProperty: \"bodyLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bodyRight !== undefined) {\n      if (!validate46(data.bodyRight, {\n        instancePath: instancePath + \"/bodyRight\",\n        parentData: data,\n        parentDataProperty: \"bodyRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bodyJoin !== undefined) {\n      if (!validate46(data.bodyJoin, {\n        instancePath: instancePath + \"/bodyJoin\",\n        parentData: data,\n        parentDataProperty: \"bodyJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.headerJoin !== undefined) {\n      if (!validate46(data.headerJoin, {\n        instancePath: instancePath + \"/headerJoin\",\n        parentData: data,\n        parentDataProperty: \"headerJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.joinBody !== undefined) {\n      if (!validate46(data.joinBody, {\n        instancePath: instancePath + \"/joinBody\",\n        parentData: data,\n        parentDataProperty: \"joinBody\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.joinLeft !== undefined) {\n      if (!validate46(data.joinLeft, {\n        instancePath: instancePath + \"/joinLeft\",\n        parentData: data,\n        parentDataProperty: \"joinLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.joinRight !== undefined) {\n      if (!validate46(data.joinRight, {\n        instancePath: instancePath + \"/joinRight\",\n        parentData: data,\n        parentDataProperty: \"joinRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.joinJoin !== undefined) {\n      if (!validate46(data.joinJoin, {\n        instancePath: instancePath + \"/joinJoin\",\n        parentData: data,\n        parentDataProperty: \"joinJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n  } else {\n    const err1 = {\n      instancePath,\n      schemaPath: \"#/type\",\n      keyword: \"type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"must be object\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err1];\n    } else {\n      vErrors.push(err1);\n    }\n\n    errors++;\n  }\n\n  validate45.errors = vErrors;\n  return errors === 0;\n}\n\nconst schema17 = {\n  \"type\": \"string\",\n  \"enum\": [\"left\", \"right\", \"center\", \"justify\"]\n};\n\nconst func0 = require(\"ajv/dist/runtime/equal\").default;\n\nfunction validate64(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let vErrors = null;\n  let errors = 0;\n\n  if (typeof data !== \"string\") {\n    const err0 = {\n      instancePath,\n      schemaPath: \"#/type\",\n      keyword: \"type\",\n      params: {\n        type: \"string\"\n      },\n      message: \"must be string\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err0];\n    } else {\n      vErrors.push(err0);\n    }\n\n    errors++;\n  }\n\n  if (!(data === \"left\" || data === \"right\" || data === \"center\" || data === \"justify\")) {\n    const err1 = {\n      instancePath,\n      schemaPath: \"#/enum\",\n      keyword: \"enum\",\n      params: {\n        allowedValues: schema17.enum\n      },\n      message: \"must be equal to one of the allowed values\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err1];\n    } else {\n      vErrors.push(err1);\n    }\n\n    errors++;\n  }\n\n  validate64.errors = vErrors;\n  return errors === 0;\n}\n\nconst schema18 = {\n  \"oneOf\": [{\n    \"type\": \"object\",\n    \"patternProperties\": {\n      \"^[0-9]+$\": {\n        \"$ref\": \"#/definitions/column\"\n      }\n    },\n    \"additionalProperties\": false\n  }, {\n    \"type\": \"array\",\n    \"items\": {\n      \"$ref\": \"#/definitions/column\"\n    }\n  }]\n};\nconst pattern0 = new RegExp(\"^[0-9]+$\", \"u\");\nconst schema19 = {\n  \"type\": \"object\",\n  \"properties\": {\n    \"alignment\": {\n      \"$ref\": \"#/definitions/alignment\"\n    },\n    \"verticalAlignment\": {\n      \"type\": \"string\",\n      \"enum\": [\"top\", \"middle\", \"bottom\"]\n    },\n    \"width\": {\n      \"type\": \"integer\",\n      \"minimum\": 1\n    },\n    \"wrapWord\": {\n      \"type\": \"boolean\"\n    },\n    \"truncate\": {\n      \"type\": \"integer\"\n    },\n    \"paddingLeft\": {\n      \"type\": \"integer\"\n    },\n    \"paddingRight\": {\n      \"type\": \"integer\"\n    }\n  },\n  \"additionalProperties\": false\n};\n\nfunction validate68(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let vErrors = null;\n  let errors = 0;\n\n  if (typeof data !== \"string\") {\n    const err0 = {\n      instancePath,\n      schemaPath: \"#/type\",\n      keyword: \"type\",\n      params: {\n        type: \"string\"\n      },\n      message: \"must be string\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err0];\n    } else {\n      vErrors.push(err0);\n    }\n\n    errors++;\n  }\n\n  if (!(data === \"left\" || data === \"right\" || data === \"center\" || data === \"justify\")) {\n    const err1 = {\n      instancePath,\n      schemaPath: \"#/enum\",\n      keyword: \"enum\",\n      params: {\n        allowedValues: schema17.enum\n      },\n      message: \"must be equal to one of the allowed values\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err1];\n    } else {\n      vErrors.push(err1);\n    }\n\n    errors++;\n  }\n\n  validate68.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate67(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let vErrors = null;\n  let errors = 0;\n\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!(key0 === \"alignment\" || key0 === \"verticalAlignment\" || key0 === \"width\" || key0 === \"wrapWord\" || key0 === \"truncate\" || key0 === \"paddingLeft\" || key0 === \"paddingRight\")) {\n        const err0 = {\n          instancePath,\n          schemaPath: \"#/additionalProperties\",\n          keyword: \"additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"must NOT have additional properties\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.alignment !== undefined) {\n      if (!validate68(data.alignment, {\n        instancePath: instancePath + \"/alignment\",\n        parentData: data,\n        parentDataProperty: \"alignment\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate68.errors : vErrors.concat(validate68.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.verticalAlignment !== undefined) {\n      let data1 = data.verticalAlignment;\n\n      if (typeof data1 !== \"string\") {\n        const err1 = {\n          instancePath: instancePath + \"/verticalAlignment\",\n          schemaPath: \"#/properties/verticalAlignment/type\",\n          keyword: \"type\",\n          params: {\n            type: \"string\"\n          },\n          message: \"must be string\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err1];\n        } else {\n          vErrors.push(err1);\n        }\n\n        errors++;\n      }\n\n      if (!(data1 === \"top\" || data1 === \"middle\" || data1 === \"bottom\")) {\n        const err2 = {\n          instancePath: instancePath + \"/verticalAlignment\",\n          schemaPath: \"#/properties/verticalAlignment/enum\",\n          keyword: \"enum\",\n          params: {\n            allowedValues: schema19.properties.verticalAlignment.enum\n          },\n          message: \"must be equal to one of the allowed values\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err2];\n        } else {\n          vErrors.push(err2);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.width !== undefined) {\n      let data2 = data.width;\n\n      if (!(typeof data2 == \"number\" && !(data2 % 1) && !isNaN(data2) && isFinite(data2))) {\n        const err3 = {\n          instancePath: instancePath + \"/width\",\n          schemaPath: \"#/properties/width/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err3];\n        } else {\n          vErrors.push(err3);\n        }\n\n        errors++;\n      }\n\n      if (typeof data2 == \"number\" && isFinite(data2)) {\n        if (data2 < 1 || isNaN(data2)) {\n          const err4 = {\n            instancePath: instancePath + \"/width\",\n            schemaPath: \"#/properties/width/minimum\",\n            keyword: \"minimum\",\n            params: {\n              comparison: \">=\",\n              limit: 1\n            },\n            message: \"must be >= 1\"\n          };\n\n          if (vErrors === null) {\n            vErrors = [err4];\n          } else {\n            vErrors.push(err4);\n          }\n\n          errors++;\n        }\n      }\n    }\n\n    if (data.wrapWord !== undefined) {\n      if (typeof data.wrapWord !== \"boolean\") {\n        const err5 = {\n          instancePath: instancePath + \"/wrapWord\",\n          schemaPath: \"#/properties/wrapWord/type\",\n          keyword: \"type\",\n          params: {\n            type: \"boolean\"\n          },\n          message: \"must be boolean\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err5];\n        } else {\n          vErrors.push(err5);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.truncate !== undefined) {\n      let data4 = data.truncate;\n\n      if (!(typeof data4 == \"number\" && !(data4 % 1) && !isNaN(data4) && isFinite(data4))) {\n        const err6 = {\n          instancePath: instancePath + \"/truncate\",\n          schemaPath: \"#/properties/truncate/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err6];\n        } else {\n          vErrors.push(err6);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.paddingLeft !== undefined) {\n      let data5 = data.paddingLeft;\n\n      if (!(typeof data5 == \"number\" && !(data5 % 1) && !isNaN(data5) && isFinite(data5))) {\n        const err7 = {\n          instancePath: instancePath + \"/paddingLeft\",\n          schemaPath: \"#/properties/paddingLeft/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err7];\n        } else {\n          vErrors.push(err7);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.paddingRight !== undefined) {\n      let data6 = data.paddingRight;\n\n      if (!(typeof data6 == \"number\" && !(data6 % 1) && !isNaN(data6) && isFinite(data6))) {\n        const err8 = {\n          instancePath: instancePath + \"/paddingRight\",\n          schemaPath: \"#/properties/paddingRight/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err8];\n        } else {\n          vErrors.push(err8);\n        }\n\n        errors++;\n      }\n    }\n  } else {\n    const err9 = {\n      instancePath,\n      schemaPath: \"#/type\",\n      keyword: \"type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"must be object\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err9];\n    } else {\n      vErrors.push(err9);\n    }\n\n    errors++;\n  }\n\n  validate67.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate66(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let vErrors = null;\n  let errors = 0;\n  const _errs0 = errors;\n  let valid0 = false;\n  let passing0 = null;\n  const _errs1 = errors;\n\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!pattern0.test(key0)) {\n        const err0 = {\n          instancePath,\n          schemaPath: \"#/oneOf/0/additionalProperties\",\n          keyword: \"additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"must NOT have additional properties\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      }\n    }\n\n    for (const key1 in data) {\n      if (pattern0.test(key1)) {\n        if (!validate67(data[key1], {\n          instancePath: instancePath + \"/\" + key1.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n          parentData: data,\n          parentDataProperty: key1,\n          rootData\n        })) {\n          vErrors = vErrors === null ? validate67.errors : vErrors.concat(validate67.errors);\n          errors = vErrors.length;\n        }\n      }\n    }\n  } else {\n    const err1 = {\n      instancePath,\n      schemaPath: \"#/oneOf/0/type\",\n      keyword: \"type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"must be object\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err1];\n    } else {\n      vErrors.push(err1);\n    }\n\n    errors++;\n  }\n\n  var _valid0 = _errs1 === errors;\n\n  if (_valid0) {\n    valid0 = true;\n    passing0 = 0;\n  }\n\n  const _errs5 = errors;\n\n  if (Array.isArray(data)) {\n    const len0 = data.length;\n\n    for (let i0 = 0; i0 < len0; i0++) {\n      if (!validate67(data[i0], {\n        instancePath: instancePath + \"/\" + i0,\n        parentData: data,\n        parentDataProperty: i0,\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate67.errors : vErrors.concat(validate67.errors);\n        errors = vErrors.length;\n      }\n    }\n  } else {\n    const err2 = {\n      instancePath,\n      schemaPath: \"#/oneOf/1/type\",\n      keyword: \"type\",\n      params: {\n        type: \"array\"\n      },\n      message: \"must be array\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err2];\n    } else {\n      vErrors.push(err2);\n    }\n\n    errors++;\n  }\n\n  var _valid0 = _errs5 === errors;\n\n  if (_valid0 && valid0) {\n    valid0 = false;\n    passing0 = [passing0, 1];\n  } else {\n    if (_valid0) {\n      valid0 = true;\n      passing0 = 1;\n    }\n  }\n\n  if (!valid0) {\n    const err3 = {\n      instancePath,\n      schemaPath: \"#/oneOf\",\n      keyword: \"oneOf\",\n      params: {\n        passingSchemas: passing0\n      },\n      message: \"must match exactly one schema in oneOf\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err3];\n    } else {\n      vErrors.push(err3);\n    }\n\n    errors++;\n  } else {\n    errors = _errs0;\n\n    if (vErrors !== null) {\n      if (_errs0) {\n        vErrors.length = _errs0;\n      } else {\n        vErrors = null;\n      }\n    }\n  }\n\n  validate66.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate73(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let vErrors = null;\n  let errors = 0;\n\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!(key0 === \"alignment\" || key0 === \"verticalAlignment\" || key0 === \"width\" || key0 === \"wrapWord\" || key0 === \"truncate\" || key0 === \"paddingLeft\" || key0 === \"paddingRight\")) {\n        const err0 = {\n          instancePath,\n          schemaPath: \"#/additionalProperties\",\n          keyword: \"additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"must NOT have additional properties\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.alignment !== undefined) {\n      if (!validate68(data.alignment, {\n        instancePath: instancePath + \"/alignment\",\n        parentData: data,\n        parentDataProperty: \"alignment\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate68.errors : vErrors.concat(validate68.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.verticalAlignment !== undefined) {\n      let data1 = data.verticalAlignment;\n\n      if (typeof data1 !== \"string\") {\n        const err1 = {\n          instancePath: instancePath + \"/verticalAlignment\",\n          schemaPath: \"#/properties/verticalAlignment/type\",\n          keyword: \"type\",\n          params: {\n            type: \"string\"\n          },\n          message: \"must be string\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err1];\n        } else {\n          vErrors.push(err1);\n        }\n\n        errors++;\n      }\n\n      if (!(data1 === \"top\" || data1 === \"middle\" || data1 === \"bottom\")) {\n        const err2 = {\n          instancePath: instancePath + \"/verticalAlignment\",\n          schemaPath: \"#/properties/verticalAlignment/enum\",\n          keyword: \"enum\",\n          params: {\n            allowedValues: schema19.properties.verticalAlignment.enum\n          },\n          message: \"must be equal to one of the allowed values\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err2];\n        } else {\n          vErrors.push(err2);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.width !== undefined) {\n      let data2 = data.width;\n\n      if (!(typeof data2 == \"number\" && !(data2 % 1) && !isNaN(data2) && isFinite(data2))) {\n        const err3 = {\n          instancePath: instancePath + \"/width\",\n          schemaPath: \"#/properties/width/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err3];\n        } else {\n          vErrors.push(err3);\n        }\n\n        errors++;\n      }\n\n      if (typeof data2 == \"number\" && isFinite(data2)) {\n        if (data2 < 1 || isNaN(data2)) {\n          const err4 = {\n            instancePath: instancePath + \"/width\",\n            schemaPath: \"#/properties/width/minimum\",\n            keyword: \"minimum\",\n            params: {\n              comparison: \">=\",\n              limit: 1\n            },\n            message: \"must be >= 1\"\n          };\n\n          if (vErrors === null) {\n            vErrors = [err4];\n          } else {\n            vErrors.push(err4);\n          }\n\n          errors++;\n        }\n      }\n    }\n\n    if (data.wrapWord !== undefined) {\n      if (typeof data.wrapWord !== \"boolean\") {\n        const err5 = {\n          instancePath: instancePath + \"/wrapWord\",\n          schemaPath: \"#/properties/wrapWord/type\",\n          keyword: \"type\",\n          params: {\n            type: \"boolean\"\n          },\n          message: \"must be boolean\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err5];\n        } else {\n          vErrors.push(err5);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.truncate !== undefined) {\n      let data4 = data.truncate;\n\n      if (!(typeof data4 == \"number\" && !(data4 % 1) && !isNaN(data4) && isFinite(data4))) {\n        const err6 = {\n          instancePath: instancePath + \"/truncate\",\n          schemaPath: \"#/properties/truncate/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err6];\n        } else {\n          vErrors.push(err6);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.paddingLeft !== undefined) {\n      let data5 = data.paddingLeft;\n\n      if (!(typeof data5 == \"number\" && !(data5 % 1) && !isNaN(data5) && isFinite(data5))) {\n        const err7 = {\n          instancePath: instancePath + \"/paddingLeft\",\n          schemaPath: \"#/properties/paddingLeft/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err7];\n        } else {\n          vErrors.push(err7);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.paddingRight !== undefined) {\n      let data6 = data.paddingRight;\n\n      if (!(typeof data6 == \"number\" && !(data6 % 1) && !isNaN(data6) && isFinite(data6))) {\n        const err8 = {\n          instancePath: instancePath + \"/paddingRight\",\n          schemaPath: \"#/properties/paddingRight/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err8];\n        } else {\n          vErrors.push(err8);\n        }\n\n        errors++;\n      }\n    }\n  } else {\n    const err9 = {\n      instancePath,\n      schemaPath: \"#/type\",\n      keyword: \"type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"must be object\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err9];\n    } else {\n      vErrors.push(err9);\n    }\n\n    errors++;\n  }\n\n  validate73.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate43(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  /*# sourceURL=\"config.json\" */\n  ;\n  let vErrors = null;\n  let errors = 0;\n\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!(key0 === \"border\" || key0 === \"header\" || key0 === \"columns\" || key0 === \"columnDefault\" || key0 === \"drawVerticalLine\" || key0 === \"drawHorizontalLine\" || key0 === \"singleLine\")) {\n        const err0 = {\n          instancePath,\n          schemaPath: \"#/additionalProperties\",\n          keyword: \"additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"must NOT have additional properties\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.border !== undefined) {\n      if (!validate45(data.border, {\n        instancePath: instancePath + \"/border\",\n        parentData: data,\n        parentDataProperty: \"border\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate45.errors : vErrors.concat(validate45.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.header !== undefined) {\n      let data1 = data.header;\n\n      if (data1 && typeof data1 == \"object\" && !Array.isArray(data1)) {\n        if (data1.content === undefined) {\n          const err1 = {\n            instancePath: instancePath + \"/header\",\n            schemaPath: \"#/properties/header/required\",\n            keyword: \"required\",\n            params: {\n              missingProperty: \"content\"\n            },\n            message: \"must have required property '\" + \"content\" + \"'\"\n          };\n\n          if (vErrors === null) {\n            vErrors = [err1];\n          } else {\n            vErrors.push(err1);\n          }\n\n          errors++;\n        }\n\n        for (const key1 in data1) {\n          if (!(key1 === \"content\" || key1 === \"alignment\" || key1 === \"wrapWord\" || key1 === \"truncate\" || key1 === \"paddingLeft\" || key1 === \"paddingRight\")) {\n            const err2 = {\n              instancePath: instancePath + \"/header\",\n              schemaPath: \"#/properties/header/additionalProperties\",\n              keyword: \"additionalProperties\",\n              params: {\n                additionalProperty: key1\n              },\n              message: \"must NOT have additional properties\"\n            };\n\n            if (vErrors === null) {\n              vErrors = [err2];\n            } else {\n              vErrors.push(err2);\n            }\n\n            errors++;\n          }\n        }\n\n        if (data1.content !== undefined) {\n          if (typeof data1.content !== \"string\") {\n            const err3 = {\n              instancePath: instancePath + \"/header/content\",\n              schemaPath: \"#/properties/header/properties/content/type\",\n              keyword: \"type\",\n              params: {\n                type: \"string\"\n              },\n              message: \"must be string\"\n            };\n\n            if (vErrors === null) {\n              vErrors = [err3];\n            } else {\n              vErrors.push(err3);\n            }\n\n            errors++;\n          }\n        }\n\n        if (data1.alignment !== undefined) {\n          if (!validate64(data1.alignment, {\n            instancePath: instancePath + \"/header/alignment\",\n            parentData: data1,\n            parentDataProperty: \"alignment\",\n            rootData\n          })) {\n            vErrors = vErrors === null ? validate64.errors : vErrors.concat(validate64.errors);\n            errors = vErrors.length;\n          }\n        }\n\n        if (data1.wrapWord !== undefined) {\n          if (typeof data1.wrapWord !== \"boolean\") {\n            const err4 = {\n              instancePath: instancePath + \"/header/wrapWord\",\n              schemaPath: \"#/properties/header/properties/wrapWord/type\",\n              keyword: \"type\",\n              params: {\n                type: \"boolean\"\n              },\n              message: \"must be boolean\"\n            };\n\n            if (vErrors === null) {\n              vErrors = [err4];\n            } else {\n              vErrors.push(err4);\n            }\n\n            errors++;\n          }\n        }\n\n        if (data1.truncate !== undefined) {\n          let data5 = data1.truncate;\n\n          if (!(typeof data5 == \"number\" && !(data5 % 1) && !isNaN(data5) && isFinite(data5))) {\n            const err5 = {\n              instancePath: instancePath + \"/header/truncate\",\n              schemaPath: \"#/properties/header/properties/truncate/type\",\n              keyword: \"type\",\n              params: {\n                type: \"integer\"\n              },\n              message: \"must be integer\"\n            };\n\n            if (vErrors === null) {\n              vErrors = [err5];\n            } else {\n              vErrors.push(err5);\n            }\n\n            errors++;\n          }\n        }\n\n        if (data1.paddingLeft !== undefined) {\n          let data6 = data1.paddingLeft;\n\n          if (!(typeof data6 == \"number\" && !(data6 % 1) && !isNaN(data6) && isFinite(data6))) {\n            const err6 = {\n              instancePath: instancePath + \"/header/paddingLeft\",\n              schemaPath: \"#/properties/header/properties/paddingLeft/type\",\n              keyword: \"type\",\n              params: {\n                type: \"integer\"\n              },\n              message: \"must be integer\"\n            };\n\n            if (vErrors === null) {\n              vErrors = [err6];\n            } else {\n              vErrors.push(err6);\n            }\n\n            errors++;\n          }\n        }\n\n        if (data1.paddingRight !== undefined) {\n          let data7 = data1.paddingRight;\n\n          if (!(typeof data7 == \"number\" && !(data7 % 1) && !isNaN(data7) && isFinite(data7))) {\n            const err7 = {\n              instancePath: instancePath + \"/header/paddingRight\",\n              schemaPath: \"#/properties/header/properties/paddingRight/type\",\n              keyword: \"type\",\n              params: {\n                type: \"integer\"\n              },\n              message: \"must be integer\"\n            };\n\n            if (vErrors === null) {\n              vErrors = [err7];\n            } else {\n              vErrors.push(err7);\n            }\n\n            errors++;\n          }\n        }\n      } else {\n        const err8 = {\n          instancePath: instancePath + \"/header\",\n          schemaPath: \"#/properties/header/type\",\n          keyword: \"type\",\n          params: {\n            type: \"object\"\n          },\n          message: \"must be object\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err8];\n        } else {\n          vErrors.push(err8);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.columns !== undefined) {\n      if (!validate66(data.columns, {\n        instancePath: instancePath + \"/columns\",\n        parentData: data,\n        parentDataProperty: \"columns\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate66.errors : vErrors.concat(validate66.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.columnDefault !== undefined) {\n      if (!validate73(data.columnDefault, {\n        instancePath: instancePath + \"/columnDefault\",\n        parentData: data,\n        parentDataProperty: \"columnDefault\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate73.errors : vErrors.concat(validate73.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.drawVerticalLine !== undefined) {\n      if (typeof data.drawVerticalLine != \"function\") {\n        const err9 = {\n          instancePath: instancePath + \"/drawVerticalLine\",\n          schemaPath: \"#/properties/drawVerticalLine/typeof\",\n          keyword: \"typeof\",\n          params: {},\n          message: \"must pass \\\"typeof\\\" keyword validation\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err9];\n        } else {\n          vErrors.push(err9);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.drawHorizontalLine !== undefined) {\n      if (typeof data.drawHorizontalLine != \"function\") {\n        const err10 = {\n          instancePath: instancePath + \"/drawHorizontalLine\",\n          schemaPath: \"#/properties/drawHorizontalLine/typeof\",\n          keyword: \"typeof\",\n          params: {},\n          message: \"must pass \\\"typeof\\\" keyword validation\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err10];\n        } else {\n          vErrors.push(err10);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.singleLine !== undefined) {\n      if (typeof data.singleLine != \"boolean\") {\n        const err11 = {\n          instancePath: instancePath + \"/singleLine\",\n          schemaPath: \"#/properties/singleLine/typeof\",\n          keyword: \"typeof\",\n          params: {},\n          message: \"must pass \\\"typeof\\\" keyword validation\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err11];\n        } else {\n          vErrors.push(err11);\n        }\n\n        errors++;\n      }\n    }\n  } else {\n    const err12 = {\n      instancePath,\n      schemaPath: \"#/type\",\n      keyword: \"type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"must be object\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err12];\n    } else {\n      vErrors.push(err12);\n    }\n\n    errors++;\n  }\n\n  validate43.errors = vErrors;\n  return errors === 0;\n}\n\nexports[\"streamConfig.json\"] = validate76;\nconst schema22 = {\n  \"$id\": \"streamConfig.json\",\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"border\": {\n      \"$ref\": \"shared.json#/definitions/borders\"\n    },\n    \"columns\": {\n      \"$ref\": \"shared.json#/definitions/columns\"\n    },\n    \"columnDefault\": {\n      \"$ref\": \"shared.json#/definitions/column\"\n    },\n    \"columnCount\": {\n      \"type\": \"integer\",\n      \"minimum\": 1\n    },\n    \"drawVerticalLine\": {\n      \"typeof\": \"function\"\n    }\n  },\n  \"required\": [\"columnDefault\", \"columnCount\"],\n  \"additionalProperties\": false\n};\n\nfunction validate77(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let vErrors = null;\n  let errors = 0;\n\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!func8.call(schema15.properties, key0)) {\n        const err0 = {\n          instancePath,\n          schemaPath: \"#/additionalProperties\",\n          keyword: \"additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"must NOT have additional properties\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.topBody !== undefined) {\n      if (!validate46(data.topBody, {\n        instancePath: instancePath + \"/topBody\",\n        parentData: data,\n        parentDataProperty: \"topBody\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.topJoin !== undefined) {\n      if (!validate46(data.topJoin, {\n        instancePath: instancePath + \"/topJoin\",\n        parentData: data,\n        parentDataProperty: \"topJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.topLeft !== undefined) {\n      if (!validate46(data.topLeft, {\n        instancePath: instancePath + \"/topLeft\",\n        parentData: data,\n        parentDataProperty: \"topLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.topRight !== undefined) {\n      if (!validate46(data.topRight, {\n        instancePath: instancePath + \"/topRight\",\n        parentData: data,\n        parentDataProperty: \"topRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bottomBody !== undefined) {\n      if (!validate46(data.bottomBody, {\n        instancePath: instancePath + \"/bottomBody\",\n        parentData: data,\n        parentDataProperty: \"bottomBody\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bottomJoin !== undefined) {\n      if (!validate46(data.bottomJoin, {\n        instancePath: instancePath + \"/bottomJoin\",\n        parentData: data,\n        parentDataProperty: \"bottomJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bottomLeft !== undefined) {\n      if (!validate46(data.bottomLeft, {\n        instancePath: instancePath + \"/bottomLeft\",\n        parentData: data,\n        parentDataProperty: \"bottomLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bottomRight !== undefined) {\n      if (!validate46(data.bottomRight, {\n        instancePath: instancePath + \"/bottomRight\",\n        parentData: data,\n        parentDataProperty: \"bottomRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bodyLeft !== undefined) {\n      if (!validate46(data.bodyLeft, {\n        instancePath: instancePath + \"/bodyLeft\",\n        parentData: data,\n        parentDataProperty: \"bodyLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bodyRight !== undefined) {\n      if (!validate46(data.bodyRight, {\n        instancePath: instancePath + \"/bodyRight\",\n        parentData: data,\n        parentDataProperty: \"bodyRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bodyJoin !== undefined) {\n      if (!validate46(data.bodyJoin, {\n        instancePath: instancePath + \"/bodyJoin\",\n        parentData: data,\n        parentDataProperty: \"bodyJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.headerJoin !== undefined) {\n      if (!validate46(data.headerJoin, {\n        instancePath: instancePath + \"/headerJoin\",\n        parentData: data,\n        parentDataProperty: \"headerJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.joinBody !== undefined) {\n      if (!validate46(data.joinBody, {\n        instancePath: instancePath + \"/joinBody\",\n        parentData: data,\n        parentDataProperty: \"joinBody\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.joinLeft !== undefined) {\n      if (!validate46(data.joinLeft, {\n        instancePath: instancePath + \"/joinLeft\",\n        parentData: data,\n        parentDataProperty: \"joinLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.joinRight !== undefined) {\n      if (!validate46(data.joinRight, {\n        instancePath: instancePath + \"/joinRight\",\n        parentData: data,\n        parentDataProperty: \"joinRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.joinJoin !== undefined) {\n      if (!validate46(data.joinJoin, {\n        instancePath: instancePath + \"/joinJoin\",\n        parentData: data,\n        parentDataProperty: \"joinJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n  } else {\n    const err1 = {\n      instancePath,\n      schemaPath: \"#/type\",\n      keyword: \"type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"must be object\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err1];\n    } else {\n      vErrors.push(err1);\n    }\n\n    errors++;\n  }\n\n  validate77.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate95(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let vErrors = null;\n  let errors = 0;\n  const _errs0 = errors;\n  let valid0 = false;\n  let passing0 = null;\n  const _errs1 = errors;\n\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!pattern0.test(key0)) {\n        const err0 = {\n          instancePath,\n          schemaPath: \"#/oneOf/0/additionalProperties\",\n          keyword: \"additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"must NOT have additional properties\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      }\n    }\n\n    for (const key1 in data) {\n      if (pattern0.test(key1)) {\n        if (!validate67(data[key1], {\n          instancePath: instancePath + \"/\" + key1.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n          parentData: data,\n          parentDataProperty: key1,\n          rootData\n        })) {\n          vErrors = vErrors === null ? validate67.errors : vErrors.concat(validate67.errors);\n          errors = vErrors.length;\n        }\n      }\n    }\n  } else {\n    const err1 = {\n      instancePath,\n      schemaPath: \"#/oneOf/0/type\",\n      keyword: \"type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"must be object\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err1];\n    } else {\n      vErrors.push(err1);\n    }\n\n    errors++;\n  }\n\n  var _valid0 = _errs1 === errors;\n\n  if (_valid0) {\n    valid0 = true;\n    passing0 = 0;\n  }\n\n  const _errs5 = errors;\n\n  if (Array.isArray(data)) {\n    const len0 = data.length;\n\n    for (let i0 = 0; i0 < len0; i0++) {\n      if (!validate67(data[i0], {\n        instancePath: instancePath + \"/\" + i0,\n        parentData: data,\n        parentDataProperty: i0,\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate67.errors : vErrors.concat(validate67.errors);\n        errors = vErrors.length;\n      }\n    }\n  } else {\n    const err2 = {\n      instancePath,\n      schemaPath: \"#/oneOf/1/type\",\n      keyword: \"type\",\n      params: {\n        type: \"array\"\n      },\n      message: \"must be array\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err2];\n    } else {\n      vErrors.push(err2);\n    }\n\n    errors++;\n  }\n\n  var _valid0 = _errs5 === errors;\n\n  if (_valid0 && valid0) {\n    valid0 = false;\n    passing0 = [passing0, 1];\n  } else {\n    if (_valid0) {\n      valid0 = true;\n      passing0 = 1;\n    }\n  }\n\n  if (!valid0) {\n    const err3 = {\n      instancePath,\n      schemaPath: \"#/oneOf\",\n      keyword: \"oneOf\",\n      params: {\n        passingSchemas: passing0\n      },\n      message: \"must match exactly one schema in oneOf\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err3];\n    } else {\n      vErrors.push(err3);\n    }\n\n    errors++;\n  } else {\n    errors = _errs0;\n\n    if (vErrors !== null) {\n      if (_errs0) {\n        vErrors.length = _errs0;\n      } else {\n        vErrors = null;\n      }\n    }\n  }\n\n  validate95.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate99(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let vErrors = null;\n  let errors = 0;\n\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!(key0 === \"alignment\" || key0 === \"verticalAlignment\" || key0 === \"width\" || key0 === \"wrapWord\" || key0 === \"truncate\" || key0 === \"paddingLeft\" || key0 === \"paddingRight\")) {\n        const err0 = {\n          instancePath,\n          schemaPath: \"#/additionalProperties\",\n          keyword: \"additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"must NOT have additional properties\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.alignment !== undefined) {\n      if (!validate68(data.alignment, {\n        instancePath: instancePath + \"/alignment\",\n        parentData: data,\n        parentDataProperty: \"alignment\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate68.errors : vErrors.concat(validate68.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.verticalAlignment !== undefined) {\n      let data1 = data.verticalAlignment;\n\n      if (typeof data1 !== \"string\") {\n        const err1 = {\n          instancePath: instancePath + \"/verticalAlignment\",\n          schemaPath: \"#/properties/verticalAlignment/type\",\n          keyword: \"type\",\n          params: {\n            type: \"string\"\n          },\n          message: \"must be string\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err1];\n        } else {\n          vErrors.push(err1);\n        }\n\n        errors++;\n      }\n\n      if (!(data1 === \"top\" || data1 === \"middle\" || data1 === \"bottom\")) {\n        const err2 = {\n          instancePath: instancePath + \"/verticalAlignment\",\n          schemaPath: \"#/properties/verticalAlignment/enum\",\n          keyword: \"enum\",\n          params: {\n            allowedValues: schema19.properties.verticalAlignment.enum\n          },\n          message: \"must be equal to one of the allowed values\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err2];\n        } else {\n          vErrors.push(err2);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.width !== undefined) {\n      let data2 = data.width;\n\n      if (!(typeof data2 == \"number\" && !(data2 % 1) && !isNaN(data2) && isFinite(data2))) {\n        const err3 = {\n          instancePath: instancePath + \"/width\",\n          schemaPath: \"#/properties/width/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err3];\n        } else {\n          vErrors.push(err3);\n        }\n\n        errors++;\n      }\n\n      if (typeof data2 == \"number\" && isFinite(data2)) {\n        if (data2 < 1 || isNaN(data2)) {\n          const err4 = {\n            instancePath: instancePath + \"/width\",\n            schemaPath: \"#/properties/width/minimum\",\n            keyword: \"minimum\",\n            params: {\n              comparison: \">=\",\n              limit: 1\n            },\n            message: \"must be >= 1\"\n          };\n\n          if (vErrors === null) {\n            vErrors = [err4];\n          } else {\n            vErrors.push(err4);\n          }\n\n          errors++;\n        }\n      }\n    }\n\n    if (data.wrapWord !== undefined) {\n      if (typeof data.wrapWord !== \"boolean\") {\n        const err5 = {\n          instancePath: instancePath + \"/wrapWord\",\n          schemaPath: \"#/properties/wrapWord/type\",\n          keyword: \"type\",\n          params: {\n            type: \"boolean\"\n          },\n          message: \"must be boolean\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err5];\n        } else {\n          vErrors.push(err5);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.truncate !== undefined) {\n      let data4 = data.truncate;\n\n      if (!(typeof data4 == \"number\" && !(data4 % 1) && !isNaN(data4) && isFinite(data4))) {\n        const err6 = {\n          instancePath: instancePath + \"/truncate\",\n          schemaPath: \"#/properties/truncate/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err6];\n        } else {\n          vErrors.push(err6);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.paddingLeft !== undefined) {\n      let data5 = data.paddingLeft;\n\n      if (!(typeof data5 == \"number\" && !(data5 % 1) && !isNaN(data5) && isFinite(data5))) {\n        const err7 = {\n          instancePath: instancePath + \"/paddingLeft\",\n          schemaPath: \"#/properties/paddingLeft/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err7];\n        } else {\n          vErrors.push(err7);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.paddingRight !== undefined) {\n      let data6 = data.paddingRight;\n\n      if (!(typeof data6 == \"number\" && !(data6 % 1) && !isNaN(data6) && isFinite(data6))) {\n        const err8 = {\n          instancePath: instancePath + \"/paddingRight\",\n          schemaPath: \"#/properties/paddingRight/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err8];\n        } else {\n          vErrors.push(err8);\n        }\n\n        errors++;\n      }\n    }\n  } else {\n    const err9 = {\n      instancePath,\n      schemaPath: \"#/type\",\n      keyword: \"type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"must be object\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err9];\n    } else {\n      vErrors.push(err9);\n    }\n\n    errors++;\n  }\n\n  validate99.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate76(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  /*# sourceURL=\"streamConfig.json\" */\n  ;\n  let vErrors = null;\n  let errors = 0;\n\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    if (data.columnDefault === undefined) {\n      const err0 = {\n        instancePath,\n        schemaPath: \"#/required\",\n        keyword: \"required\",\n        params: {\n          missingProperty: \"columnDefault\"\n        },\n        message: \"must have required property '\" + \"columnDefault\" + \"'\"\n      };\n\n      if (vErrors === null) {\n        vErrors = [err0];\n      } else {\n        vErrors.push(err0);\n      }\n\n      errors++;\n    }\n\n    if (data.columnCount === undefined) {\n      const err1 = {\n        instancePath,\n        schemaPath: \"#/required\",\n        keyword: \"required\",\n        params: {\n          missingProperty: \"columnCount\"\n        },\n        message: \"must have required property '\" + \"columnCount\" + \"'\"\n      };\n\n      if (vErrors === null) {\n        vErrors = [err1];\n      } else {\n        vErrors.push(err1);\n      }\n\n      errors++;\n    }\n\n    for (const key0 in data) {\n      if (!(key0 === \"border\" || key0 === \"columns\" || key0 === \"columnDefault\" || key0 === \"columnCount\" || key0 === \"drawVerticalLine\")) {\n        const err2 = {\n          instancePath,\n          schemaPath: \"#/additionalProperties\",\n          keyword: \"additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"must NOT have additional properties\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err2];\n        } else {\n          vErrors.push(err2);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.border !== undefined) {\n      if (!validate77(data.border, {\n        instancePath: instancePath + \"/border\",\n        parentData: data,\n        parentDataProperty: \"border\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate77.errors : vErrors.concat(validate77.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.columns !== undefined) {\n      if (!validate95(data.columns, {\n        instancePath: instancePath + \"/columns\",\n        parentData: data,\n        parentDataProperty: \"columns\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate95.errors : vErrors.concat(validate95.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.columnDefault !== undefined) {\n      if (!validate99(data.columnDefault, {\n        instancePath: instancePath + \"/columnDefault\",\n        parentData: data,\n        parentDataProperty: \"columnDefault\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate99.errors : vErrors.concat(validate99.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.columnCount !== undefined) {\n      let data3 = data.columnCount;\n\n      if (!(typeof data3 == \"number\" && !(data3 % 1) && !isNaN(data3) && isFinite(data3))) {\n        const err3 = {\n          instancePath: instancePath + \"/columnCount\",\n          schemaPath: \"#/properties/columnCount/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err3];\n        } else {\n          vErrors.push(err3);\n        }\n\n        errors++;\n      }\n\n      if (typeof data3 == \"number\" && isFinite(data3)) {\n        if (data3 < 1 || isNaN(data3)) {\n          const err4 = {\n            instancePath: instancePath + \"/columnCount\",\n            schemaPath: \"#/properties/columnCount/minimum\",\n            keyword: \"minimum\",\n            params: {\n              comparison: \">=\",\n              limit: 1\n            },\n            message: \"must be >= 1\"\n          };\n\n          if (vErrors === null) {\n            vErrors = [err4];\n          } else {\n            vErrors.push(err4);\n          }\n\n          errors++;\n        }\n      }\n    }\n\n    if (data.drawVerticalLine !== undefined) {\n      if (typeof data.drawVerticalLine != \"function\") {\n        const err5 = {\n          instancePath: instancePath + \"/drawVerticalLine\",\n          schemaPath: \"#/properties/drawVerticalLine/typeof\",\n          keyword: \"typeof\",\n          params: {},\n          message: \"must pass \\\"typeof\\\" keyword validation\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err5];\n        } else {\n          vErrors.push(err5);\n        }\n\n        errors++;\n      }\n    }\n  } else {\n    const err6 = {\n      instancePath,\n      schemaPath: \"#/type\",\n      keyword: \"type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"must be object\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err6];\n    } else {\n      vErrors.push(err6);\n    }\n\n    errors++;\n  }\n\n  validate76.errors = vErrors;\n  return errors === 0;\n}","map":{"version":3,"sources":["/home/andre/Documentos/Projetos/sd-019-b-project-trybewallet/node_modules/stylelint/node_modules/table/dist/src/generated/validators.js"],"names":["exports","validate43","schema13","schema15","func8","Object","prototype","hasOwnProperty","schema16","validate46","data","instancePath","parentData","parentDataProperty","rootData","vErrors","errors","err0","schemaPath","keyword","params","type","message","push","validate45","Array","isArray","key0","call","properties","additionalProperty","topBody","undefined","concat","length","topJoin","topLeft","topRight","bottomBody","bottomJoin","bottomLeft","bottomRight","bodyLeft","bodyRight","bodyJoin","headerJoin","joinBody","joinLeft","joinRight","joinJoin","err1","schema17","func0","require","default","validate64","allowedValues","enum","schema18","pattern0","RegExp","schema19","validate68","validate67","alignment","verticalAlignment","data1","err2","width","data2","isNaN","isFinite","err3","err4","comparison","limit","wrapWord","err5","truncate","data4","err6","paddingLeft","data5","err7","paddingRight","data6","err8","err9","validate66","_errs0","valid0","passing0","_errs1","test","key1","replace","_valid0","_errs5","len0","i0","passingSchemas","validate73","border","header","content","missingProperty","data7","columns","columnDefault","drawVerticalLine","drawHorizontalLine","err10","singleLine","err11","err12","validate76","schema22","validate77","validate95","validate99","columnCount","data3"],"mappings":"AAAA;;AACAA,OAAO,CAAC,aAAD,CAAP,GAAyBC,UAAzB;AACA,MAAMC,QAAQ,GAAG;AACb,SAAO,aADM;AAEb,aAAW,yCAFE;AAGb,UAAQ,QAHK;AAIb,gBAAc;AACV,cAAU;AACN,cAAQ;AADF,KADA;AAIV,cAAU;AACN,cAAQ,QADF;AAEN,oBAAc;AACV,mBAAW;AACP,kBAAQ;AADD,SADD;AAIV,qBAAa;AACT,kBAAQ;AADC,SAJH;AAOV,oBAAY;AACR,kBAAQ;AADA,SAPF;AAUV,oBAAY;AACR,kBAAQ;AADA,SAVF;AAaV,uBAAe;AACX,kBAAQ;AADG,SAbL;AAgBV,wBAAgB;AACZ,kBAAQ;AADI;AAhBN,OAFR;AAsBN,kBAAY,CAAC,SAAD,CAtBN;AAuBN,8BAAwB;AAvBlB,KAJA;AA6BV,eAAW;AACP,cAAQ;AADD,KA7BD;AAgCV,qBAAiB;AACb,cAAQ;AADK,KAhCP;AAmCV,wBAAoB;AAChB,gBAAU;AADM,KAnCV;AAsCV,0BAAsB;AAClB,gBAAU;AADQ,KAtCZ;AAyCV,kBAAc;AACV,gBAAU;AADA;AAzCJ,GAJD;AAiDb,0BAAwB;AAjDX,CAAjB;AAmDA,MAAMC,QAAQ,GAAG;AACb,UAAQ,QADK;AAEb,gBAAc;AACV,eAAW;AACP,cAAQ;AADD,KADD;AAIV,eAAW;AACP,cAAQ;AADD,KAJD;AAOV,eAAW;AACP,cAAQ;AADD,KAPD;AAUV,gBAAY;AACR,cAAQ;AADA,KAVF;AAaV,kBAAc;AACV,cAAQ;AADE,KAbJ;AAgBV,kBAAc;AACV,cAAQ;AADE,KAhBJ;AAmBV,kBAAc;AACV,cAAQ;AADE,KAnBJ;AAsBV,mBAAe;AACX,cAAQ;AADG,KAtBL;AAyBV,gBAAY;AACR,cAAQ;AADA,KAzBF;AA4BV,iBAAa;AACT,cAAQ;AADC,KA5BH;AA+BV,gBAAY;AACR,cAAQ;AADA,KA/BF;AAkCV,kBAAc;AACV,cAAQ;AADE,KAlCJ;AAqCV,gBAAY;AACR,cAAQ;AADA,KArCF;AAwCV,gBAAY;AACR,cAAQ;AADA,KAxCF;AA2CV,iBAAa;AACT,cAAQ;AADC,KA3CH;AA8CV,gBAAY;AACR,cAAQ;AADA;AA9CF,GAFD;AAoDb,0BAAwB;AApDX,CAAjB;AAsDA,MAAMC,KAAK,GAAGC,MAAM,CAACC,SAAP,CAAiBC,cAA/B;AACA,MAAMC,QAAQ,GAAG;AACb,UAAQ;AADK,CAAjB;;AAGA,SAASC,UAAT,CAAoBC,IAApB,EAAuG;AAAA,MAA7E;AAAEC,IAAAA,YAAY,GAAG,EAAjB;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA,kBAAjC;AAAqDC,IAAAA,QAAQ,GAAGJ;AAAhE,GAA6E,uEAAJ,EAAI;AACnG,MAAIK,OAAO,GAAG,IAAd;AACA,MAAIC,MAAM,GAAG,CAAb;;AACA,MAAI,OAAON,IAAP,KAAgB,QAApB,EAA8B;AAC1B,UAAMO,IAAI,GAAG;AACTN,MAAAA,YADS;AAETO,MAAAA,UAAU,EAAE,QAFH;AAGTC,MAAAA,OAAO,EAAE,MAHA;AAITC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF,OAJC;AAOTC,MAAAA,OAAO,EAAE;AAPA,KAAb;;AASA,QAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,MAAAA,OAAO,GAAG,CAACE,IAAD,CAAV;AACH,KAFD,MAGK;AACDF,MAAAA,OAAO,CAACQ,IAAR,CAAaN,IAAb;AACH;;AACDD,IAAAA,MAAM;AACT;;AACDP,EAAAA,UAAU,CAACO,MAAX,GAAoBD,OAApB;AACA,SAAOC,MAAM,KAAK,CAAlB;AACH;;AACD,SAASQ,UAAT,CAAoBd,IAApB,EAAuG;AAAA,MAA7E;AAAEC,IAAAA,YAAY,GAAG,EAAjB;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA,kBAAjC;AAAqDC,IAAAA,QAAQ,GAAGJ;AAAhE,GAA6E,uEAAJ,EAAI;AACnG,MAAIK,OAAO,GAAG,IAAd;AACA,MAAIC,MAAM,GAAG,CAAb;;AACA,MAAIN,IAAI,IAAI,OAAOA,IAAP,IAAe,QAAvB,IAAmC,CAACe,KAAK,CAACC,OAAN,CAAchB,IAAd,CAAxC,EAA6D;AACzD,SAAK,MAAMiB,IAAX,IAAmBjB,IAAnB,EAAyB;AACrB,UAAI,CAAEN,KAAK,CAACwB,IAAN,CAAWzB,QAAQ,CAAC0B,UAApB,EAAgCF,IAAhC,CAAN,EAA8C;AAC1C,cAAMV,IAAI,GAAG;AACTN,UAAAA,YADS;AAETO,UAAAA,UAAU,EAAE,wBAFH;AAGTC,UAAAA,OAAO,EAAE,sBAHA;AAITC,UAAAA,MAAM,EAAE;AACJU,YAAAA,kBAAkB,EAAEH;AADhB,WAJC;AAOTL,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACE,IAAD,CAAV;AACH,SAFD,MAGK;AACDF,UAAAA,OAAO,CAACQ,IAAR,CAAaN,IAAb;AACH;;AACDD,QAAAA,MAAM;AACT;AACJ;;AACD,QAAIN,IAAI,CAACqB,OAAL,KAAiBC,SAArB,EAAgC;AAC5B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAACqB,OAAN,EAAe;AAC3BpB,QAAAA,YAAY,EAAEA,YAAY,GAAG,UADF;AAE3BC,QAAAA,UAAU,EAAEF,IAFe;AAG3BG,QAAAA,kBAAkB,EAAE,SAHO;AAI3BC,QAAAA;AAJ2B,OAAf,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACyB,OAAL,KAAiBH,SAArB,EAAgC;AAC5B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAACyB,OAAN,EAAe;AAC3BxB,QAAAA,YAAY,EAAEA,YAAY,GAAG,UADF;AAE3BC,QAAAA,UAAU,EAAEF,IAFe;AAG3BG,QAAAA,kBAAkB,EAAE,SAHO;AAI3BC,QAAAA;AAJ2B,OAAf,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAAC0B,OAAL,KAAiBJ,SAArB,EAAgC;AAC5B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAAC0B,OAAN,EAAe;AAC3BzB,QAAAA,YAAY,EAAEA,YAAY,GAAG,UADF;AAE3BC,QAAAA,UAAU,EAAEF,IAFe;AAG3BG,QAAAA,kBAAkB,EAAE,SAHO;AAI3BC,QAAAA;AAJ2B,OAAf,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAAC2B,QAAL,KAAkBL,SAAtB,EAAiC;AAC7B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAAC2B,QAAN,EAAgB;AAC5B1B,QAAAA,YAAY,EAAEA,YAAY,GAAG,WADD;AAE5BC,QAAAA,UAAU,EAAEF,IAFgB;AAG5BG,QAAAA,kBAAkB,EAAE,UAHQ;AAI5BC,QAAAA;AAJ4B,OAAhB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAAC4B,UAAL,KAAoBN,SAAxB,EAAmC;AAC/B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAAC4B,UAAN,EAAkB;AAC9B3B,QAAAA,YAAY,EAAEA,YAAY,GAAG,aADC;AAE9BC,QAAAA,UAAU,EAAEF,IAFkB;AAG9BG,QAAAA,kBAAkB,EAAE,YAHU;AAI9BC,QAAAA;AAJ8B,OAAlB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAAC6B,UAAL,KAAoBP,SAAxB,EAAmC;AAC/B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAAC6B,UAAN,EAAkB;AAC9B5B,QAAAA,YAAY,EAAEA,YAAY,GAAG,aADC;AAE9BC,QAAAA,UAAU,EAAEF,IAFkB;AAG9BG,QAAAA,kBAAkB,EAAE,YAHU;AAI9BC,QAAAA;AAJ8B,OAAlB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAAC8B,UAAL,KAAoBR,SAAxB,EAAmC;AAC/B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAAC8B,UAAN,EAAkB;AAC9B7B,QAAAA,YAAY,EAAEA,YAAY,GAAG,aADC;AAE9BC,QAAAA,UAAU,EAAEF,IAFkB;AAG9BG,QAAAA,kBAAkB,EAAE,YAHU;AAI9BC,QAAAA;AAJ8B,OAAlB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAAC+B,WAAL,KAAqBT,SAAzB,EAAoC;AAChC,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAAC+B,WAAN,EAAmB;AAC/B9B,QAAAA,YAAY,EAAEA,YAAY,GAAG,cADE;AAE/BC,QAAAA,UAAU,EAAEF,IAFmB;AAG/BG,QAAAA,kBAAkB,EAAE,aAHW;AAI/BC,QAAAA;AAJ+B,OAAnB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACgC,QAAL,KAAkBV,SAAtB,EAAiC;AAC7B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAACgC,QAAN,EAAgB;AAC5B/B,QAAAA,YAAY,EAAEA,YAAY,GAAG,WADD;AAE5BC,QAAAA,UAAU,EAAEF,IAFgB;AAG5BG,QAAAA,kBAAkB,EAAE,UAHQ;AAI5BC,QAAAA;AAJ4B,OAAhB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACiC,SAAL,KAAmBX,SAAvB,EAAkC;AAC9B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAACiC,SAAN,EAAiB;AAC7BhC,QAAAA,YAAY,EAAEA,YAAY,GAAG,YADA;AAE7BC,QAAAA,UAAU,EAAEF,IAFiB;AAG7BG,QAAAA,kBAAkB,EAAE,WAHS;AAI7BC,QAAAA;AAJ6B,OAAjB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACkC,QAAL,KAAkBZ,SAAtB,EAAiC;AAC7B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAACkC,QAAN,EAAgB;AAC5BjC,QAAAA,YAAY,EAAEA,YAAY,GAAG,WADD;AAE5BC,QAAAA,UAAU,EAAEF,IAFgB;AAG5BG,QAAAA,kBAAkB,EAAE,UAHQ;AAI5BC,QAAAA;AAJ4B,OAAhB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACmC,UAAL,KAAoBb,SAAxB,EAAmC;AAC/B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAACmC,UAAN,EAAkB;AAC9BlC,QAAAA,YAAY,EAAEA,YAAY,GAAG,aADC;AAE9BC,QAAAA,UAAU,EAAEF,IAFkB;AAG9BG,QAAAA,kBAAkB,EAAE,YAHU;AAI9BC,QAAAA;AAJ8B,OAAlB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACoC,QAAL,KAAkBd,SAAtB,EAAiC;AAC7B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAACoC,QAAN,EAAgB;AAC5BnC,QAAAA,YAAY,EAAEA,YAAY,GAAG,WADD;AAE5BC,QAAAA,UAAU,EAAEF,IAFgB;AAG5BG,QAAAA,kBAAkB,EAAE,UAHQ;AAI5BC,QAAAA;AAJ4B,OAAhB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACqC,QAAL,KAAkBf,SAAtB,EAAiC;AAC7B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAACqC,QAAN,EAAgB;AAC5BpC,QAAAA,YAAY,EAAEA,YAAY,GAAG,WADD;AAE5BC,QAAAA,UAAU,EAAEF,IAFgB;AAG5BG,QAAAA,kBAAkB,EAAE,UAHQ;AAI5BC,QAAAA;AAJ4B,OAAhB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACsC,SAAL,KAAmBhB,SAAvB,EAAkC;AAC9B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAACsC,SAAN,EAAiB;AAC7BrC,QAAAA,YAAY,EAAEA,YAAY,GAAG,YADA;AAE7BC,QAAAA,UAAU,EAAEF,IAFiB;AAG7BG,QAAAA,kBAAkB,EAAE,WAHS;AAI7BC,QAAAA;AAJ6B,OAAjB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACuC,QAAL,KAAkBjB,SAAtB,EAAiC;AAC7B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAACuC,QAAN,EAAgB;AAC5BtC,QAAAA,YAAY,EAAEA,YAAY,GAAG,WADD;AAE5BC,QAAAA,UAAU,EAAEF,IAFgB;AAG5BG,QAAAA,kBAAkB,EAAE,UAHQ;AAI5BC,QAAAA;AAJ4B,OAAhB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;AACJ,GArMD,MAsMK;AACD,UAAMgB,IAAI,GAAG;AACTvC,MAAAA,YADS;AAETO,MAAAA,UAAU,EAAE,QAFH;AAGTC,MAAAA,OAAO,EAAE,MAHA;AAITC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF,OAJC;AAOTC,MAAAA,OAAO,EAAE;AAPA,KAAb;;AASA,QAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,MAAAA,OAAO,GAAG,CAACmC,IAAD,CAAV;AACH,KAFD,MAGK;AACDnC,MAAAA,OAAO,CAACQ,IAAR,CAAa2B,IAAb;AACH;;AACDlC,IAAAA,MAAM;AACT;;AACDQ,EAAAA,UAAU,CAACR,MAAX,GAAoBD,OAApB;AACA,SAAOC,MAAM,KAAK,CAAlB;AACH;;AACD,MAAMmC,QAAQ,GAAG;AACb,UAAQ,QADK;AAEb,UAAQ,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,EAA4B,SAA5B;AAFK,CAAjB;;AAIA,MAAMC,KAAK,GAAGC,OAAO,CAAC,wBAAD,CAAP,CAAkCC,OAAhD;;AACA,SAASC,UAAT,CAAoB7C,IAApB,EAAuG;AAAA,MAA7E;AAAEC,IAAAA,YAAY,GAAG,EAAjB;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA,kBAAjC;AAAqDC,IAAAA,QAAQ,GAAGJ;AAAhE,GAA6E,uEAAJ,EAAI;AACnG,MAAIK,OAAO,GAAG,IAAd;AACA,MAAIC,MAAM,GAAG,CAAb;;AACA,MAAI,OAAON,IAAP,KAAgB,QAApB,EAA8B;AAC1B,UAAMO,IAAI,GAAG;AACTN,MAAAA,YADS;AAETO,MAAAA,UAAU,EAAE,QAFH;AAGTC,MAAAA,OAAO,EAAE,MAHA;AAITC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF,OAJC;AAOTC,MAAAA,OAAO,EAAE;AAPA,KAAb;;AASA,QAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,MAAAA,OAAO,GAAG,CAACE,IAAD,CAAV;AACH,KAFD,MAGK;AACDF,MAAAA,OAAO,CAACQ,IAAR,CAAaN,IAAb;AACH;;AACDD,IAAAA,MAAM;AACT;;AACD,MAAI,EAAKN,IAAI,KAAK,MAAV,IAAsBA,IAAI,KAAK,OAAhC,IAA8CA,IAAI,KAAK,QAAxD,IAAuEA,IAAI,KAAK,SAAlF,CAAJ,EAAmG;AAC/F,UAAMwC,IAAI,GAAG;AACTvC,MAAAA,YADS;AAETO,MAAAA,UAAU,EAAE,QAFH;AAGTC,MAAAA,OAAO,EAAE,MAHA;AAITC,MAAAA,MAAM,EAAE;AACJoC,QAAAA,aAAa,EAAEL,QAAQ,CAACM;AADpB,OAJC;AAOTnC,MAAAA,OAAO,EAAE;AAPA,KAAb;;AASA,QAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,MAAAA,OAAO,GAAG,CAACmC,IAAD,CAAV;AACH,KAFD,MAGK;AACDnC,MAAAA,OAAO,CAACQ,IAAR,CAAa2B,IAAb;AACH;;AACDlC,IAAAA,MAAM;AACT;;AACDuC,EAAAA,UAAU,CAACvC,MAAX,GAAoBD,OAApB;AACA,SAAOC,MAAM,KAAK,CAAlB;AACH;;AACD,MAAM0C,QAAQ,GAAG;AACb,WAAS,CAAC;AACF,YAAQ,QADN;AAEF,yBAAqB;AACjB,kBAAY;AACR,gBAAQ;AADA;AADK,KAFnB;AAOF,4BAAwB;AAPtB,GAAD,EAQF;AACC,YAAQ,OADT;AAEC,aAAS;AACL,cAAQ;AADH;AAFV,GARE;AADI,CAAjB;AAgBA,MAAMC,QAAQ,GAAG,IAAIC,MAAJ,CAAW,UAAX,EAAuB,GAAvB,CAAjB;AACA,MAAMC,QAAQ,GAAG;AACb,UAAQ,QADK;AAEb,gBAAc;AACV,iBAAa;AACT,cAAQ;AADC,KADH;AAIV,yBAAqB;AACjB,cAAQ,QADS;AAEjB,cAAQ,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB;AAFS,KAJX;AAQV,aAAS;AACL,cAAQ,SADH;AAEL,iBAAW;AAFN,KARC;AAYV,gBAAY;AACR,cAAQ;AADA,KAZF;AAeV,gBAAY;AACR,cAAQ;AADA,KAfF;AAkBV,mBAAe;AACX,cAAQ;AADG,KAlBL;AAqBV,oBAAgB;AACZ,cAAQ;AADI;AArBN,GAFD;AA2Bb,0BAAwB;AA3BX,CAAjB;;AA6BA,SAASC,UAAT,CAAoBpD,IAApB,EAAuG;AAAA,MAA7E;AAAEC,IAAAA,YAAY,GAAG,EAAjB;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA,kBAAjC;AAAqDC,IAAAA,QAAQ,GAAGJ;AAAhE,GAA6E,uEAAJ,EAAI;AACnG,MAAIK,OAAO,GAAG,IAAd;AACA,MAAIC,MAAM,GAAG,CAAb;;AACA,MAAI,OAAON,IAAP,KAAgB,QAApB,EAA8B;AAC1B,UAAMO,IAAI,GAAG;AACTN,MAAAA,YADS;AAETO,MAAAA,UAAU,EAAE,QAFH;AAGTC,MAAAA,OAAO,EAAE,MAHA;AAITC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF,OAJC;AAOTC,MAAAA,OAAO,EAAE;AAPA,KAAb;;AASA,QAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,MAAAA,OAAO,GAAG,CAACE,IAAD,CAAV;AACH,KAFD,MAGK;AACDF,MAAAA,OAAO,CAACQ,IAAR,CAAaN,IAAb;AACH;;AACDD,IAAAA,MAAM;AACT;;AACD,MAAI,EAAKN,IAAI,KAAK,MAAV,IAAsBA,IAAI,KAAK,OAAhC,IAA8CA,IAAI,KAAK,QAAxD,IAAuEA,IAAI,KAAK,SAAlF,CAAJ,EAAmG;AAC/F,UAAMwC,IAAI,GAAG;AACTvC,MAAAA,YADS;AAETO,MAAAA,UAAU,EAAE,QAFH;AAGTC,MAAAA,OAAO,EAAE,MAHA;AAITC,MAAAA,MAAM,EAAE;AACJoC,QAAAA,aAAa,EAAEL,QAAQ,CAACM;AADpB,OAJC;AAOTnC,MAAAA,OAAO,EAAE;AAPA,KAAb;;AASA,QAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,MAAAA,OAAO,GAAG,CAACmC,IAAD,CAAV;AACH,KAFD,MAGK;AACDnC,MAAAA,OAAO,CAACQ,IAAR,CAAa2B,IAAb;AACH;;AACDlC,IAAAA,MAAM;AACT;;AACD8C,EAAAA,UAAU,CAAC9C,MAAX,GAAoBD,OAApB;AACA,SAAOC,MAAM,KAAK,CAAlB;AACH;;AACD,SAAS+C,UAAT,CAAoBrD,IAApB,EAAuG;AAAA,MAA7E;AAAEC,IAAAA,YAAY,GAAG,EAAjB;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA,kBAAjC;AAAqDC,IAAAA,QAAQ,GAAGJ;AAAhE,GAA6E,uEAAJ,EAAI;AACnG,MAAIK,OAAO,GAAG,IAAd;AACA,MAAIC,MAAM,GAAG,CAAb;;AACA,MAAIN,IAAI,IAAI,OAAOA,IAAP,IAAe,QAAvB,IAAmC,CAACe,KAAK,CAACC,OAAN,CAAchB,IAAd,CAAxC,EAA6D;AACzD,SAAK,MAAMiB,IAAX,IAAmBjB,IAAnB,EAAyB;AACrB,UAAI,EAAQiB,IAAI,KAAK,WAAV,IAA2BA,IAAI,KAAK,mBAArC,IAA+DA,IAAI,KAAK,OAAzE,IAAuFA,IAAI,KAAK,UAAjG,IAAkHA,IAAI,KAAK,UAA5H,IAA6IA,IAAI,KAAK,aAAvJ,IAA2KA,IAAI,KAAK,cAAtL,CAAJ,EAA4M;AACxM,cAAMV,IAAI,GAAG;AACTN,UAAAA,YADS;AAETO,UAAAA,UAAU,EAAE,wBAFH;AAGTC,UAAAA,OAAO,EAAE,sBAHA;AAITC,UAAAA,MAAM,EAAE;AACJU,YAAAA,kBAAkB,EAAEH;AADhB,WAJC;AAOTL,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACE,IAAD,CAAV;AACH,SAFD,MAGK;AACDF,UAAAA,OAAO,CAACQ,IAAR,CAAaN,IAAb;AACH;;AACDD,QAAAA,MAAM;AACT;AACJ;;AACD,QAAIN,IAAI,CAACsD,SAAL,KAAmBhC,SAAvB,EAAkC;AAC9B,UAAI,CAAE8B,UAAU,CAACpD,IAAI,CAACsD,SAAN,EAAiB;AAC7BrD,QAAAA,YAAY,EAAEA,YAAY,GAAG,YADA;AAE7BC,QAAAA,UAAU,EAAEF,IAFiB;AAG7BG,QAAAA,kBAAkB,EAAE,WAHS;AAI7BC,QAAAA;AAJ6B,OAAjB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmB+C,UAAU,CAAC9C,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAe6B,UAAU,CAAC9C,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACuD,iBAAL,KAA2BjC,SAA/B,EAA0C;AACtC,UAAIkC,KAAK,GAAGxD,IAAI,CAACuD,iBAAjB;;AACA,UAAI,OAAOC,KAAP,KAAiB,QAArB,EAA+B;AAC3B,cAAMhB,IAAI,GAAG;AACTvC,UAAAA,YAAY,EAAEA,YAAY,GAAG,oBADpB;AAETO,UAAAA,UAAU,EAAE,qCAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF,WAJC;AAOTC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACmC,IAAD,CAAV;AACH,SAFD,MAGK;AACDnC,UAAAA,OAAO,CAACQ,IAAR,CAAa2B,IAAb;AACH;;AACDlC,QAAAA,MAAM;AACT;;AACD,UAAI,EAAIkD,KAAK,KAAK,KAAX,IAAsBA,KAAK,KAAK,QAAjC,IAAgDA,KAAK,KAAK,QAA5D,CAAJ,EAA4E;AACxE,cAAMC,IAAI,GAAG;AACTxD,UAAAA,YAAY,EAAEA,YAAY,GAAG,oBADpB;AAETO,UAAAA,UAAU,EAAE,qCAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJoC,YAAAA,aAAa,EAAEK,QAAQ,CAAChC,UAAT,CAAoBoC,iBAApB,CAAsCR;AADjD,WAJC;AAOTnC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACoD,IAAD,CAAV;AACH,SAFD,MAGK;AACDpD,UAAAA,OAAO,CAACQ,IAAR,CAAa4C,IAAb;AACH;;AACDnD,QAAAA,MAAM;AACT;AACJ;;AACD,QAAIN,IAAI,CAAC0D,KAAL,KAAepC,SAAnB,EAA8B;AAC1B,UAAIqC,KAAK,GAAG3D,IAAI,CAAC0D,KAAjB;;AACA,UAAI,EAAI,OAAOC,KAAP,IAAgB,QAAjB,IAA+B,EAAEA,KAAK,GAAG,CAAV,KAAgB,CAACC,KAAK,CAACD,KAAD,CAAtD,IAAoEE,QAAQ,CAACF,KAAD,CAA9E,CAAJ,EAA6F;AACzF,cAAMG,IAAI,GAAG;AACT7D,UAAAA,YAAY,EAAEA,YAAY,GAAG,QADpB;AAETO,UAAAA,UAAU,EAAE,yBAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF,WAJC;AAOTC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACyD,IAAD,CAAV;AACH,SAFD,MAGK;AACDzD,UAAAA,OAAO,CAACQ,IAAR,CAAaiD,IAAb;AACH;;AACDxD,QAAAA,MAAM;AACT;;AACD,UAAK,OAAOqD,KAAP,IAAgB,QAAjB,IAA+BE,QAAQ,CAACF,KAAD,CAA3C,EAAqD;AACjD,YAAIA,KAAK,GAAG,CAAR,IAAaC,KAAK,CAACD,KAAD,CAAtB,EAA+B;AAC3B,gBAAMI,IAAI,GAAG;AACT9D,YAAAA,YAAY,EAAEA,YAAY,GAAG,QADpB;AAETO,YAAAA,UAAU,EAAE,4BAFH;AAGTC,YAAAA,OAAO,EAAE,SAHA;AAITC,YAAAA,MAAM,EAAE;AACJsD,cAAAA,UAAU,EAAE,IADR;AAEJC,cAAAA,KAAK,EAAE;AAFH,aAJC;AAQTrD,YAAAA,OAAO,EAAE;AARA,WAAb;;AAUA,cAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,YAAAA,OAAO,GAAG,CAAC0D,IAAD,CAAV;AACH,WAFD,MAGK;AACD1D,YAAAA,OAAO,CAACQ,IAAR,CAAakD,IAAb;AACH;;AACDzD,UAAAA,MAAM;AACT;AACJ;AACJ;;AACD,QAAIN,IAAI,CAACkE,QAAL,KAAkB5C,SAAtB,EAAiC;AAC7B,UAAI,OAAOtB,IAAI,CAACkE,QAAZ,KAAyB,SAA7B,EAAwC;AACpC,cAAMC,IAAI,GAAG;AACTlE,UAAAA,YAAY,EAAEA,YAAY,GAAG,WADpB;AAETO,UAAAA,UAAU,EAAE,4BAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF,WAJC;AAOTC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAAC8D,IAAD,CAAV;AACH,SAFD,MAGK;AACD9D,UAAAA,OAAO,CAACQ,IAAR,CAAasD,IAAb;AACH;;AACD7D,QAAAA,MAAM;AACT;AACJ;;AACD,QAAIN,IAAI,CAACoE,QAAL,KAAkB9C,SAAtB,EAAiC;AAC7B,UAAI+C,KAAK,GAAGrE,IAAI,CAACoE,QAAjB;;AACA,UAAI,EAAI,OAAOC,KAAP,IAAgB,QAAjB,IAA+B,EAAEA,KAAK,GAAG,CAAV,KAAgB,CAACT,KAAK,CAACS,KAAD,CAAtD,IAAoER,QAAQ,CAACQ,KAAD,CAA9E,CAAJ,EAA6F;AACzF,cAAMC,IAAI,GAAG;AACTrE,UAAAA,YAAY,EAAEA,YAAY,GAAG,WADpB;AAETO,UAAAA,UAAU,EAAE,4BAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF,WAJC;AAOTC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACiE,IAAD,CAAV;AACH,SAFD,MAGK;AACDjE,UAAAA,OAAO,CAACQ,IAAR,CAAayD,IAAb;AACH;;AACDhE,QAAAA,MAAM;AACT;AACJ;;AACD,QAAIN,IAAI,CAACuE,WAAL,KAAqBjD,SAAzB,EAAoC;AAChC,UAAIkD,KAAK,GAAGxE,IAAI,CAACuE,WAAjB;;AACA,UAAI,EAAI,OAAOC,KAAP,IAAgB,QAAjB,IAA+B,EAAEA,KAAK,GAAG,CAAV,KAAgB,CAACZ,KAAK,CAACY,KAAD,CAAtD,IAAoEX,QAAQ,CAACW,KAAD,CAA9E,CAAJ,EAA6F;AACzF,cAAMC,IAAI,GAAG;AACTxE,UAAAA,YAAY,EAAEA,YAAY,GAAG,cADpB;AAETO,UAAAA,UAAU,EAAE,+BAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF,WAJC;AAOTC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACoE,IAAD,CAAV;AACH,SAFD,MAGK;AACDpE,UAAAA,OAAO,CAACQ,IAAR,CAAa4D,IAAb;AACH;;AACDnE,QAAAA,MAAM;AACT;AACJ;;AACD,QAAIN,IAAI,CAAC0E,YAAL,KAAsBpD,SAA1B,EAAqC;AACjC,UAAIqD,KAAK,GAAG3E,IAAI,CAAC0E,YAAjB;;AACA,UAAI,EAAI,OAAOC,KAAP,IAAgB,QAAjB,IAA+B,EAAEA,KAAK,GAAG,CAAV,KAAgB,CAACf,KAAK,CAACe,KAAD,CAAtD,IAAoEd,QAAQ,CAACc,KAAD,CAA9E,CAAJ,EAA6F;AACzF,cAAMC,IAAI,GAAG;AACT3E,UAAAA,YAAY,EAAEA,YAAY,GAAG,eADpB;AAETO,UAAAA,UAAU,EAAE,gCAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF,WAJC;AAOTC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACuE,IAAD,CAAV;AACH,SAFD,MAGK;AACDvE,UAAAA,OAAO,CAACQ,IAAR,CAAa+D,IAAb;AACH;;AACDtE,QAAAA,MAAM;AACT;AACJ;AACJ,GApMD,MAqMK;AACD,UAAMuE,IAAI,GAAG;AACT5E,MAAAA,YADS;AAETO,MAAAA,UAAU,EAAE,QAFH;AAGTC,MAAAA,OAAO,EAAE,MAHA;AAITC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF,OAJC;AAOTC,MAAAA,OAAO,EAAE;AAPA,KAAb;;AASA,QAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,MAAAA,OAAO,GAAG,CAACwE,IAAD,CAAV;AACH,KAFD,MAGK;AACDxE,MAAAA,OAAO,CAACQ,IAAR,CAAagE,IAAb;AACH;;AACDvE,IAAAA,MAAM;AACT;;AACD+C,EAAAA,UAAU,CAAC/C,MAAX,GAAoBD,OAApB;AACA,SAAOC,MAAM,KAAK,CAAlB;AACH;;AACD,SAASwE,UAAT,CAAoB9E,IAApB,EAAuG;AAAA,MAA7E;AAAEC,IAAAA,YAAY,GAAG,EAAjB;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA,kBAAjC;AAAqDC,IAAAA,QAAQ,GAAGJ;AAAhE,GAA6E,uEAAJ,EAAI;AACnG,MAAIK,OAAO,GAAG,IAAd;AACA,MAAIC,MAAM,GAAG,CAAb;AACA,QAAMyE,MAAM,GAAGzE,MAAf;AACA,MAAI0E,MAAM,GAAG,KAAb;AACA,MAAIC,QAAQ,GAAG,IAAf;AACA,QAAMC,MAAM,GAAG5E,MAAf;;AACA,MAAIN,IAAI,IAAI,OAAOA,IAAP,IAAe,QAAvB,IAAmC,CAACe,KAAK,CAACC,OAAN,CAAchB,IAAd,CAAxC,EAA6D;AACzD,SAAK,MAAMiB,IAAX,IAAmBjB,IAAnB,EAAyB;AACrB,UAAI,CAAEiD,QAAQ,CAACkC,IAAT,CAAclE,IAAd,CAAN,EAA4B;AACxB,cAAMV,IAAI,GAAG;AACTN,UAAAA,YADS;AAETO,UAAAA,UAAU,EAAE,gCAFH;AAGTC,UAAAA,OAAO,EAAE,sBAHA;AAITC,UAAAA,MAAM,EAAE;AACJU,YAAAA,kBAAkB,EAAEH;AADhB,WAJC;AAOTL,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACE,IAAD,CAAV;AACH,SAFD,MAGK;AACDF,UAAAA,OAAO,CAACQ,IAAR,CAAaN,IAAb;AACH;;AACDD,QAAAA,MAAM;AACT;AACJ;;AACD,SAAK,MAAM8E,IAAX,IAAmBpF,IAAnB,EAAyB;AACrB,UAAIiD,QAAQ,CAACkC,IAAT,CAAcC,IAAd,CAAJ,EAAyB;AACrB,YAAI,CAAE/B,UAAU,CAACrD,IAAI,CAACoF,IAAD,CAAL,EAAa;AACzBnF,UAAAA,YAAY,EAAEA,YAAY,GAAG,GAAf,GAAqBmF,IAAI,CAACC,OAAL,CAAa,IAAb,EAAmB,IAAnB,EAAyBA,OAAzB,CAAiC,KAAjC,EAAwC,IAAxC,CADV;AAEzBnF,UAAAA,UAAU,EAAEF,IAFa;AAGzBG,UAAAA,kBAAkB,EAAEiF,IAHK;AAIzBhF,UAAAA;AAJyB,SAAb,CAAhB,EAKK;AACDC,UAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBgD,UAAU,CAAC/C,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAe8B,UAAU,CAAC/C,MAA1B,CAAjD;AACAA,UAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;AACJ;AACJ,GAlCD,MAmCK;AACD,UAAMgB,IAAI,GAAG;AACTvC,MAAAA,YADS;AAETO,MAAAA,UAAU,EAAE,gBAFH;AAGTC,MAAAA,OAAO,EAAE,MAHA;AAITC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF,OAJC;AAOTC,MAAAA,OAAO,EAAE;AAPA,KAAb;;AASA,QAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,MAAAA,OAAO,GAAG,CAACmC,IAAD,CAAV;AACH,KAFD,MAGK;AACDnC,MAAAA,OAAO,CAACQ,IAAR,CAAa2B,IAAb;AACH;;AACDlC,IAAAA,MAAM;AACT;;AACD,MAAIgF,OAAO,GAAGJ,MAAM,KAAK5E,MAAzB;;AACA,MAAIgF,OAAJ,EAAa;AACTN,IAAAA,MAAM,GAAG,IAAT;AACAC,IAAAA,QAAQ,GAAG,CAAX;AACH;;AACD,QAAMM,MAAM,GAAGjF,MAAf;;AACA,MAAIS,KAAK,CAACC,OAAN,CAAchB,IAAd,CAAJ,EAAyB;AACrB,UAAMwF,IAAI,GAAGxF,IAAI,CAACwB,MAAlB;;AACA,SAAK,IAAIiE,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGD,IAAtB,EAA4BC,EAAE,EAA9B,EAAkC;AAC9B,UAAI,CAAEpC,UAAU,CAACrD,IAAI,CAACyF,EAAD,CAAL,EAAW;AACvBxF,QAAAA,YAAY,EAAEA,YAAY,GAAG,GAAf,GAAqBwF,EADZ;AAEvBvF,QAAAA,UAAU,EAAEF,IAFW;AAGvBG,QAAAA,kBAAkB,EAAEsF,EAHG;AAIvBrF,QAAAA;AAJuB,OAAX,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBgD,UAAU,CAAC/C,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAe8B,UAAU,CAAC/C,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;AACJ,GAbD,MAcK;AACD,UAAMiC,IAAI,GAAG;AACTxD,MAAAA,YADS;AAETO,MAAAA,UAAU,EAAE,gBAFH;AAGTC,MAAAA,OAAO,EAAE,MAHA;AAITC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF,OAJC;AAOTC,MAAAA,OAAO,EAAE;AAPA,KAAb;;AASA,QAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,MAAAA,OAAO,GAAG,CAACoD,IAAD,CAAV;AACH,KAFD,MAGK;AACDpD,MAAAA,OAAO,CAACQ,IAAR,CAAa4C,IAAb;AACH;;AACDnD,IAAAA,MAAM;AACT;;AACD,MAAIgF,OAAO,GAAGC,MAAM,KAAKjF,MAAzB;;AACA,MAAIgF,OAAO,IAAIN,MAAf,EAAuB;AACnBA,IAAAA,MAAM,GAAG,KAAT;AACAC,IAAAA,QAAQ,GAAG,CAACA,QAAD,EAAW,CAAX,CAAX;AACH,GAHD,MAIK;AACD,QAAIK,OAAJ,EAAa;AACTN,MAAAA,MAAM,GAAG,IAAT;AACAC,MAAAA,QAAQ,GAAG,CAAX;AACH;AACJ;;AACD,MAAI,CAACD,MAAL,EAAa;AACT,UAAMlB,IAAI,GAAG;AACT7D,MAAAA,YADS;AAETO,MAAAA,UAAU,EAAE,SAFH;AAGTC,MAAAA,OAAO,EAAE,OAHA;AAITC,MAAAA,MAAM,EAAE;AACJgF,QAAAA,cAAc,EAAET;AADZ,OAJC;AAOTrE,MAAAA,OAAO,EAAE;AAPA,KAAb;;AASA,QAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,MAAAA,OAAO,GAAG,CAACyD,IAAD,CAAV;AACH,KAFD,MAGK;AACDzD,MAAAA,OAAO,CAACQ,IAAR,CAAaiD,IAAb;AACH;;AACDxD,IAAAA,MAAM;AACT,GAjBD,MAkBK;AACDA,IAAAA,MAAM,GAAGyE,MAAT;;AACA,QAAI1E,OAAO,KAAK,IAAhB,EAAsB;AAClB,UAAI0E,MAAJ,EAAY;AACR1E,QAAAA,OAAO,CAACmB,MAAR,GAAiBuD,MAAjB;AACH,OAFD,MAGK;AACD1E,QAAAA,OAAO,GAAG,IAAV;AACH;AACJ;AACJ;;AACDyE,EAAAA,UAAU,CAACxE,MAAX,GAAoBD,OAApB;AACA,SAAOC,MAAM,KAAK,CAAlB;AACH;;AACD,SAASqF,UAAT,CAAoB3F,IAApB,EAAuG;AAAA,MAA7E;AAAEC,IAAAA,YAAY,GAAG,EAAjB;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA,kBAAjC;AAAqDC,IAAAA,QAAQ,GAAGJ;AAAhE,GAA6E,uEAAJ,EAAI;AACnG,MAAIK,OAAO,GAAG,IAAd;AACA,MAAIC,MAAM,GAAG,CAAb;;AACA,MAAIN,IAAI,IAAI,OAAOA,IAAP,IAAe,QAAvB,IAAmC,CAACe,KAAK,CAACC,OAAN,CAAchB,IAAd,CAAxC,EAA6D;AACzD,SAAK,MAAMiB,IAAX,IAAmBjB,IAAnB,EAAyB;AACrB,UAAI,EAAQiB,IAAI,KAAK,WAAV,IAA2BA,IAAI,KAAK,mBAArC,IAA+DA,IAAI,KAAK,OAAzE,IAAuFA,IAAI,KAAK,UAAjG,IAAkHA,IAAI,KAAK,UAA5H,IAA6IA,IAAI,KAAK,aAAvJ,IAA2KA,IAAI,KAAK,cAAtL,CAAJ,EAA4M;AACxM,cAAMV,IAAI,GAAG;AACTN,UAAAA,YADS;AAETO,UAAAA,UAAU,EAAE,wBAFH;AAGTC,UAAAA,OAAO,EAAE,sBAHA;AAITC,UAAAA,MAAM,EAAE;AACJU,YAAAA,kBAAkB,EAAEH;AADhB,WAJC;AAOTL,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACE,IAAD,CAAV;AACH,SAFD,MAGK;AACDF,UAAAA,OAAO,CAACQ,IAAR,CAAaN,IAAb;AACH;;AACDD,QAAAA,MAAM;AACT;AACJ;;AACD,QAAIN,IAAI,CAACsD,SAAL,KAAmBhC,SAAvB,EAAkC;AAC9B,UAAI,CAAE8B,UAAU,CAACpD,IAAI,CAACsD,SAAN,EAAiB;AAC7BrD,QAAAA,YAAY,EAAEA,YAAY,GAAG,YADA;AAE7BC,QAAAA,UAAU,EAAEF,IAFiB;AAG7BG,QAAAA,kBAAkB,EAAE,WAHS;AAI7BC,QAAAA;AAJ6B,OAAjB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmB+C,UAAU,CAAC9C,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAe6B,UAAU,CAAC9C,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACuD,iBAAL,KAA2BjC,SAA/B,EAA0C;AACtC,UAAIkC,KAAK,GAAGxD,IAAI,CAACuD,iBAAjB;;AACA,UAAI,OAAOC,KAAP,KAAiB,QAArB,EAA+B;AAC3B,cAAMhB,IAAI,GAAG;AACTvC,UAAAA,YAAY,EAAEA,YAAY,GAAG,oBADpB;AAETO,UAAAA,UAAU,EAAE,qCAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF,WAJC;AAOTC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACmC,IAAD,CAAV;AACH,SAFD,MAGK;AACDnC,UAAAA,OAAO,CAACQ,IAAR,CAAa2B,IAAb;AACH;;AACDlC,QAAAA,MAAM;AACT;;AACD,UAAI,EAAIkD,KAAK,KAAK,KAAX,IAAsBA,KAAK,KAAK,QAAjC,IAAgDA,KAAK,KAAK,QAA5D,CAAJ,EAA4E;AACxE,cAAMC,IAAI,GAAG;AACTxD,UAAAA,YAAY,EAAEA,YAAY,GAAG,oBADpB;AAETO,UAAAA,UAAU,EAAE,qCAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJoC,YAAAA,aAAa,EAAEK,QAAQ,CAAChC,UAAT,CAAoBoC,iBAApB,CAAsCR;AADjD,WAJC;AAOTnC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACoD,IAAD,CAAV;AACH,SAFD,MAGK;AACDpD,UAAAA,OAAO,CAACQ,IAAR,CAAa4C,IAAb;AACH;;AACDnD,QAAAA,MAAM;AACT;AACJ;;AACD,QAAIN,IAAI,CAAC0D,KAAL,KAAepC,SAAnB,EAA8B;AAC1B,UAAIqC,KAAK,GAAG3D,IAAI,CAAC0D,KAAjB;;AACA,UAAI,EAAI,OAAOC,KAAP,IAAgB,QAAjB,IAA+B,EAAEA,KAAK,GAAG,CAAV,KAAgB,CAACC,KAAK,CAACD,KAAD,CAAtD,IAAoEE,QAAQ,CAACF,KAAD,CAA9E,CAAJ,EAA6F;AACzF,cAAMG,IAAI,GAAG;AACT7D,UAAAA,YAAY,EAAEA,YAAY,GAAG,QADpB;AAETO,UAAAA,UAAU,EAAE,yBAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF,WAJC;AAOTC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACyD,IAAD,CAAV;AACH,SAFD,MAGK;AACDzD,UAAAA,OAAO,CAACQ,IAAR,CAAaiD,IAAb;AACH;;AACDxD,QAAAA,MAAM;AACT;;AACD,UAAK,OAAOqD,KAAP,IAAgB,QAAjB,IAA+BE,QAAQ,CAACF,KAAD,CAA3C,EAAqD;AACjD,YAAIA,KAAK,GAAG,CAAR,IAAaC,KAAK,CAACD,KAAD,CAAtB,EAA+B;AAC3B,gBAAMI,IAAI,GAAG;AACT9D,YAAAA,YAAY,EAAEA,YAAY,GAAG,QADpB;AAETO,YAAAA,UAAU,EAAE,4BAFH;AAGTC,YAAAA,OAAO,EAAE,SAHA;AAITC,YAAAA,MAAM,EAAE;AACJsD,cAAAA,UAAU,EAAE,IADR;AAEJC,cAAAA,KAAK,EAAE;AAFH,aAJC;AAQTrD,YAAAA,OAAO,EAAE;AARA,WAAb;;AAUA,cAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,YAAAA,OAAO,GAAG,CAAC0D,IAAD,CAAV;AACH,WAFD,MAGK;AACD1D,YAAAA,OAAO,CAACQ,IAAR,CAAakD,IAAb;AACH;;AACDzD,UAAAA,MAAM;AACT;AACJ;AACJ;;AACD,QAAIN,IAAI,CAACkE,QAAL,KAAkB5C,SAAtB,EAAiC;AAC7B,UAAI,OAAOtB,IAAI,CAACkE,QAAZ,KAAyB,SAA7B,EAAwC;AACpC,cAAMC,IAAI,GAAG;AACTlE,UAAAA,YAAY,EAAEA,YAAY,GAAG,WADpB;AAETO,UAAAA,UAAU,EAAE,4BAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF,WAJC;AAOTC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAAC8D,IAAD,CAAV;AACH,SAFD,MAGK;AACD9D,UAAAA,OAAO,CAACQ,IAAR,CAAasD,IAAb;AACH;;AACD7D,QAAAA,MAAM;AACT;AACJ;;AACD,QAAIN,IAAI,CAACoE,QAAL,KAAkB9C,SAAtB,EAAiC;AAC7B,UAAI+C,KAAK,GAAGrE,IAAI,CAACoE,QAAjB;;AACA,UAAI,EAAI,OAAOC,KAAP,IAAgB,QAAjB,IAA+B,EAAEA,KAAK,GAAG,CAAV,KAAgB,CAACT,KAAK,CAACS,KAAD,CAAtD,IAAoER,QAAQ,CAACQ,KAAD,CAA9E,CAAJ,EAA6F;AACzF,cAAMC,IAAI,GAAG;AACTrE,UAAAA,YAAY,EAAEA,YAAY,GAAG,WADpB;AAETO,UAAAA,UAAU,EAAE,4BAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF,WAJC;AAOTC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACiE,IAAD,CAAV;AACH,SAFD,MAGK;AACDjE,UAAAA,OAAO,CAACQ,IAAR,CAAayD,IAAb;AACH;;AACDhE,QAAAA,MAAM;AACT;AACJ;;AACD,QAAIN,IAAI,CAACuE,WAAL,KAAqBjD,SAAzB,EAAoC;AAChC,UAAIkD,KAAK,GAAGxE,IAAI,CAACuE,WAAjB;;AACA,UAAI,EAAI,OAAOC,KAAP,IAAgB,QAAjB,IAA+B,EAAEA,KAAK,GAAG,CAAV,KAAgB,CAACZ,KAAK,CAACY,KAAD,CAAtD,IAAoEX,QAAQ,CAACW,KAAD,CAA9E,CAAJ,EAA6F;AACzF,cAAMC,IAAI,GAAG;AACTxE,UAAAA,YAAY,EAAEA,YAAY,GAAG,cADpB;AAETO,UAAAA,UAAU,EAAE,+BAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF,WAJC;AAOTC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACoE,IAAD,CAAV;AACH,SAFD,MAGK;AACDpE,UAAAA,OAAO,CAACQ,IAAR,CAAa4D,IAAb;AACH;;AACDnE,QAAAA,MAAM;AACT;AACJ;;AACD,QAAIN,IAAI,CAAC0E,YAAL,KAAsBpD,SAA1B,EAAqC;AACjC,UAAIqD,KAAK,GAAG3E,IAAI,CAAC0E,YAAjB;;AACA,UAAI,EAAI,OAAOC,KAAP,IAAgB,QAAjB,IAA+B,EAAEA,KAAK,GAAG,CAAV,KAAgB,CAACf,KAAK,CAACe,KAAD,CAAtD,IAAoEd,QAAQ,CAACc,KAAD,CAA9E,CAAJ,EAA6F;AACzF,cAAMC,IAAI,GAAG;AACT3E,UAAAA,YAAY,EAAEA,YAAY,GAAG,eADpB;AAETO,UAAAA,UAAU,EAAE,gCAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF,WAJC;AAOTC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACuE,IAAD,CAAV;AACH,SAFD,MAGK;AACDvE,UAAAA,OAAO,CAACQ,IAAR,CAAa+D,IAAb;AACH;;AACDtE,QAAAA,MAAM;AACT;AACJ;AACJ,GApMD,MAqMK;AACD,UAAMuE,IAAI,GAAG;AACT5E,MAAAA,YADS;AAETO,MAAAA,UAAU,EAAE,QAFH;AAGTC,MAAAA,OAAO,EAAE,MAHA;AAITC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF,OAJC;AAOTC,MAAAA,OAAO,EAAE;AAPA,KAAb;;AASA,QAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,MAAAA,OAAO,GAAG,CAACwE,IAAD,CAAV;AACH,KAFD,MAGK;AACDxE,MAAAA,OAAO,CAACQ,IAAR,CAAagE,IAAb;AACH;;AACDvE,IAAAA,MAAM;AACT;;AACDqF,EAAAA,UAAU,CAACrF,MAAX,GAAoBD,OAApB;AACA,SAAOC,MAAM,KAAK,CAAlB;AACH;;AACD,SAASf,UAAT,CAAoBS,IAApB,EAAuG;AAAA,MAA7E;AAAEC,IAAAA,YAAY,GAAG,EAAjB;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA,kBAAjC;AAAqDC,IAAAA,QAAQ,GAAGJ;AAAhE,GAA6E,uEAAJ,EAAI;;AACnG;AAA+B;AAC/B,MAAIK,OAAO,GAAG,IAAd;AACA,MAAIC,MAAM,GAAG,CAAb;;AACA,MAAIN,IAAI,IAAI,OAAOA,IAAP,IAAe,QAAvB,IAAmC,CAACe,KAAK,CAACC,OAAN,CAAchB,IAAd,CAAxC,EAA6D;AACzD,SAAK,MAAMiB,IAAX,IAAmBjB,IAAnB,EAAyB;AACrB,UAAI,EAAQiB,IAAI,KAAK,QAAV,IAAwBA,IAAI,KAAK,QAAlC,IAAiDA,IAAI,KAAK,SAA3D,IAA2EA,IAAI,KAAK,eAArF,IAA2GA,IAAI,KAAK,kBAArH,IAA8IA,IAAI,KAAK,oBAAxJ,IAAmLA,IAAI,KAAK,YAA9L,CAAJ,EAAkN;AAC9M,cAAMV,IAAI,GAAG;AACTN,UAAAA,YADS;AAETO,UAAAA,UAAU,EAAE,wBAFH;AAGTC,UAAAA,OAAO,EAAE,sBAHA;AAITC,UAAAA,MAAM,EAAE;AACJU,YAAAA,kBAAkB,EAAEH;AADhB,WAJC;AAOTL,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACE,IAAD,CAAV;AACH,SAFD,MAGK;AACDF,UAAAA,OAAO,CAACQ,IAAR,CAAaN,IAAb;AACH;;AACDD,QAAAA,MAAM;AACT;AACJ;;AACD,QAAIN,IAAI,CAAC4F,MAAL,KAAgBtE,SAApB,EAA+B;AAC3B,UAAI,CAAER,UAAU,CAACd,IAAI,CAAC4F,MAAN,EAAc;AAC1B3F,QAAAA,YAAY,EAAEA,YAAY,GAAG,SADH;AAE1BC,QAAAA,UAAU,EAAEF,IAFc;AAG1BG,QAAAA,kBAAkB,EAAE,QAHM;AAI1BC,QAAAA;AAJ0B,OAAd,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBS,UAAU,CAACR,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAeT,UAAU,CAACR,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAAC6F,MAAL,KAAgBvE,SAApB,EAA+B;AAC3B,UAAIkC,KAAK,GAAGxD,IAAI,CAAC6F,MAAjB;;AACA,UAAIrC,KAAK,IAAI,OAAOA,KAAP,IAAgB,QAAzB,IAAqC,CAACzC,KAAK,CAACC,OAAN,CAAcwC,KAAd,CAA1C,EAAgE;AAC5D,YAAIA,KAAK,CAACsC,OAAN,KAAkBxE,SAAtB,EAAiC;AAC7B,gBAAMkB,IAAI,GAAG;AACTvC,YAAAA,YAAY,EAAEA,YAAY,GAAG,SADpB;AAETO,YAAAA,UAAU,EAAE,8BAFH;AAGTC,YAAAA,OAAO,EAAE,UAHA;AAITC,YAAAA,MAAM,EAAE;AACJqF,cAAAA,eAAe,EAAE;AADb,aAJC;AAOTnF,YAAAA,OAAO,EAAE,kCAAkC,SAAlC,GAA8C;AAP9C,WAAb;;AASA,cAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,YAAAA,OAAO,GAAG,CAACmC,IAAD,CAAV;AACH,WAFD,MAGK;AACDnC,YAAAA,OAAO,CAACQ,IAAR,CAAa2B,IAAb;AACH;;AACDlC,UAAAA,MAAM;AACT;;AACD,aAAK,MAAM8E,IAAX,IAAmB5B,KAAnB,EAA0B;AACtB,cAAI,EAAO4B,IAAI,KAAK,SAAV,IAAyBA,IAAI,KAAK,WAAnC,IAAqDA,IAAI,KAAK,UAA/D,IAAgFA,IAAI,KAAK,UAA1F,IAA2GA,IAAI,KAAK,aAArH,IAAyIA,IAAI,KAAK,cAApJ,CAAJ,EAA0K;AACtK,kBAAM3B,IAAI,GAAG;AACTxD,cAAAA,YAAY,EAAEA,YAAY,GAAG,SADpB;AAETO,cAAAA,UAAU,EAAE,0CAFH;AAGTC,cAAAA,OAAO,EAAE,sBAHA;AAITC,cAAAA,MAAM,EAAE;AACJU,gBAAAA,kBAAkB,EAAEgE;AADhB,eAJC;AAOTxE,cAAAA,OAAO,EAAE;AAPA,aAAb;;AASA,gBAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,cAAAA,OAAO,GAAG,CAACoD,IAAD,CAAV;AACH,aAFD,MAGK;AACDpD,cAAAA,OAAO,CAACQ,IAAR,CAAa4C,IAAb;AACH;;AACDnD,YAAAA,MAAM;AACT;AACJ;;AACD,YAAIkD,KAAK,CAACsC,OAAN,KAAkBxE,SAAtB,EAAiC;AAC7B,cAAI,OAAOkC,KAAK,CAACsC,OAAb,KAAyB,QAA7B,EAAuC;AACnC,kBAAMhC,IAAI,GAAG;AACT7D,cAAAA,YAAY,EAAEA,YAAY,GAAG,iBADpB;AAETO,cAAAA,UAAU,EAAE,6CAFH;AAGTC,cAAAA,OAAO,EAAE,MAHA;AAITC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF,eAJC;AAOTC,cAAAA,OAAO,EAAE;AAPA,aAAb;;AASA,gBAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,cAAAA,OAAO,GAAG,CAACyD,IAAD,CAAV;AACH,aAFD,MAGK;AACDzD,cAAAA,OAAO,CAACQ,IAAR,CAAaiD,IAAb;AACH;;AACDxD,YAAAA,MAAM;AACT;AACJ;;AACD,YAAIkD,KAAK,CAACF,SAAN,KAAoBhC,SAAxB,EAAmC;AAC/B,cAAI,CAAEuB,UAAU,CAACW,KAAK,CAACF,SAAP,EAAkB;AAC9BrD,YAAAA,YAAY,EAAEA,YAAY,GAAG,mBADC;AAE9BC,YAAAA,UAAU,EAAEsD,KAFkB;AAG9BrD,YAAAA,kBAAkB,EAAE,WAHU;AAI9BC,YAAAA;AAJ8B,WAAlB,CAAhB,EAKK;AACDC,YAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBwC,UAAU,CAACvC,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAesB,UAAU,CAACvC,MAA1B,CAAjD;AACAA,YAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,YAAIgC,KAAK,CAACU,QAAN,KAAmB5C,SAAvB,EAAkC;AAC9B,cAAI,OAAOkC,KAAK,CAACU,QAAb,KAA0B,SAA9B,EAAyC;AACrC,kBAAMH,IAAI,GAAG;AACT9D,cAAAA,YAAY,EAAEA,YAAY,GAAG,kBADpB;AAETO,cAAAA,UAAU,EAAE,8CAFH;AAGTC,cAAAA,OAAO,EAAE,MAHA;AAITC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF,eAJC;AAOTC,cAAAA,OAAO,EAAE;AAPA,aAAb;;AASA,gBAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,cAAAA,OAAO,GAAG,CAAC0D,IAAD,CAAV;AACH,aAFD,MAGK;AACD1D,cAAAA,OAAO,CAACQ,IAAR,CAAakD,IAAb;AACH;;AACDzD,YAAAA,MAAM;AACT;AACJ;;AACD,YAAIkD,KAAK,CAACY,QAAN,KAAmB9C,SAAvB,EAAkC;AAC9B,cAAIkD,KAAK,GAAGhB,KAAK,CAACY,QAAlB;;AACA,cAAI,EAAI,OAAOI,KAAP,IAAgB,QAAjB,IAA+B,EAAEA,KAAK,GAAG,CAAV,KAAgB,CAACZ,KAAK,CAACY,KAAD,CAAtD,IAAoEX,QAAQ,CAACW,KAAD,CAA9E,CAAJ,EAA6F;AACzF,kBAAML,IAAI,GAAG;AACTlE,cAAAA,YAAY,EAAEA,YAAY,GAAG,kBADpB;AAETO,cAAAA,UAAU,EAAE,8CAFH;AAGTC,cAAAA,OAAO,EAAE,MAHA;AAITC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF,eAJC;AAOTC,cAAAA,OAAO,EAAE;AAPA,aAAb;;AASA,gBAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,cAAAA,OAAO,GAAG,CAAC8D,IAAD,CAAV;AACH,aAFD,MAGK;AACD9D,cAAAA,OAAO,CAACQ,IAAR,CAAasD,IAAb;AACH;;AACD7D,YAAAA,MAAM;AACT;AACJ;;AACD,YAAIkD,KAAK,CAACe,WAAN,KAAsBjD,SAA1B,EAAqC;AACjC,cAAIqD,KAAK,GAAGnB,KAAK,CAACe,WAAlB;;AACA,cAAI,EAAI,OAAOI,KAAP,IAAgB,QAAjB,IAA+B,EAAEA,KAAK,GAAG,CAAV,KAAgB,CAACf,KAAK,CAACe,KAAD,CAAtD,IAAoEd,QAAQ,CAACc,KAAD,CAA9E,CAAJ,EAA6F;AACzF,kBAAML,IAAI,GAAG;AACTrE,cAAAA,YAAY,EAAEA,YAAY,GAAG,qBADpB;AAETO,cAAAA,UAAU,EAAE,iDAFH;AAGTC,cAAAA,OAAO,EAAE,MAHA;AAITC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF,eAJC;AAOTC,cAAAA,OAAO,EAAE;AAPA,aAAb;;AASA,gBAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,cAAAA,OAAO,GAAG,CAACiE,IAAD,CAAV;AACH,aAFD,MAGK;AACDjE,cAAAA,OAAO,CAACQ,IAAR,CAAayD,IAAb;AACH;;AACDhE,YAAAA,MAAM;AACT;AACJ;;AACD,YAAIkD,KAAK,CAACkB,YAAN,KAAuBpD,SAA3B,EAAsC;AAClC,cAAI0E,KAAK,GAAGxC,KAAK,CAACkB,YAAlB;;AACA,cAAI,EAAI,OAAOsB,KAAP,IAAgB,QAAjB,IAA+B,EAAEA,KAAK,GAAG,CAAV,KAAgB,CAACpC,KAAK,CAACoC,KAAD,CAAtD,IAAoEnC,QAAQ,CAACmC,KAAD,CAA9E,CAAJ,EAA6F;AACzF,kBAAMvB,IAAI,GAAG;AACTxE,cAAAA,YAAY,EAAEA,YAAY,GAAG,sBADpB;AAETO,cAAAA,UAAU,EAAE,kDAFH;AAGTC,cAAAA,OAAO,EAAE,MAHA;AAITC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF,eAJC;AAOTC,cAAAA,OAAO,EAAE;AAPA,aAAb;;AASA,gBAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,cAAAA,OAAO,GAAG,CAACoE,IAAD,CAAV;AACH,aAFD,MAGK;AACDpE,cAAAA,OAAO,CAACQ,IAAR,CAAa4D,IAAb;AACH;;AACDnE,YAAAA,MAAM;AACT;AACJ;AACJ,OAzJD,MA0JK;AACD,cAAMsE,IAAI,GAAG;AACT3E,UAAAA,YAAY,EAAEA,YAAY,GAAG,SADpB;AAETO,UAAAA,UAAU,EAAE,0BAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF,WAJC;AAOTC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACuE,IAAD,CAAV;AACH,SAFD,MAGK;AACDvE,UAAAA,OAAO,CAACQ,IAAR,CAAa+D,IAAb;AACH;;AACDtE,QAAAA,MAAM;AACT;AACJ;;AACD,QAAIN,IAAI,CAACiG,OAAL,KAAiB3E,SAArB,EAAgC;AAC5B,UAAI,CAAEwD,UAAU,CAAC9E,IAAI,CAACiG,OAAN,EAAe;AAC3BhG,QAAAA,YAAY,EAAEA,YAAY,GAAG,UADF;AAE3BC,QAAAA,UAAU,EAAEF,IAFe;AAG3BG,QAAAA,kBAAkB,EAAE,SAHO;AAI3BC,QAAAA;AAJ2B,OAAf,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmByE,UAAU,CAACxE,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAeuD,UAAU,CAACxE,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACkG,aAAL,KAAuB5E,SAA3B,EAAsC;AAClC,UAAI,CAAEqE,UAAU,CAAC3F,IAAI,CAACkG,aAAN,EAAqB;AACjCjG,QAAAA,YAAY,EAAEA,YAAY,GAAG,gBADI;AAEjCC,QAAAA,UAAU,EAAEF,IAFqB;AAGjCG,QAAAA,kBAAkB,EAAE,eAHa;AAIjCC,QAAAA;AAJiC,OAArB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBsF,UAAU,CAACrF,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAeoE,UAAU,CAACrF,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACmG,gBAAL,KAA0B7E,SAA9B,EAAyC;AACrC,UAAI,OAAOtB,IAAI,CAACmG,gBAAZ,IAAgC,UAApC,EAAgD;AAC5C,cAAMtB,IAAI,GAAG;AACT5E,UAAAA,YAAY,EAAEA,YAAY,GAAG,mBADpB;AAETO,UAAAA,UAAU,EAAE,sCAFH;AAGTC,UAAAA,OAAO,EAAE,QAHA;AAITC,UAAAA,MAAM,EAAE,EAJC;AAKTE,UAAAA,OAAO,EAAE;AALA,SAAb;;AAOA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACwE,IAAD,CAAV;AACH,SAFD,MAGK;AACDxE,UAAAA,OAAO,CAACQ,IAAR,CAAagE,IAAb;AACH;;AACDvE,QAAAA,MAAM;AACT;AACJ;;AACD,QAAIN,IAAI,CAACoG,kBAAL,KAA4B9E,SAAhC,EAA2C;AACvC,UAAI,OAAOtB,IAAI,CAACoG,kBAAZ,IAAkC,UAAtC,EAAkD;AAC9C,cAAMC,KAAK,GAAG;AACVpG,UAAAA,YAAY,EAAEA,YAAY,GAAG,qBADnB;AAEVO,UAAAA,UAAU,EAAE,wCAFF;AAGVC,UAAAA,OAAO,EAAE,QAHC;AAIVC,UAAAA,MAAM,EAAE,EAJE;AAKVE,UAAAA,OAAO,EAAE;AALC,SAAd;;AAOA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACgG,KAAD,CAAV;AACH,SAFD,MAGK;AACDhG,UAAAA,OAAO,CAACQ,IAAR,CAAawF,KAAb;AACH;;AACD/F,QAAAA,MAAM;AACT;AACJ;;AACD,QAAIN,IAAI,CAACsG,UAAL,KAAoBhF,SAAxB,EAAmC;AAC/B,UAAI,OAAOtB,IAAI,CAACsG,UAAZ,IAA0B,SAA9B,EAAyC;AACrC,cAAMC,KAAK,GAAG;AACVtG,UAAAA,YAAY,EAAEA,YAAY,GAAG,aADnB;AAEVO,UAAAA,UAAU,EAAE,gCAFF;AAGVC,UAAAA,OAAO,EAAE,QAHC;AAIVC,UAAAA,MAAM,EAAE,EAJE;AAKVE,UAAAA,OAAO,EAAE;AALC,SAAd;;AAOA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACkG,KAAD,CAAV;AACH,SAFD,MAGK;AACDlG,UAAAA,OAAO,CAACQ,IAAR,CAAa0F,KAAb;AACH;;AACDjG,QAAAA,MAAM;AACT;AACJ;AACJ,GA3RD,MA4RK;AACD,UAAMkG,KAAK,GAAG;AACVvG,MAAAA,YADU;AAEVO,MAAAA,UAAU,EAAE,QAFF;AAGVC,MAAAA,OAAO,EAAE,MAHC;AAIVC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF,OAJE;AAOVC,MAAAA,OAAO,EAAE;AAPC,KAAd;;AASA,QAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,MAAAA,OAAO,GAAG,CAACmG,KAAD,CAAV;AACH,KAFD,MAGK;AACDnG,MAAAA,OAAO,CAACQ,IAAR,CAAa2F,KAAb;AACH;;AACDlG,IAAAA,MAAM;AACT;;AACDf,EAAAA,UAAU,CAACe,MAAX,GAAoBD,OAApB;AACA,SAAOC,MAAM,KAAK,CAAlB;AACH;;AACDhB,OAAO,CAAC,mBAAD,CAAP,GAA+BmH,UAA/B;AACA,MAAMC,QAAQ,GAAG;AACb,SAAO,mBADM;AAEb,aAAW,yCAFE;AAGb,UAAQ,QAHK;AAIb,gBAAc;AACV,cAAU;AACN,cAAQ;AADF,KADA;AAIV,eAAW;AACP,cAAQ;AADD,KAJD;AAOV,qBAAiB;AACb,cAAQ;AADK,KAPP;AAUV,mBAAe;AACX,cAAQ,SADG;AAEX,iBAAW;AAFA,KAVL;AAcV,wBAAoB;AAChB,gBAAU;AADM;AAdV,GAJD;AAsBb,cAAY,CAAC,eAAD,EAAkB,aAAlB,CAtBC;AAuBb,0BAAwB;AAvBX,CAAjB;;AAyBA,SAASC,UAAT,CAAoB3G,IAApB,EAAuG;AAAA,MAA7E;AAAEC,IAAAA,YAAY,GAAG,EAAjB;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA,kBAAjC;AAAqDC,IAAAA,QAAQ,GAAGJ;AAAhE,GAA6E,uEAAJ,EAAI;AACnG,MAAIK,OAAO,GAAG,IAAd;AACA,MAAIC,MAAM,GAAG,CAAb;;AACA,MAAIN,IAAI,IAAI,OAAOA,IAAP,IAAe,QAAvB,IAAmC,CAACe,KAAK,CAACC,OAAN,CAAchB,IAAd,CAAxC,EAA6D;AACzD,SAAK,MAAMiB,IAAX,IAAmBjB,IAAnB,EAAyB;AACrB,UAAI,CAAEN,KAAK,CAACwB,IAAN,CAAWzB,QAAQ,CAAC0B,UAApB,EAAgCF,IAAhC,CAAN,EAA8C;AAC1C,cAAMV,IAAI,GAAG;AACTN,UAAAA,YADS;AAETO,UAAAA,UAAU,EAAE,wBAFH;AAGTC,UAAAA,OAAO,EAAE,sBAHA;AAITC,UAAAA,MAAM,EAAE;AACJU,YAAAA,kBAAkB,EAAEH;AADhB,WAJC;AAOTL,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACE,IAAD,CAAV;AACH,SAFD,MAGK;AACDF,UAAAA,OAAO,CAACQ,IAAR,CAAaN,IAAb;AACH;;AACDD,QAAAA,MAAM;AACT;AACJ;;AACD,QAAIN,IAAI,CAACqB,OAAL,KAAiBC,SAArB,EAAgC;AAC5B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAACqB,OAAN,EAAe;AAC3BpB,QAAAA,YAAY,EAAEA,YAAY,GAAG,UADF;AAE3BC,QAAAA,UAAU,EAAEF,IAFe;AAG3BG,QAAAA,kBAAkB,EAAE,SAHO;AAI3BC,QAAAA;AAJ2B,OAAf,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACyB,OAAL,KAAiBH,SAArB,EAAgC;AAC5B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAACyB,OAAN,EAAe;AAC3BxB,QAAAA,YAAY,EAAEA,YAAY,GAAG,UADF;AAE3BC,QAAAA,UAAU,EAAEF,IAFe;AAG3BG,QAAAA,kBAAkB,EAAE,SAHO;AAI3BC,QAAAA;AAJ2B,OAAf,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAAC0B,OAAL,KAAiBJ,SAArB,EAAgC;AAC5B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAAC0B,OAAN,EAAe;AAC3BzB,QAAAA,YAAY,EAAEA,YAAY,GAAG,UADF;AAE3BC,QAAAA,UAAU,EAAEF,IAFe;AAG3BG,QAAAA,kBAAkB,EAAE,SAHO;AAI3BC,QAAAA;AAJ2B,OAAf,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAAC2B,QAAL,KAAkBL,SAAtB,EAAiC;AAC7B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAAC2B,QAAN,EAAgB;AAC5B1B,QAAAA,YAAY,EAAEA,YAAY,GAAG,WADD;AAE5BC,QAAAA,UAAU,EAAEF,IAFgB;AAG5BG,QAAAA,kBAAkB,EAAE,UAHQ;AAI5BC,QAAAA;AAJ4B,OAAhB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAAC4B,UAAL,KAAoBN,SAAxB,EAAmC;AAC/B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAAC4B,UAAN,EAAkB;AAC9B3B,QAAAA,YAAY,EAAEA,YAAY,GAAG,aADC;AAE9BC,QAAAA,UAAU,EAAEF,IAFkB;AAG9BG,QAAAA,kBAAkB,EAAE,YAHU;AAI9BC,QAAAA;AAJ8B,OAAlB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAAC6B,UAAL,KAAoBP,SAAxB,EAAmC;AAC/B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAAC6B,UAAN,EAAkB;AAC9B5B,QAAAA,YAAY,EAAEA,YAAY,GAAG,aADC;AAE9BC,QAAAA,UAAU,EAAEF,IAFkB;AAG9BG,QAAAA,kBAAkB,EAAE,YAHU;AAI9BC,QAAAA;AAJ8B,OAAlB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAAC8B,UAAL,KAAoBR,SAAxB,EAAmC;AAC/B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAAC8B,UAAN,EAAkB;AAC9B7B,QAAAA,YAAY,EAAEA,YAAY,GAAG,aADC;AAE9BC,QAAAA,UAAU,EAAEF,IAFkB;AAG9BG,QAAAA,kBAAkB,EAAE,YAHU;AAI9BC,QAAAA;AAJ8B,OAAlB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAAC+B,WAAL,KAAqBT,SAAzB,EAAoC;AAChC,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAAC+B,WAAN,EAAmB;AAC/B9B,QAAAA,YAAY,EAAEA,YAAY,GAAG,cADE;AAE/BC,QAAAA,UAAU,EAAEF,IAFmB;AAG/BG,QAAAA,kBAAkB,EAAE,aAHW;AAI/BC,QAAAA;AAJ+B,OAAnB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACgC,QAAL,KAAkBV,SAAtB,EAAiC;AAC7B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAACgC,QAAN,EAAgB;AAC5B/B,QAAAA,YAAY,EAAEA,YAAY,GAAG,WADD;AAE5BC,QAAAA,UAAU,EAAEF,IAFgB;AAG5BG,QAAAA,kBAAkB,EAAE,UAHQ;AAI5BC,QAAAA;AAJ4B,OAAhB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACiC,SAAL,KAAmBX,SAAvB,EAAkC;AAC9B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAACiC,SAAN,EAAiB;AAC7BhC,QAAAA,YAAY,EAAEA,YAAY,GAAG,YADA;AAE7BC,QAAAA,UAAU,EAAEF,IAFiB;AAG7BG,QAAAA,kBAAkB,EAAE,WAHS;AAI7BC,QAAAA;AAJ6B,OAAjB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACkC,QAAL,KAAkBZ,SAAtB,EAAiC;AAC7B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAACkC,QAAN,EAAgB;AAC5BjC,QAAAA,YAAY,EAAEA,YAAY,GAAG,WADD;AAE5BC,QAAAA,UAAU,EAAEF,IAFgB;AAG5BG,QAAAA,kBAAkB,EAAE,UAHQ;AAI5BC,QAAAA;AAJ4B,OAAhB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACmC,UAAL,KAAoBb,SAAxB,EAAmC;AAC/B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAACmC,UAAN,EAAkB;AAC9BlC,QAAAA,YAAY,EAAEA,YAAY,GAAG,aADC;AAE9BC,QAAAA,UAAU,EAAEF,IAFkB;AAG9BG,QAAAA,kBAAkB,EAAE,YAHU;AAI9BC,QAAAA;AAJ8B,OAAlB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACoC,QAAL,KAAkBd,SAAtB,EAAiC;AAC7B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAACoC,QAAN,EAAgB;AAC5BnC,QAAAA,YAAY,EAAEA,YAAY,GAAG,WADD;AAE5BC,QAAAA,UAAU,EAAEF,IAFgB;AAG5BG,QAAAA,kBAAkB,EAAE,UAHQ;AAI5BC,QAAAA;AAJ4B,OAAhB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACqC,QAAL,KAAkBf,SAAtB,EAAiC;AAC7B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAACqC,QAAN,EAAgB;AAC5BpC,QAAAA,YAAY,EAAEA,YAAY,GAAG,WADD;AAE5BC,QAAAA,UAAU,EAAEF,IAFgB;AAG5BG,QAAAA,kBAAkB,EAAE,UAHQ;AAI5BC,QAAAA;AAJ4B,OAAhB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACsC,SAAL,KAAmBhB,SAAvB,EAAkC;AAC9B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAACsC,SAAN,EAAiB;AAC7BrC,QAAAA,YAAY,EAAEA,YAAY,GAAG,YADA;AAE7BC,QAAAA,UAAU,EAAEF,IAFiB;AAG7BG,QAAAA,kBAAkB,EAAE,WAHS;AAI7BC,QAAAA;AAJ6B,OAAjB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACuC,QAAL,KAAkBjB,SAAtB,EAAiC;AAC7B,UAAI,CAAEvB,UAAU,CAACC,IAAI,CAACuC,QAAN,EAAgB;AAC5BtC,QAAAA,YAAY,EAAEA,YAAY,GAAG,WADD;AAE5BC,QAAAA,UAAU,EAAEF,IAFgB;AAG5BG,QAAAA,kBAAkB,EAAE,UAHQ;AAI5BC,QAAAA;AAJ4B,OAAhB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBN,UAAU,CAACO,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAexB,UAAU,CAACO,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;AACJ,GArMD,MAsMK;AACD,UAAMgB,IAAI,GAAG;AACTvC,MAAAA,YADS;AAETO,MAAAA,UAAU,EAAE,QAFH;AAGTC,MAAAA,OAAO,EAAE,MAHA;AAITC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF,OAJC;AAOTC,MAAAA,OAAO,EAAE;AAPA,KAAb;;AASA,QAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,MAAAA,OAAO,GAAG,CAACmC,IAAD,CAAV;AACH,KAFD,MAGK;AACDnC,MAAAA,OAAO,CAACQ,IAAR,CAAa2B,IAAb;AACH;;AACDlC,IAAAA,MAAM;AACT;;AACDqG,EAAAA,UAAU,CAACrG,MAAX,GAAoBD,OAApB;AACA,SAAOC,MAAM,KAAK,CAAlB;AACH;;AACD,SAASsG,UAAT,CAAoB5G,IAApB,EAAuG;AAAA,MAA7E;AAAEC,IAAAA,YAAY,GAAG,EAAjB;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA,kBAAjC;AAAqDC,IAAAA,QAAQ,GAAGJ;AAAhE,GAA6E,uEAAJ,EAAI;AACnG,MAAIK,OAAO,GAAG,IAAd;AACA,MAAIC,MAAM,GAAG,CAAb;AACA,QAAMyE,MAAM,GAAGzE,MAAf;AACA,MAAI0E,MAAM,GAAG,KAAb;AACA,MAAIC,QAAQ,GAAG,IAAf;AACA,QAAMC,MAAM,GAAG5E,MAAf;;AACA,MAAIN,IAAI,IAAI,OAAOA,IAAP,IAAe,QAAvB,IAAmC,CAACe,KAAK,CAACC,OAAN,CAAchB,IAAd,CAAxC,EAA6D;AACzD,SAAK,MAAMiB,IAAX,IAAmBjB,IAAnB,EAAyB;AACrB,UAAI,CAAEiD,QAAQ,CAACkC,IAAT,CAAclE,IAAd,CAAN,EAA4B;AACxB,cAAMV,IAAI,GAAG;AACTN,UAAAA,YADS;AAETO,UAAAA,UAAU,EAAE,gCAFH;AAGTC,UAAAA,OAAO,EAAE,sBAHA;AAITC,UAAAA,MAAM,EAAE;AACJU,YAAAA,kBAAkB,EAAEH;AADhB,WAJC;AAOTL,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACE,IAAD,CAAV;AACH,SAFD,MAGK;AACDF,UAAAA,OAAO,CAACQ,IAAR,CAAaN,IAAb;AACH;;AACDD,QAAAA,MAAM;AACT;AACJ;;AACD,SAAK,MAAM8E,IAAX,IAAmBpF,IAAnB,EAAyB;AACrB,UAAIiD,QAAQ,CAACkC,IAAT,CAAcC,IAAd,CAAJ,EAAyB;AACrB,YAAI,CAAE/B,UAAU,CAACrD,IAAI,CAACoF,IAAD,CAAL,EAAa;AACzBnF,UAAAA,YAAY,EAAEA,YAAY,GAAG,GAAf,GAAqBmF,IAAI,CAACC,OAAL,CAAa,IAAb,EAAmB,IAAnB,EAAyBA,OAAzB,CAAiC,KAAjC,EAAwC,IAAxC,CADV;AAEzBnF,UAAAA,UAAU,EAAEF,IAFa;AAGzBG,UAAAA,kBAAkB,EAAEiF,IAHK;AAIzBhF,UAAAA;AAJyB,SAAb,CAAhB,EAKK;AACDC,UAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBgD,UAAU,CAAC/C,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAe8B,UAAU,CAAC/C,MAA1B,CAAjD;AACAA,UAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;AACJ;AACJ,GAlCD,MAmCK;AACD,UAAMgB,IAAI,GAAG;AACTvC,MAAAA,YADS;AAETO,MAAAA,UAAU,EAAE,gBAFH;AAGTC,MAAAA,OAAO,EAAE,MAHA;AAITC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF,OAJC;AAOTC,MAAAA,OAAO,EAAE;AAPA,KAAb;;AASA,QAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,MAAAA,OAAO,GAAG,CAACmC,IAAD,CAAV;AACH,KAFD,MAGK;AACDnC,MAAAA,OAAO,CAACQ,IAAR,CAAa2B,IAAb;AACH;;AACDlC,IAAAA,MAAM;AACT;;AACD,MAAIgF,OAAO,GAAGJ,MAAM,KAAK5E,MAAzB;;AACA,MAAIgF,OAAJ,EAAa;AACTN,IAAAA,MAAM,GAAG,IAAT;AACAC,IAAAA,QAAQ,GAAG,CAAX;AACH;;AACD,QAAMM,MAAM,GAAGjF,MAAf;;AACA,MAAIS,KAAK,CAACC,OAAN,CAAchB,IAAd,CAAJ,EAAyB;AACrB,UAAMwF,IAAI,GAAGxF,IAAI,CAACwB,MAAlB;;AACA,SAAK,IAAIiE,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGD,IAAtB,EAA4BC,EAAE,EAA9B,EAAkC;AAC9B,UAAI,CAAEpC,UAAU,CAACrD,IAAI,CAACyF,EAAD,CAAL,EAAW;AACvBxF,QAAAA,YAAY,EAAEA,YAAY,GAAG,GAAf,GAAqBwF,EADZ;AAEvBvF,QAAAA,UAAU,EAAEF,IAFW;AAGvBG,QAAAA,kBAAkB,EAAEsF,EAHG;AAIvBrF,QAAAA;AAJuB,OAAX,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBgD,UAAU,CAAC/C,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAe8B,UAAU,CAAC/C,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;AACJ,GAbD,MAcK;AACD,UAAMiC,IAAI,GAAG;AACTxD,MAAAA,YADS;AAETO,MAAAA,UAAU,EAAE,gBAFH;AAGTC,MAAAA,OAAO,EAAE,MAHA;AAITC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF,OAJC;AAOTC,MAAAA,OAAO,EAAE;AAPA,KAAb;;AASA,QAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,MAAAA,OAAO,GAAG,CAACoD,IAAD,CAAV;AACH,KAFD,MAGK;AACDpD,MAAAA,OAAO,CAACQ,IAAR,CAAa4C,IAAb;AACH;;AACDnD,IAAAA,MAAM;AACT;;AACD,MAAIgF,OAAO,GAAGC,MAAM,KAAKjF,MAAzB;;AACA,MAAIgF,OAAO,IAAIN,MAAf,EAAuB;AACnBA,IAAAA,MAAM,GAAG,KAAT;AACAC,IAAAA,QAAQ,GAAG,CAACA,QAAD,EAAW,CAAX,CAAX;AACH,GAHD,MAIK;AACD,QAAIK,OAAJ,EAAa;AACTN,MAAAA,MAAM,GAAG,IAAT;AACAC,MAAAA,QAAQ,GAAG,CAAX;AACH;AACJ;;AACD,MAAI,CAACD,MAAL,EAAa;AACT,UAAMlB,IAAI,GAAG;AACT7D,MAAAA,YADS;AAETO,MAAAA,UAAU,EAAE,SAFH;AAGTC,MAAAA,OAAO,EAAE,OAHA;AAITC,MAAAA,MAAM,EAAE;AACJgF,QAAAA,cAAc,EAAET;AADZ,OAJC;AAOTrE,MAAAA,OAAO,EAAE;AAPA,KAAb;;AASA,QAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,MAAAA,OAAO,GAAG,CAACyD,IAAD,CAAV;AACH,KAFD,MAGK;AACDzD,MAAAA,OAAO,CAACQ,IAAR,CAAaiD,IAAb;AACH;;AACDxD,IAAAA,MAAM;AACT,GAjBD,MAkBK;AACDA,IAAAA,MAAM,GAAGyE,MAAT;;AACA,QAAI1E,OAAO,KAAK,IAAhB,EAAsB;AAClB,UAAI0E,MAAJ,EAAY;AACR1E,QAAAA,OAAO,CAACmB,MAAR,GAAiBuD,MAAjB;AACH,OAFD,MAGK;AACD1E,QAAAA,OAAO,GAAG,IAAV;AACH;AACJ;AACJ;;AACDuG,EAAAA,UAAU,CAACtG,MAAX,GAAoBD,OAApB;AACA,SAAOC,MAAM,KAAK,CAAlB;AACH;;AACD,SAASuG,UAAT,CAAoB7G,IAApB,EAAuG;AAAA,MAA7E;AAAEC,IAAAA,YAAY,GAAG,EAAjB;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA,kBAAjC;AAAqDC,IAAAA,QAAQ,GAAGJ;AAAhE,GAA6E,uEAAJ,EAAI;AACnG,MAAIK,OAAO,GAAG,IAAd;AACA,MAAIC,MAAM,GAAG,CAAb;;AACA,MAAIN,IAAI,IAAI,OAAOA,IAAP,IAAe,QAAvB,IAAmC,CAACe,KAAK,CAACC,OAAN,CAAchB,IAAd,CAAxC,EAA6D;AACzD,SAAK,MAAMiB,IAAX,IAAmBjB,IAAnB,EAAyB;AACrB,UAAI,EAAQiB,IAAI,KAAK,WAAV,IAA2BA,IAAI,KAAK,mBAArC,IAA+DA,IAAI,KAAK,OAAzE,IAAuFA,IAAI,KAAK,UAAjG,IAAkHA,IAAI,KAAK,UAA5H,IAA6IA,IAAI,KAAK,aAAvJ,IAA2KA,IAAI,KAAK,cAAtL,CAAJ,EAA4M;AACxM,cAAMV,IAAI,GAAG;AACTN,UAAAA,YADS;AAETO,UAAAA,UAAU,EAAE,wBAFH;AAGTC,UAAAA,OAAO,EAAE,sBAHA;AAITC,UAAAA,MAAM,EAAE;AACJU,YAAAA,kBAAkB,EAAEH;AADhB,WAJC;AAOTL,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACE,IAAD,CAAV;AACH,SAFD,MAGK;AACDF,UAAAA,OAAO,CAACQ,IAAR,CAAaN,IAAb;AACH;;AACDD,QAAAA,MAAM;AACT;AACJ;;AACD,QAAIN,IAAI,CAACsD,SAAL,KAAmBhC,SAAvB,EAAkC;AAC9B,UAAI,CAAE8B,UAAU,CAACpD,IAAI,CAACsD,SAAN,EAAiB;AAC7BrD,QAAAA,YAAY,EAAEA,YAAY,GAAG,YADA;AAE7BC,QAAAA,UAAU,EAAEF,IAFiB;AAG7BG,QAAAA,kBAAkB,EAAE,WAHS;AAI7BC,QAAAA;AAJ6B,OAAjB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmB+C,UAAU,CAAC9C,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAe6B,UAAU,CAAC9C,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACuD,iBAAL,KAA2BjC,SAA/B,EAA0C;AACtC,UAAIkC,KAAK,GAAGxD,IAAI,CAACuD,iBAAjB;;AACA,UAAI,OAAOC,KAAP,KAAiB,QAArB,EAA+B;AAC3B,cAAMhB,IAAI,GAAG;AACTvC,UAAAA,YAAY,EAAEA,YAAY,GAAG,oBADpB;AAETO,UAAAA,UAAU,EAAE,qCAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF,WAJC;AAOTC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACmC,IAAD,CAAV;AACH,SAFD,MAGK;AACDnC,UAAAA,OAAO,CAACQ,IAAR,CAAa2B,IAAb;AACH;;AACDlC,QAAAA,MAAM;AACT;;AACD,UAAI,EAAIkD,KAAK,KAAK,KAAX,IAAsBA,KAAK,KAAK,QAAjC,IAAgDA,KAAK,KAAK,QAA5D,CAAJ,EAA4E;AACxE,cAAMC,IAAI,GAAG;AACTxD,UAAAA,YAAY,EAAEA,YAAY,GAAG,oBADpB;AAETO,UAAAA,UAAU,EAAE,qCAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJoC,YAAAA,aAAa,EAAEK,QAAQ,CAAChC,UAAT,CAAoBoC,iBAApB,CAAsCR;AADjD,WAJC;AAOTnC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACoD,IAAD,CAAV;AACH,SAFD,MAGK;AACDpD,UAAAA,OAAO,CAACQ,IAAR,CAAa4C,IAAb;AACH;;AACDnD,QAAAA,MAAM;AACT;AACJ;;AACD,QAAIN,IAAI,CAAC0D,KAAL,KAAepC,SAAnB,EAA8B;AAC1B,UAAIqC,KAAK,GAAG3D,IAAI,CAAC0D,KAAjB;;AACA,UAAI,EAAI,OAAOC,KAAP,IAAgB,QAAjB,IAA+B,EAAEA,KAAK,GAAG,CAAV,KAAgB,CAACC,KAAK,CAACD,KAAD,CAAtD,IAAoEE,QAAQ,CAACF,KAAD,CAA9E,CAAJ,EAA6F;AACzF,cAAMG,IAAI,GAAG;AACT7D,UAAAA,YAAY,EAAEA,YAAY,GAAG,QADpB;AAETO,UAAAA,UAAU,EAAE,yBAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF,WAJC;AAOTC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACyD,IAAD,CAAV;AACH,SAFD,MAGK;AACDzD,UAAAA,OAAO,CAACQ,IAAR,CAAaiD,IAAb;AACH;;AACDxD,QAAAA,MAAM;AACT;;AACD,UAAK,OAAOqD,KAAP,IAAgB,QAAjB,IAA+BE,QAAQ,CAACF,KAAD,CAA3C,EAAqD;AACjD,YAAIA,KAAK,GAAG,CAAR,IAAaC,KAAK,CAACD,KAAD,CAAtB,EAA+B;AAC3B,gBAAMI,IAAI,GAAG;AACT9D,YAAAA,YAAY,EAAEA,YAAY,GAAG,QADpB;AAETO,YAAAA,UAAU,EAAE,4BAFH;AAGTC,YAAAA,OAAO,EAAE,SAHA;AAITC,YAAAA,MAAM,EAAE;AACJsD,cAAAA,UAAU,EAAE,IADR;AAEJC,cAAAA,KAAK,EAAE;AAFH,aAJC;AAQTrD,YAAAA,OAAO,EAAE;AARA,WAAb;;AAUA,cAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,YAAAA,OAAO,GAAG,CAAC0D,IAAD,CAAV;AACH,WAFD,MAGK;AACD1D,YAAAA,OAAO,CAACQ,IAAR,CAAakD,IAAb;AACH;;AACDzD,UAAAA,MAAM;AACT;AACJ;AACJ;;AACD,QAAIN,IAAI,CAACkE,QAAL,KAAkB5C,SAAtB,EAAiC;AAC7B,UAAI,OAAOtB,IAAI,CAACkE,QAAZ,KAAyB,SAA7B,EAAwC;AACpC,cAAMC,IAAI,GAAG;AACTlE,UAAAA,YAAY,EAAEA,YAAY,GAAG,WADpB;AAETO,UAAAA,UAAU,EAAE,4BAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF,WAJC;AAOTC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAAC8D,IAAD,CAAV;AACH,SAFD,MAGK;AACD9D,UAAAA,OAAO,CAACQ,IAAR,CAAasD,IAAb;AACH;;AACD7D,QAAAA,MAAM;AACT;AACJ;;AACD,QAAIN,IAAI,CAACoE,QAAL,KAAkB9C,SAAtB,EAAiC;AAC7B,UAAI+C,KAAK,GAAGrE,IAAI,CAACoE,QAAjB;;AACA,UAAI,EAAI,OAAOC,KAAP,IAAgB,QAAjB,IAA+B,EAAEA,KAAK,GAAG,CAAV,KAAgB,CAACT,KAAK,CAACS,KAAD,CAAtD,IAAoER,QAAQ,CAACQ,KAAD,CAA9E,CAAJ,EAA6F;AACzF,cAAMC,IAAI,GAAG;AACTrE,UAAAA,YAAY,EAAEA,YAAY,GAAG,WADpB;AAETO,UAAAA,UAAU,EAAE,4BAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF,WAJC;AAOTC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACiE,IAAD,CAAV;AACH,SAFD,MAGK;AACDjE,UAAAA,OAAO,CAACQ,IAAR,CAAayD,IAAb;AACH;;AACDhE,QAAAA,MAAM;AACT;AACJ;;AACD,QAAIN,IAAI,CAACuE,WAAL,KAAqBjD,SAAzB,EAAoC;AAChC,UAAIkD,KAAK,GAAGxE,IAAI,CAACuE,WAAjB;;AACA,UAAI,EAAI,OAAOC,KAAP,IAAgB,QAAjB,IAA+B,EAAEA,KAAK,GAAG,CAAV,KAAgB,CAACZ,KAAK,CAACY,KAAD,CAAtD,IAAoEX,QAAQ,CAACW,KAAD,CAA9E,CAAJ,EAA6F;AACzF,cAAMC,IAAI,GAAG;AACTxE,UAAAA,YAAY,EAAEA,YAAY,GAAG,cADpB;AAETO,UAAAA,UAAU,EAAE,+BAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF,WAJC;AAOTC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACoE,IAAD,CAAV;AACH,SAFD,MAGK;AACDpE,UAAAA,OAAO,CAACQ,IAAR,CAAa4D,IAAb;AACH;;AACDnE,QAAAA,MAAM;AACT;AACJ;;AACD,QAAIN,IAAI,CAAC0E,YAAL,KAAsBpD,SAA1B,EAAqC;AACjC,UAAIqD,KAAK,GAAG3E,IAAI,CAAC0E,YAAjB;;AACA,UAAI,EAAI,OAAOC,KAAP,IAAgB,QAAjB,IAA+B,EAAEA,KAAK,GAAG,CAAV,KAAgB,CAACf,KAAK,CAACe,KAAD,CAAtD,IAAoEd,QAAQ,CAACc,KAAD,CAA9E,CAAJ,EAA6F;AACzF,cAAMC,IAAI,GAAG;AACT3E,UAAAA,YAAY,EAAEA,YAAY,GAAG,eADpB;AAETO,UAAAA,UAAU,EAAE,gCAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF,WAJC;AAOTC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACuE,IAAD,CAAV;AACH,SAFD,MAGK;AACDvE,UAAAA,OAAO,CAACQ,IAAR,CAAa+D,IAAb;AACH;;AACDtE,QAAAA,MAAM;AACT;AACJ;AACJ,GApMD,MAqMK;AACD,UAAMuE,IAAI,GAAG;AACT5E,MAAAA,YADS;AAETO,MAAAA,UAAU,EAAE,QAFH;AAGTC,MAAAA,OAAO,EAAE,MAHA;AAITC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF,OAJC;AAOTC,MAAAA,OAAO,EAAE;AAPA,KAAb;;AASA,QAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,MAAAA,OAAO,GAAG,CAACwE,IAAD,CAAV;AACH,KAFD,MAGK;AACDxE,MAAAA,OAAO,CAACQ,IAAR,CAAagE,IAAb;AACH;;AACDvE,IAAAA,MAAM;AACT;;AACDuG,EAAAA,UAAU,CAACvG,MAAX,GAAoBD,OAApB;AACA,SAAOC,MAAM,KAAK,CAAlB;AACH;;AACD,SAASmG,UAAT,CAAoBzG,IAApB,EAAuG;AAAA,MAA7E;AAAEC,IAAAA,YAAY,GAAG,EAAjB;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA,kBAAjC;AAAqDC,IAAAA,QAAQ,GAAGJ;AAAhE,GAA6E,uEAAJ,EAAI;;AACnG;AAAqC;AACrC,MAAIK,OAAO,GAAG,IAAd;AACA,MAAIC,MAAM,GAAG,CAAb;;AACA,MAAIN,IAAI,IAAI,OAAOA,IAAP,IAAe,QAAvB,IAAmC,CAACe,KAAK,CAACC,OAAN,CAAchB,IAAd,CAAxC,EAA6D;AACzD,QAAIA,IAAI,CAACkG,aAAL,KAAuB5E,SAA3B,EAAsC;AAClC,YAAMf,IAAI,GAAG;AACTN,QAAAA,YADS;AAETO,QAAAA,UAAU,EAAE,YAFH;AAGTC,QAAAA,OAAO,EAAE,UAHA;AAITC,QAAAA,MAAM,EAAE;AACJqF,UAAAA,eAAe,EAAE;AADb,SAJC;AAOTnF,QAAAA,OAAO,EAAE,kCAAkC,eAAlC,GAAoD;AAPpD,OAAb;;AASA,UAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,QAAAA,OAAO,GAAG,CAACE,IAAD,CAAV;AACH,OAFD,MAGK;AACDF,QAAAA,OAAO,CAACQ,IAAR,CAAaN,IAAb;AACH;;AACDD,MAAAA,MAAM;AACT;;AACD,QAAIN,IAAI,CAAC8G,WAAL,KAAqBxF,SAAzB,EAAoC;AAChC,YAAMkB,IAAI,GAAG;AACTvC,QAAAA,YADS;AAETO,QAAAA,UAAU,EAAE,YAFH;AAGTC,QAAAA,OAAO,EAAE,UAHA;AAITC,QAAAA,MAAM,EAAE;AACJqF,UAAAA,eAAe,EAAE;AADb,SAJC;AAOTnF,QAAAA,OAAO,EAAE,kCAAkC,aAAlC,GAAkD;AAPlD,OAAb;;AASA,UAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,QAAAA,OAAO,GAAG,CAACmC,IAAD,CAAV;AACH,OAFD,MAGK;AACDnC,QAAAA,OAAO,CAACQ,IAAR,CAAa2B,IAAb;AACH;;AACDlC,MAAAA,MAAM;AACT;;AACD,SAAK,MAAMW,IAAX,IAAmBjB,IAAnB,EAAyB;AACrB,UAAI,EAAMiB,IAAI,KAAK,QAAV,IAAwBA,IAAI,KAAK,SAAlC,IAAkDA,IAAI,KAAK,eAA5D,IAAkFA,IAAI,KAAK,aAA5F,IAAgHA,IAAI,KAAK,kBAA3H,CAAJ,EAAqJ;AACjJ,cAAMwC,IAAI,GAAG;AACTxD,UAAAA,YADS;AAETO,UAAAA,UAAU,EAAE,wBAFH;AAGTC,UAAAA,OAAO,EAAE,sBAHA;AAITC,UAAAA,MAAM,EAAE;AACJU,YAAAA,kBAAkB,EAAEH;AADhB,WAJC;AAOTL,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACoD,IAAD,CAAV;AACH,SAFD,MAGK;AACDpD,UAAAA,OAAO,CAACQ,IAAR,CAAa4C,IAAb;AACH;;AACDnD,QAAAA,MAAM;AACT;AACJ;;AACD,QAAIN,IAAI,CAAC4F,MAAL,KAAgBtE,SAApB,EAA+B;AAC3B,UAAI,CAAEqF,UAAU,CAAC3G,IAAI,CAAC4F,MAAN,EAAc;AAC1B3F,QAAAA,YAAY,EAAEA,YAAY,GAAG,SADH;AAE1BC,QAAAA,UAAU,EAAEF,IAFc;AAG1BG,QAAAA,kBAAkB,EAAE,QAHM;AAI1BC,QAAAA;AAJ0B,OAAd,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBsG,UAAU,CAACrG,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAeoF,UAAU,CAACrG,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACiG,OAAL,KAAiB3E,SAArB,EAAgC;AAC5B,UAAI,CAAEsF,UAAU,CAAC5G,IAAI,CAACiG,OAAN,EAAe;AAC3BhG,QAAAA,YAAY,EAAEA,YAAY,GAAG,UADF;AAE3BC,QAAAA,UAAU,EAAEF,IAFe;AAG3BG,QAAAA,kBAAkB,EAAE,SAHO;AAI3BC,QAAAA;AAJ2B,OAAf,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBuG,UAAU,CAACtG,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAeqF,UAAU,CAACtG,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAACkG,aAAL,KAAuB5E,SAA3B,EAAsC;AAClC,UAAI,CAAEuF,UAAU,CAAC7G,IAAI,CAACkG,aAAN,EAAqB;AACjCjG,QAAAA,YAAY,EAAEA,YAAY,GAAG,gBADI;AAEjCC,QAAAA,UAAU,EAAEF,IAFqB;AAGjCG,QAAAA,kBAAkB,EAAE,eAHa;AAIjCC,QAAAA;AAJiC,OAArB,CAAhB,EAKK;AACDC,QAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBwG,UAAU,CAACvG,MAA9B,GAAuCD,OAAO,CAACkB,MAAR,CAAesF,UAAU,CAACvG,MAA1B,CAAjD;AACAA,QAAAA,MAAM,GAAGD,OAAO,CAACmB,MAAjB;AACH;AACJ;;AACD,QAAIxB,IAAI,CAAC8G,WAAL,KAAqBxF,SAAzB,EAAoC;AAChC,UAAIyF,KAAK,GAAG/G,IAAI,CAAC8G,WAAjB;;AACA,UAAI,EAAI,OAAOC,KAAP,IAAgB,QAAjB,IAA+B,EAAEA,KAAK,GAAG,CAAV,KAAgB,CAACnD,KAAK,CAACmD,KAAD,CAAtD,IAAoElD,QAAQ,CAACkD,KAAD,CAA9E,CAAJ,EAA6F;AACzF,cAAMjD,IAAI,GAAG;AACT7D,UAAAA,YAAY,EAAEA,YAAY,GAAG,cADpB;AAETO,UAAAA,UAAU,EAAE,+BAFH;AAGTC,UAAAA,OAAO,EAAE,MAHA;AAITC,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF,WAJC;AAOTC,UAAAA,OAAO,EAAE;AAPA,SAAb;;AASA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAACyD,IAAD,CAAV;AACH,SAFD,MAGK;AACDzD,UAAAA,OAAO,CAACQ,IAAR,CAAaiD,IAAb;AACH;;AACDxD,QAAAA,MAAM;AACT;;AACD,UAAK,OAAOyG,KAAP,IAAgB,QAAjB,IAA+BlD,QAAQ,CAACkD,KAAD,CAA3C,EAAqD;AACjD,YAAIA,KAAK,GAAG,CAAR,IAAanD,KAAK,CAACmD,KAAD,CAAtB,EAA+B;AAC3B,gBAAMhD,IAAI,GAAG;AACT9D,YAAAA,YAAY,EAAEA,YAAY,GAAG,cADpB;AAETO,YAAAA,UAAU,EAAE,kCAFH;AAGTC,YAAAA,OAAO,EAAE,SAHA;AAITC,YAAAA,MAAM,EAAE;AACJsD,cAAAA,UAAU,EAAE,IADR;AAEJC,cAAAA,KAAK,EAAE;AAFH,aAJC;AAQTrD,YAAAA,OAAO,EAAE;AARA,WAAb;;AAUA,cAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,YAAAA,OAAO,GAAG,CAAC0D,IAAD,CAAV;AACH,WAFD,MAGK;AACD1D,YAAAA,OAAO,CAACQ,IAAR,CAAakD,IAAb;AACH;;AACDzD,UAAAA,MAAM;AACT;AACJ;AACJ;;AACD,QAAIN,IAAI,CAACmG,gBAAL,KAA0B7E,SAA9B,EAAyC;AACrC,UAAI,OAAOtB,IAAI,CAACmG,gBAAZ,IAAgC,UAApC,EAAgD;AAC5C,cAAMhC,IAAI,GAAG;AACTlE,UAAAA,YAAY,EAAEA,YAAY,GAAG,mBADpB;AAETO,UAAAA,UAAU,EAAE,sCAFH;AAGTC,UAAAA,OAAO,EAAE,QAHA;AAITC,UAAAA,MAAM,EAAE,EAJC;AAKTE,UAAAA,OAAO,EAAE;AALA,SAAb;;AAOA,YAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,UAAAA,OAAO,GAAG,CAAC8D,IAAD,CAAV;AACH,SAFD,MAGK;AACD9D,UAAAA,OAAO,CAACQ,IAAR,CAAasD,IAAb;AACH;;AACD7D,QAAAA,MAAM;AACT;AACJ;AACJ,GAtJD,MAuJK;AACD,UAAMgE,IAAI,GAAG;AACTrE,MAAAA,YADS;AAETO,MAAAA,UAAU,EAAE,QAFH;AAGTC,MAAAA,OAAO,EAAE,MAHA;AAITC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF,OAJC;AAOTC,MAAAA,OAAO,EAAE;AAPA,KAAb;;AASA,QAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBA,MAAAA,OAAO,GAAG,CAACiE,IAAD,CAAV;AACH,KAFD,MAGK;AACDjE,MAAAA,OAAO,CAACQ,IAAR,CAAayD,IAAb;AACH;;AACDhE,IAAAA,MAAM;AACT;;AACDmG,EAAAA,UAAU,CAACnG,MAAX,GAAoBD,OAApB;AACA,SAAOC,MAAM,KAAK,CAAlB;AACH","sourcesContent":["\"use strict\";\nexports[\"config.json\"] = validate43;\nconst schema13 = {\n    \"$id\": \"config.json\",\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"border\": {\n            \"$ref\": \"shared.json#/definitions/borders\"\n        },\n        \"header\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"type\": \"string\"\n                },\n                \"alignment\": {\n                    \"$ref\": \"shared.json#/definitions/alignment\"\n                },\n                \"wrapWord\": {\n                    \"type\": \"boolean\"\n                },\n                \"truncate\": {\n                    \"type\": \"integer\"\n                },\n                \"paddingLeft\": {\n                    \"type\": \"integer\"\n                },\n                \"paddingRight\": {\n                    \"type\": \"integer\"\n                }\n            },\n            \"required\": [\"content\"],\n            \"additionalProperties\": false\n        },\n        \"columns\": {\n            \"$ref\": \"shared.json#/definitions/columns\"\n        },\n        \"columnDefault\": {\n            \"$ref\": \"shared.json#/definitions/column\"\n        },\n        \"drawVerticalLine\": {\n            \"typeof\": \"function\"\n        },\n        \"drawHorizontalLine\": {\n            \"typeof\": \"function\"\n        },\n        \"singleLine\": {\n            \"typeof\": \"boolean\"\n        }\n    },\n    \"additionalProperties\": false\n};\nconst schema15 = {\n    \"type\": \"object\",\n    \"properties\": {\n        \"topBody\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"topJoin\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"topLeft\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"topRight\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomBody\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomJoin\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomLeft\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomRight\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bodyLeft\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bodyRight\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bodyJoin\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"headerJoin\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"joinBody\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"joinLeft\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"joinRight\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"joinJoin\": {\n            \"$ref\": \"#/definitions/border\"\n        }\n    },\n    \"additionalProperties\": false\n};\nconst func8 = Object.prototype.hasOwnProperty;\nconst schema16 = {\n    \"type\": \"string\"\n};\nfunction validate46(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (typeof data !== \"string\") {\n        const err0 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"string\"\n            },\n            message: \"must be string\"\n        };\n        if (vErrors === null) {\n            vErrors = [err0];\n        }\n        else {\n            vErrors.push(err0);\n        }\n        errors++;\n    }\n    validate46.errors = vErrors;\n    return errors === 0;\n}\nfunction validate45(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(func8.call(schema15.properties, key0))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.topBody !== undefined) {\n            if (!(validate46(data.topBody, {\n                instancePath: instancePath + \"/topBody\",\n                parentData: data,\n                parentDataProperty: \"topBody\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topJoin !== undefined) {\n            if (!(validate46(data.topJoin, {\n                instancePath: instancePath + \"/topJoin\",\n                parentData: data,\n                parentDataProperty: \"topJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topLeft !== undefined) {\n            if (!(validate46(data.topLeft, {\n                instancePath: instancePath + \"/topLeft\",\n                parentData: data,\n                parentDataProperty: \"topLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topRight !== undefined) {\n            if (!(validate46(data.topRight, {\n                instancePath: instancePath + \"/topRight\",\n                parentData: data,\n                parentDataProperty: \"topRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomBody !== undefined) {\n            if (!(validate46(data.bottomBody, {\n                instancePath: instancePath + \"/bottomBody\",\n                parentData: data,\n                parentDataProperty: \"bottomBody\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomJoin !== undefined) {\n            if (!(validate46(data.bottomJoin, {\n                instancePath: instancePath + \"/bottomJoin\",\n                parentData: data,\n                parentDataProperty: \"bottomJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomLeft !== undefined) {\n            if (!(validate46(data.bottomLeft, {\n                instancePath: instancePath + \"/bottomLeft\",\n                parentData: data,\n                parentDataProperty: \"bottomLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomRight !== undefined) {\n            if (!(validate46(data.bottomRight, {\n                instancePath: instancePath + \"/bottomRight\",\n                parentData: data,\n                parentDataProperty: \"bottomRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyLeft !== undefined) {\n            if (!(validate46(data.bodyLeft, {\n                instancePath: instancePath + \"/bodyLeft\",\n                parentData: data,\n                parentDataProperty: \"bodyLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyRight !== undefined) {\n            if (!(validate46(data.bodyRight, {\n                instancePath: instancePath + \"/bodyRight\",\n                parentData: data,\n                parentDataProperty: \"bodyRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyJoin !== undefined) {\n            if (!(validate46(data.bodyJoin, {\n                instancePath: instancePath + \"/bodyJoin\",\n                parentData: data,\n                parentDataProperty: \"bodyJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.headerJoin !== undefined) {\n            if (!(validate46(data.headerJoin, {\n                instancePath: instancePath + \"/headerJoin\",\n                parentData: data,\n                parentDataProperty: \"headerJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinBody !== undefined) {\n            if (!(validate46(data.joinBody, {\n                instancePath: instancePath + \"/joinBody\",\n                parentData: data,\n                parentDataProperty: \"joinBody\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinLeft !== undefined) {\n            if (!(validate46(data.joinLeft, {\n                instancePath: instancePath + \"/joinLeft\",\n                parentData: data,\n                parentDataProperty: \"joinLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinRight !== undefined) {\n            if (!(validate46(data.joinRight, {\n                instancePath: instancePath + \"/joinRight\",\n                parentData: data,\n                parentDataProperty: \"joinRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinJoin !== undefined) {\n            if (!(validate46(data.joinJoin, {\n                instancePath: instancePath + \"/joinJoin\",\n                parentData: data,\n                parentDataProperty: \"joinJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n    }\n    else {\n        const err1 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        }\n        else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    validate45.errors = vErrors;\n    return errors === 0;\n}\nconst schema17 = {\n    \"type\": \"string\",\n    \"enum\": [\"left\", \"right\", \"center\", \"justify\"]\n};\nconst func0 = require(\"ajv/dist/runtime/equal\").default;\nfunction validate64(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (typeof data !== \"string\") {\n        const err0 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"string\"\n            },\n            message: \"must be string\"\n        };\n        if (vErrors === null) {\n            vErrors = [err0];\n        }\n        else {\n            vErrors.push(err0);\n        }\n        errors++;\n    }\n    if (!((((data === \"left\") || (data === \"right\")) || (data === \"center\")) || (data === \"justify\"))) {\n        const err1 = {\n            instancePath,\n            schemaPath: \"#/enum\",\n            keyword: \"enum\",\n            params: {\n                allowedValues: schema17.enum\n            },\n            message: \"must be equal to one of the allowed values\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        }\n        else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    validate64.errors = vErrors;\n    return errors === 0;\n}\nconst schema18 = {\n    \"oneOf\": [{\n            \"type\": \"object\",\n            \"patternProperties\": {\n                \"^[0-9]+$\": {\n                    \"$ref\": \"#/definitions/column\"\n                }\n            },\n            \"additionalProperties\": false\n        }, {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"#/definitions/column\"\n            }\n        }]\n};\nconst pattern0 = new RegExp(\"^[0-9]+$\", \"u\");\nconst schema19 = {\n    \"type\": \"object\",\n    \"properties\": {\n        \"alignment\": {\n            \"$ref\": \"#/definitions/alignment\"\n        },\n        \"verticalAlignment\": {\n            \"type\": \"string\",\n            \"enum\": [\"top\", \"middle\", \"bottom\"]\n        },\n        \"width\": {\n            \"type\": \"integer\",\n            \"minimum\": 1\n        },\n        \"wrapWord\": {\n            \"type\": \"boolean\"\n        },\n        \"truncate\": {\n            \"type\": \"integer\"\n        },\n        \"paddingLeft\": {\n            \"type\": \"integer\"\n        },\n        \"paddingRight\": {\n            \"type\": \"integer\"\n        }\n    },\n    \"additionalProperties\": false\n};\nfunction validate68(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (typeof data !== \"string\") {\n        const err0 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"string\"\n            },\n            message: \"must be string\"\n        };\n        if (vErrors === null) {\n            vErrors = [err0];\n        }\n        else {\n            vErrors.push(err0);\n        }\n        errors++;\n    }\n    if (!((((data === \"left\") || (data === \"right\")) || (data === \"center\")) || (data === \"justify\"))) {\n        const err1 = {\n            instancePath,\n            schemaPath: \"#/enum\",\n            keyword: \"enum\",\n            params: {\n                allowedValues: schema17.enum\n            },\n            message: \"must be equal to one of the allowed values\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        }\n        else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    validate68.errors = vErrors;\n    return errors === 0;\n}\nfunction validate67(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(((((((key0 === \"alignment\") || (key0 === \"verticalAlignment\")) || (key0 === \"width\")) || (key0 === \"wrapWord\")) || (key0 === \"truncate\")) || (key0 === \"paddingLeft\")) || (key0 === \"paddingRight\"))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.alignment !== undefined) {\n            if (!(validate68(data.alignment, {\n                instancePath: instancePath + \"/alignment\",\n                parentData: data,\n                parentDataProperty: \"alignment\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate68.errors : vErrors.concat(validate68.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.verticalAlignment !== undefined) {\n            let data1 = data.verticalAlignment;\n            if (typeof data1 !== \"string\") {\n                const err1 = {\n                    instancePath: instancePath + \"/verticalAlignment\",\n                    schemaPath: \"#/properties/verticalAlignment/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"string\"\n                    },\n                    message: \"must be string\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err1];\n                }\n                else {\n                    vErrors.push(err1);\n                }\n                errors++;\n            }\n            if (!(((data1 === \"top\") || (data1 === \"middle\")) || (data1 === \"bottom\"))) {\n                const err2 = {\n                    instancePath: instancePath + \"/verticalAlignment\",\n                    schemaPath: \"#/properties/verticalAlignment/enum\",\n                    keyword: \"enum\",\n                    params: {\n                        allowedValues: schema19.properties.verticalAlignment.enum\n                    },\n                    message: \"must be equal to one of the allowed values\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err2];\n                }\n                else {\n                    vErrors.push(err2);\n                }\n                errors++;\n            }\n        }\n        if (data.width !== undefined) {\n            let data2 = data.width;\n            if (!(((typeof data2 == \"number\") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))) {\n                const err3 = {\n                    instancePath: instancePath + \"/width\",\n                    schemaPath: \"#/properties/width/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err3];\n                }\n                else {\n                    vErrors.push(err3);\n                }\n                errors++;\n            }\n            if ((typeof data2 == \"number\") && (isFinite(data2))) {\n                if (data2 < 1 || isNaN(data2)) {\n                    const err4 = {\n                        instancePath: instancePath + \"/width\",\n                        schemaPath: \"#/properties/width/minimum\",\n                        keyword: \"minimum\",\n                        params: {\n                            comparison: \">=\",\n                            limit: 1\n                        },\n                        message: \"must be >= 1\"\n                    };\n                    if (vErrors === null) {\n                        vErrors = [err4];\n                    }\n                    else {\n                        vErrors.push(err4);\n                    }\n                    errors++;\n                }\n            }\n        }\n        if (data.wrapWord !== undefined) {\n            if (typeof data.wrapWord !== \"boolean\") {\n                const err5 = {\n                    instancePath: instancePath + \"/wrapWord\",\n                    schemaPath: \"#/properties/wrapWord/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"boolean\"\n                    },\n                    message: \"must be boolean\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err5];\n                }\n                else {\n                    vErrors.push(err5);\n                }\n                errors++;\n            }\n        }\n        if (data.truncate !== undefined) {\n            let data4 = data.truncate;\n            if (!(((typeof data4 == \"number\") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))) {\n                const err6 = {\n                    instancePath: instancePath + \"/truncate\",\n                    schemaPath: \"#/properties/truncate/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err6];\n                }\n                else {\n                    vErrors.push(err6);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingLeft !== undefined) {\n            let data5 = data.paddingLeft;\n            if (!(((typeof data5 == \"number\") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))) {\n                const err7 = {\n                    instancePath: instancePath + \"/paddingLeft\",\n                    schemaPath: \"#/properties/paddingLeft/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err7];\n                }\n                else {\n                    vErrors.push(err7);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingRight !== undefined) {\n            let data6 = data.paddingRight;\n            if (!(((typeof data6 == \"number\") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))) {\n                const err8 = {\n                    instancePath: instancePath + \"/paddingRight\",\n                    schemaPath: \"#/properties/paddingRight/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err8];\n                }\n                else {\n                    vErrors.push(err8);\n                }\n                errors++;\n            }\n        }\n    }\n    else {\n        const err9 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err9];\n        }\n        else {\n            vErrors.push(err9);\n        }\n        errors++;\n    }\n    validate67.errors = vErrors;\n    return errors === 0;\n}\nfunction validate66(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    const _errs0 = errors;\n    let valid0 = false;\n    let passing0 = null;\n    const _errs1 = errors;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(pattern0.test(key0))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/oneOf/0/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        for (const key1 in data) {\n            if (pattern0.test(key1)) {\n                if (!(validate67(data[key1], {\n                    instancePath: instancePath + \"/\" + key1.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n                    parentData: data,\n                    parentDataProperty: key1,\n                    rootData\n                }))) {\n                    vErrors = vErrors === null ? validate67.errors : vErrors.concat(validate67.errors);\n                    errors = vErrors.length;\n                }\n            }\n        }\n    }\n    else {\n        const err1 = {\n            instancePath,\n            schemaPath: \"#/oneOf/0/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        }\n        else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    var _valid0 = _errs1 === errors;\n    if (_valid0) {\n        valid0 = true;\n        passing0 = 0;\n    }\n    const _errs5 = errors;\n    if (Array.isArray(data)) {\n        const len0 = data.length;\n        for (let i0 = 0; i0 < len0; i0++) {\n            if (!(validate67(data[i0], {\n                instancePath: instancePath + \"/\" + i0,\n                parentData: data,\n                parentDataProperty: i0,\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate67.errors : vErrors.concat(validate67.errors);\n                errors = vErrors.length;\n            }\n        }\n    }\n    else {\n        const err2 = {\n            instancePath,\n            schemaPath: \"#/oneOf/1/type\",\n            keyword: \"type\",\n            params: {\n                type: \"array\"\n            },\n            message: \"must be array\"\n        };\n        if (vErrors === null) {\n            vErrors = [err2];\n        }\n        else {\n            vErrors.push(err2);\n        }\n        errors++;\n    }\n    var _valid0 = _errs5 === errors;\n    if (_valid0 && valid0) {\n        valid0 = false;\n        passing0 = [passing0, 1];\n    }\n    else {\n        if (_valid0) {\n            valid0 = true;\n            passing0 = 1;\n        }\n    }\n    if (!valid0) {\n        const err3 = {\n            instancePath,\n            schemaPath: \"#/oneOf\",\n            keyword: \"oneOf\",\n            params: {\n                passingSchemas: passing0\n            },\n            message: \"must match exactly one schema in oneOf\"\n        };\n        if (vErrors === null) {\n            vErrors = [err3];\n        }\n        else {\n            vErrors.push(err3);\n        }\n        errors++;\n    }\n    else {\n        errors = _errs0;\n        if (vErrors !== null) {\n            if (_errs0) {\n                vErrors.length = _errs0;\n            }\n            else {\n                vErrors = null;\n            }\n        }\n    }\n    validate66.errors = vErrors;\n    return errors === 0;\n}\nfunction validate73(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(((((((key0 === \"alignment\") || (key0 === \"verticalAlignment\")) || (key0 === \"width\")) || (key0 === \"wrapWord\")) || (key0 === \"truncate\")) || (key0 === \"paddingLeft\")) || (key0 === \"paddingRight\"))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.alignment !== undefined) {\n            if (!(validate68(data.alignment, {\n                instancePath: instancePath + \"/alignment\",\n                parentData: data,\n                parentDataProperty: \"alignment\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate68.errors : vErrors.concat(validate68.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.verticalAlignment !== undefined) {\n            let data1 = data.verticalAlignment;\n            if (typeof data1 !== \"string\") {\n                const err1 = {\n                    instancePath: instancePath + \"/verticalAlignment\",\n                    schemaPath: \"#/properties/verticalAlignment/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"string\"\n                    },\n                    message: \"must be string\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err1];\n                }\n                else {\n                    vErrors.push(err1);\n                }\n                errors++;\n            }\n            if (!(((data1 === \"top\") || (data1 === \"middle\")) || (data1 === \"bottom\"))) {\n                const err2 = {\n                    instancePath: instancePath + \"/verticalAlignment\",\n                    schemaPath: \"#/properties/verticalAlignment/enum\",\n                    keyword: \"enum\",\n                    params: {\n                        allowedValues: schema19.properties.verticalAlignment.enum\n                    },\n                    message: \"must be equal to one of the allowed values\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err2];\n                }\n                else {\n                    vErrors.push(err2);\n                }\n                errors++;\n            }\n        }\n        if (data.width !== undefined) {\n            let data2 = data.width;\n            if (!(((typeof data2 == \"number\") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))) {\n                const err3 = {\n                    instancePath: instancePath + \"/width\",\n                    schemaPath: \"#/properties/width/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err3];\n                }\n                else {\n                    vErrors.push(err3);\n                }\n                errors++;\n            }\n            if ((typeof data2 == \"number\") && (isFinite(data2))) {\n                if (data2 < 1 || isNaN(data2)) {\n                    const err4 = {\n                        instancePath: instancePath + \"/width\",\n                        schemaPath: \"#/properties/width/minimum\",\n                        keyword: \"minimum\",\n                        params: {\n                            comparison: \">=\",\n                            limit: 1\n                        },\n                        message: \"must be >= 1\"\n                    };\n                    if (vErrors === null) {\n                        vErrors = [err4];\n                    }\n                    else {\n                        vErrors.push(err4);\n                    }\n                    errors++;\n                }\n            }\n        }\n        if (data.wrapWord !== undefined) {\n            if (typeof data.wrapWord !== \"boolean\") {\n                const err5 = {\n                    instancePath: instancePath + \"/wrapWord\",\n                    schemaPath: \"#/properties/wrapWord/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"boolean\"\n                    },\n                    message: \"must be boolean\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err5];\n                }\n                else {\n                    vErrors.push(err5);\n                }\n                errors++;\n            }\n        }\n        if (data.truncate !== undefined) {\n            let data4 = data.truncate;\n            if (!(((typeof data4 == \"number\") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))) {\n                const err6 = {\n                    instancePath: instancePath + \"/truncate\",\n                    schemaPath: \"#/properties/truncate/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err6];\n                }\n                else {\n                    vErrors.push(err6);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingLeft !== undefined) {\n            let data5 = data.paddingLeft;\n            if (!(((typeof data5 == \"number\") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))) {\n                const err7 = {\n                    instancePath: instancePath + \"/paddingLeft\",\n                    schemaPath: \"#/properties/paddingLeft/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err7];\n                }\n                else {\n                    vErrors.push(err7);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingRight !== undefined) {\n            let data6 = data.paddingRight;\n            if (!(((typeof data6 == \"number\") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))) {\n                const err8 = {\n                    instancePath: instancePath + \"/paddingRight\",\n                    schemaPath: \"#/properties/paddingRight/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err8];\n                }\n                else {\n                    vErrors.push(err8);\n                }\n                errors++;\n            }\n        }\n    }\n    else {\n        const err9 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err9];\n        }\n        else {\n            vErrors.push(err9);\n        }\n        errors++;\n    }\n    validate73.errors = vErrors;\n    return errors === 0;\n}\nfunction validate43(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    /*# sourceURL=\"config.json\" */ ;\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(((((((key0 === \"border\") || (key0 === \"header\")) || (key0 === \"columns\")) || (key0 === \"columnDefault\")) || (key0 === \"drawVerticalLine\")) || (key0 === \"drawHorizontalLine\")) || (key0 === \"singleLine\"))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.border !== undefined) {\n            if (!(validate45(data.border, {\n                instancePath: instancePath + \"/border\",\n                parentData: data,\n                parentDataProperty: \"border\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate45.errors : vErrors.concat(validate45.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.header !== undefined) {\n            let data1 = data.header;\n            if (data1 && typeof data1 == \"object\" && !Array.isArray(data1)) {\n                if (data1.content === undefined) {\n                    const err1 = {\n                        instancePath: instancePath + \"/header\",\n                        schemaPath: \"#/properties/header/required\",\n                        keyword: \"required\",\n                        params: {\n                            missingProperty: \"content\"\n                        },\n                        message: \"must have required property '\" + \"content\" + \"'\"\n                    };\n                    if (vErrors === null) {\n                        vErrors = [err1];\n                    }\n                    else {\n                        vErrors.push(err1);\n                    }\n                    errors++;\n                }\n                for (const key1 in data1) {\n                    if (!((((((key1 === \"content\") || (key1 === \"alignment\")) || (key1 === \"wrapWord\")) || (key1 === \"truncate\")) || (key1 === \"paddingLeft\")) || (key1 === \"paddingRight\"))) {\n                        const err2 = {\n                            instancePath: instancePath + \"/header\",\n                            schemaPath: \"#/properties/header/additionalProperties\",\n                            keyword: \"additionalProperties\",\n                            params: {\n                                additionalProperty: key1\n                            },\n                            message: \"must NOT have additional properties\"\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err2];\n                        }\n                        else {\n                            vErrors.push(err2);\n                        }\n                        errors++;\n                    }\n                }\n                if (data1.content !== undefined) {\n                    if (typeof data1.content !== \"string\") {\n                        const err3 = {\n                            instancePath: instancePath + \"/header/content\",\n                            schemaPath: \"#/properties/header/properties/content/type\",\n                            keyword: \"type\",\n                            params: {\n                                type: \"string\"\n                            },\n                            message: \"must be string\"\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err3];\n                        }\n                        else {\n                            vErrors.push(err3);\n                        }\n                        errors++;\n                    }\n                }\n                if (data1.alignment !== undefined) {\n                    if (!(validate64(data1.alignment, {\n                        instancePath: instancePath + \"/header/alignment\",\n                        parentData: data1,\n                        parentDataProperty: \"alignment\",\n                        rootData\n                    }))) {\n                        vErrors = vErrors === null ? validate64.errors : vErrors.concat(validate64.errors);\n                        errors = vErrors.length;\n                    }\n                }\n                if (data1.wrapWord !== undefined) {\n                    if (typeof data1.wrapWord !== \"boolean\") {\n                        const err4 = {\n                            instancePath: instancePath + \"/header/wrapWord\",\n                            schemaPath: \"#/properties/header/properties/wrapWord/type\",\n                            keyword: \"type\",\n                            params: {\n                                type: \"boolean\"\n                            },\n                            message: \"must be boolean\"\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err4];\n                        }\n                        else {\n                            vErrors.push(err4);\n                        }\n                        errors++;\n                    }\n                }\n                if (data1.truncate !== undefined) {\n                    let data5 = data1.truncate;\n                    if (!(((typeof data5 == \"number\") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))) {\n                        const err5 = {\n                            instancePath: instancePath + \"/header/truncate\",\n                            schemaPath: \"#/properties/header/properties/truncate/type\",\n                            keyword: \"type\",\n                            params: {\n                                type: \"integer\"\n                            },\n                            message: \"must be integer\"\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err5];\n                        }\n                        else {\n                            vErrors.push(err5);\n                        }\n                        errors++;\n                    }\n                }\n                if (data1.paddingLeft !== undefined) {\n                    let data6 = data1.paddingLeft;\n                    if (!(((typeof data6 == \"number\") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))) {\n                        const err6 = {\n                            instancePath: instancePath + \"/header/paddingLeft\",\n                            schemaPath: \"#/properties/header/properties/paddingLeft/type\",\n                            keyword: \"type\",\n                            params: {\n                                type: \"integer\"\n                            },\n                            message: \"must be integer\"\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err6];\n                        }\n                        else {\n                            vErrors.push(err6);\n                        }\n                        errors++;\n                    }\n                }\n                if (data1.paddingRight !== undefined) {\n                    let data7 = data1.paddingRight;\n                    if (!(((typeof data7 == \"number\") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7)))) {\n                        const err7 = {\n                            instancePath: instancePath + \"/header/paddingRight\",\n                            schemaPath: \"#/properties/header/properties/paddingRight/type\",\n                            keyword: \"type\",\n                            params: {\n                                type: \"integer\"\n                            },\n                            message: \"must be integer\"\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err7];\n                        }\n                        else {\n                            vErrors.push(err7);\n                        }\n                        errors++;\n                    }\n                }\n            }\n            else {\n                const err8 = {\n                    instancePath: instancePath + \"/header\",\n                    schemaPath: \"#/properties/header/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"object\"\n                    },\n                    message: \"must be object\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err8];\n                }\n                else {\n                    vErrors.push(err8);\n                }\n                errors++;\n            }\n        }\n        if (data.columns !== undefined) {\n            if (!(validate66(data.columns, {\n                instancePath: instancePath + \"/columns\",\n                parentData: data,\n                parentDataProperty: \"columns\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate66.errors : vErrors.concat(validate66.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.columnDefault !== undefined) {\n            if (!(validate73(data.columnDefault, {\n                instancePath: instancePath + \"/columnDefault\",\n                parentData: data,\n                parentDataProperty: \"columnDefault\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate73.errors : vErrors.concat(validate73.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.drawVerticalLine !== undefined) {\n            if (typeof data.drawVerticalLine != \"function\") {\n                const err9 = {\n                    instancePath: instancePath + \"/drawVerticalLine\",\n                    schemaPath: \"#/properties/drawVerticalLine/typeof\",\n                    keyword: \"typeof\",\n                    params: {},\n                    message: \"must pass \\\"typeof\\\" keyword validation\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err9];\n                }\n                else {\n                    vErrors.push(err9);\n                }\n                errors++;\n            }\n        }\n        if (data.drawHorizontalLine !== undefined) {\n            if (typeof data.drawHorizontalLine != \"function\") {\n                const err10 = {\n                    instancePath: instancePath + \"/drawHorizontalLine\",\n                    schemaPath: \"#/properties/drawHorizontalLine/typeof\",\n                    keyword: \"typeof\",\n                    params: {},\n                    message: \"must pass \\\"typeof\\\" keyword validation\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err10];\n                }\n                else {\n                    vErrors.push(err10);\n                }\n                errors++;\n            }\n        }\n        if (data.singleLine !== undefined) {\n            if (typeof data.singleLine != \"boolean\") {\n                const err11 = {\n                    instancePath: instancePath + \"/singleLine\",\n                    schemaPath: \"#/properties/singleLine/typeof\",\n                    keyword: \"typeof\",\n                    params: {},\n                    message: \"must pass \\\"typeof\\\" keyword validation\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err11];\n                }\n                else {\n                    vErrors.push(err11);\n                }\n                errors++;\n            }\n        }\n    }\n    else {\n        const err12 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err12];\n        }\n        else {\n            vErrors.push(err12);\n        }\n        errors++;\n    }\n    validate43.errors = vErrors;\n    return errors === 0;\n}\nexports[\"streamConfig.json\"] = validate76;\nconst schema22 = {\n    \"$id\": \"streamConfig.json\",\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"border\": {\n            \"$ref\": \"shared.json#/definitions/borders\"\n        },\n        \"columns\": {\n            \"$ref\": \"shared.json#/definitions/columns\"\n        },\n        \"columnDefault\": {\n            \"$ref\": \"shared.json#/definitions/column\"\n        },\n        \"columnCount\": {\n            \"type\": \"integer\",\n            \"minimum\": 1\n        },\n        \"drawVerticalLine\": {\n            \"typeof\": \"function\"\n        }\n    },\n    \"required\": [\"columnDefault\", \"columnCount\"],\n    \"additionalProperties\": false\n};\nfunction validate77(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(func8.call(schema15.properties, key0))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.topBody !== undefined) {\n            if (!(validate46(data.topBody, {\n                instancePath: instancePath + \"/topBody\",\n                parentData: data,\n                parentDataProperty: \"topBody\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topJoin !== undefined) {\n            if (!(validate46(data.topJoin, {\n                instancePath: instancePath + \"/topJoin\",\n                parentData: data,\n                parentDataProperty: \"topJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topLeft !== undefined) {\n            if (!(validate46(data.topLeft, {\n                instancePath: instancePath + \"/topLeft\",\n                parentData: data,\n                parentDataProperty: \"topLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topRight !== undefined) {\n            if (!(validate46(data.topRight, {\n                instancePath: instancePath + \"/topRight\",\n                parentData: data,\n                parentDataProperty: \"topRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomBody !== undefined) {\n            if (!(validate46(data.bottomBody, {\n                instancePath: instancePath + \"/bottomBody\",\n                parentData: data,\n                parentDataProperty: \"bottomBody\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomJoin !== undefined) {\n            if (!(validate46(data.bottomJoin, {\n                instancePath: instancePath + \"/bottomJoin\",\n                parentData: data,\n                parentDataProperty: \"bottomJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomLeft !== undefined) {\n            if (!(validate46(data.bottomLeft, {\n                instancePath: instancePath + \"/bottomLeft\",\n                parentData: data,\n                parentDataProperty: \"bottomLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomRight !== undefined) {\n            if (!(validate46(data.bottomRight, {\n                instancePath: instancePath + \"/bottomRight\",\n                parentData: data,\n                parentDataProperty: \"bottomRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyLeft !== undefined) {\n            if (!(validate46(data.bodyLeft, {\n                instancePath: instancePath + \"/bodyLeft\",\n                parentData: data,\n                parentDataProperty: \"bodyLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyRight !== undefined) {\n            if (!(validate46(data.bodyRight, {\n                instancePath: instancePath + \"/bodyRight\",\n                parentData: data,\n                parentDataProperty: \"bodyRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyJoin !== undefined) {\n            if (!(validate46(data.bodyJoin, {\n                instancePath: instancePath + \"/bodyJoin\",\n                parentData: data,\n                parentDataProperty: \"bodyJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.headerJoin !== undefined) {\n            if (!(validate46(data.headerJoin, {\n                instancePath: instancePath + \"/headerJoin\",\n                parentData: data,\n                parentDataProperty: \"headerJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinBody !== undefined) {\n            if (!(validate46(data.joinBody, {\n                instancePath: instancePath + \"/joinBody\",\n                parentData: data,\n                parentDataProperty: \"joinBody\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinLeft !== undefined) {\n            if (!(validate46(data.joinLeft, {\n                instancePath: instancePath + \"/joinLeft\",\n                parentData: data,\n                parentDataProperty: \"joinLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinRight !== undefined) {\n            if (!(validate46(data.joinRight, {\n                instancePath: instancePath + \"/joinRight\",\n                parentData: data,\n                parentDataProperty: \"joinRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinJoin !== undefined) {\n            if (!(validate46(data.joinJoin, {\n                instancePath: instancePath + \"/joinJoin\",\n                parentData: data,\n                parentDataProperty: \"joinJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n    }\n    else {\n        const err1 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        }\n        else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    validate77.errors = vErrors;\n    return errors === 0;\n}\nfunction validate95(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    const _errs0 = errors;\n    let valid0 = false;\n    let passing0 = null;\n    const _errs1 = errors;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(pattern0.test(key0))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/oneOf/0/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        for (const key1 in data) {\n            if (pattern0.test(key1)) {\n                if (!(validate67(data[key1], {\n                    instancePath: instancePath + \"/\" + key1.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n                    parentData: data,\n                    parentDataProperty: key1,\n                    rootData\n                }))) {\n                    vErrors = vErrors === null ? validate67.errors : vErrors.concat(validate67.errors);\n                    errors = vErrors.length;\n                }\n            }\n        }\n    }\n    else {\n        const err1 = {\n            instancePath,\n            schemaPath: \"#/oneOf/0/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        }\n        else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    var _valid0 = _errs1 === errors;\n    if (_valid0) {\n        valid0 = true;\n        passing0 = 0;\n    }\n    const _errs5 = errors;\n    if (Array.isArray(data)) {\n        const len0 = data.length;\n        for (let i0 = 0; i0 < len0; i0++) {\n            if (!(validate67(data[i0], {\n                instancePath: instancePath + \"/\" + i0,\n                parentData: data,\n                parentDataProperty: i0,\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate67.errors : vErrors.concat(validate67.errors);\n                errors = vErrors.length;\n            }\n        }\n    }\n    else {\n        const err2 = {\n            instancePath,\n            schemaPath: \"#/oneOf/1/type\",\n            keyword: \"type\",\n            params: {\n                type: \"array\"\n            },\n            message: \"must be array\"\n        };\n        if (vErrors === null) {\n            vErrors = [err2];\n        }\n        else {\n            vErrors.push(err2);\n        }\n        errors++;\n    }\n    var _valid0 = _errs5 === errors;\n    if (_valid0 && valid0) {\n        valid0 = false;\n        passing0 = [passing0, 1];\n    }\n    else {\n        if (_valid0) {\n            valid0 = true;\n            passing0 = 1;\n        }\n    }\n    if (!valid0) {\n        const err3 = {\n            instancePath,\n            schemaPath: \"#/oneOf\",\n            keyword: \"oneOf\",\n            params: {\n                passingSchemas: passing0\n            },\n            message: \"must match exactly one schema in oneOf\"\n        };\n        if (vErrors === null) {\n            vErrors = [err3];\n        }\n        else {\n            vErrors.push(err3);\n        }\n        errors++;\n    }\n    else {\n        errors = _errs0;\n        if (vErrors !== null) {\n            if (_errs0) {\n                vErrors.length = _errs0;\n            }\n            else {\n                vErrors = null;\n            }\n        }\n    }\n    validate95.errors = vErrors;\n    return errors === 0;\n}\nfunction validate99(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(((((((key0 === \"alignment\") || (key0 === \"verticalAlignment\")) || (key0 === \"width\")) || (key0 === \"wrapWord\")) || (key0 === \"truncate\")) || (key0 === \"paddingLeft\")) || (key0 === \"paddingRight\"))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.alignment !== undefined) {\n            if (!(validate68(data.alignment, {\n                instancePath: instancePath + \"/alignment\",\n                parentData: data,\n                parentDataProperty: \"alignment\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate68.errors : vErrors.concat(validate68.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.verticalAlignment !== undefined) {\n            let data1 = data.verticalAlignment;\n            if (typeof data1 !== \"string\") {\n                const err1 = {\n                    instancePath: instancePath + \"/verticalAlignment\",\n                    schemaPath: \"#/properties/verticalAlignment/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"string\"\n                    },\n                    message: \"must be string\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err1];\n                }\n                else {\n                    vErrors.push(err1);\n                }\n                errors++;\n            }\n            if (!(((data1 === \"top\") || (data1 === \"middle\")) || (data1 === \"bottom\"))) {\n                const err2 = {\n                    instancePath: instancePath + \"/verticalAlignment\",\n                    schemaPath: \"#/properties/verticalAlignment/enum\",\n                    keyword: \"enum\",\n                    params: {\n                        allowedValues: schema19.properties.verticalAlignment.enum\n                    },\n                    message: \"must be equal to one of the allowed values\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err2];\n                }\n                else {\n                    vErrors.push(err2);\n                }\n                errors++;\n            }\n        }\n        if (data.width !== undefined) {\n            let data2 = data.width;\n            if (!(((typeof data2 == \"number\") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))) {\n                const err3 = {\n                    instancePath: instancePath + \"/width\",\n                    schemaPath: \"#/properties/width/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err3];\n                }\n                else {\n                    vErrors.push(err3);\n                }\n                errors++;\n            }\n            if ((typeof data2 == \"number\") && (isFinite(data2))) {\n                if (data2 < 1 || isNaN(data2)) {\n                    const err4 = {\n                        instancePath: instancePath + \"/width\",\n                        schemaPath: \"#/properties/width/minimum\",\n                        keyword: \"minimum\",\n                        params: {\n                            comparison: \">=\",\n                            limit: 1\n                        },\n                        message: \"must be >= 1\"\n                    };\n                    if (vErrors === null) {\n                        vErrors = [err4];\n                    }\n                    else {\n                        vErrors.push(err4);\n                    }\n                    errors++;\n                }\n            }\n        }\n        if (data.wrapWord !== undefined) {\n            if (typeof data.wrapWord !== \"boolean\") {\n                const err5 = {\n                    instancePath: instancePath + \"/wrapWord\",\n                    schemaPath: \"#/properties/wrapWord/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"boolean\"\n                    },\n                    message: \"must be boolean\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err5];\n                }\n                else {\n                    vErrors.push(err5);\n                }\n                errors++;\n            }\n        }\n        if (data.truncate !== undefined) {\n            let data4 = data.truncate;\n            if (!(((typeof data4 == \"number\") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))) {\n                const err6 = {\n                    instancePath: instancePath + \"/truncate\",\n                    schemaPath: \"#/properties/truncate/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err6];\n                }\n                else {\n                    vErrors.push(err6);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingLeft !== undefined) {\n            let data5 = data.paddingLeft;\n            if (!(((typeof data5 == \"number\") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))) {\n                const err7 = {\n                    instancePath: instancePath + \"/paddingLeft\",\n                    schemaPath: \"#/properties/paddingLeft/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err7];\n                }\n                else {\n                    vErrors.push(err7);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingRight !== undefined) {\n            let data6 = data.paddingRight;\n            if (!(((typeof data6 == \"number\") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))) {\n                const err8 = {\n                    instancePath: instancePath + \"/paddingRight\",\n                    schemaPath: \"#/properties/paddingRight/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err8];\n                }\n                else {\n                    vErrors.push(err8);\n                }\n                errors++;\n            }\n        }\n    }\n    else {\n        const err9 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err9];\n        }\n        else {\n            vErrors.push(err9);\n        }\n        errors++;\n    }\n    validate99.errors = vErrors;\n    return errors === 0;\n}\nfunction validate76(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    /*# sourceURL=\"streamConfig.json\" */ ;\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        if (data.columnDefault === undefined) {\n            const err0 = {\n                instancePath,\n                schemaPath: \"#/required\",\n                keyword: \"required\",\n                params: {\n                    missingProperty: \"columnDefault\"\n                },\n                message: \"must have required property '\" + \"columnDefault\" + \"'\"\n            };\n            if (vErrors === null) {\n                vErrors = [err0];\n            }\n            else {\n                vErrors.push(err0);\n            }\n            errors++;\n        }\n        if (data.columnCount === undefined) {\n            const err1 = {\n                instancePath,\n                schemaPath: \"#/required\",\n                keyword: \"required\",\n                params: {\n                    missingProperty: \"columnCount\"\n                },\n                message: \"must have required property '\" + \"columnCount\" + \"'\"\n            };\n            if (vErrors === null) {\n                vErrors = [err1];\n            }\n            else {\n                vErrors.push(err1);\n            }\n            errors++;\n        }\n        for (const key0 in data) {\n            if (!(((((key0 === \"border\") || (key0 === \"columns\")) || (key0 === \"columnDefault\")) || (key0 === \"columnCount\")) || (key0 === \"drawVerticalLine\"))) {\n                const err2 = {\n                    instancePath,\n                    schemaPath: \"#/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err2];\n                }\n                else {\n                    vErrors.push(err2);\n                }\n                errors++;\n            }\n        }\n        if (data.border !== undefined) {\n            if (!(validate77(data.border, {\n                instancePath: instancePath + \"/border\",\n                parentData: data,\n                parentDataProperty: \"border\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate77.errors : vErrors.concat(validate77.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.columns !== undefined) {\n            if (!(validate95(data.columns, {\n                instancePath: instancePath + \"/columns\",\n                parentData: data,\n                parentDataProperty: \"columns\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate95.errors : vErrors.concat(validate95.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.columnDefault !== undefined) {\n            if (!(validate99(data.columnDefault, {\n                instancePath: instancePath + \"/columnDefault\",\n                parentData: data,\n                parentDataProperty: \"columnDefault\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate99.errors : vErrors.concat(validate99.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.columnCount !== undefined) {\n            let data3 = data.columnCount;\n            if (!(((typeof data3 == \"number\") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))) {\n                const err3 = {\n                    instancePath: instancePath + \"/columnCount\",\n                    schemaPath: \"#/properties/columnCount/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err3];\n                }\n                else {\n                    vErrors.push(err3);\n                }\n                errors++;\n            }\n            if ((typeof data3 == \"number\") && (isFinite(data3))) {\n                if (data3 < 1 || isNaN(data3)) {\n                    const err4 = {\n                        instancePath: instancePath + \"/columnCount\",\n                        schemaPath: \"#/properties/columnCount/minimum\",\n                        keyword: \"minimum\",\n                        params: {\n                            comparison: \">=\",\n                            limit: 1\n                        },\n                        message: \"must be >= 1\"\n                    };\n                    if (vErrors === null) {\n                        vErrors = [err4];\n                    }\n                    else {\n                        vErrors.push(err4);\n                    }\n                    errors++;\n                }\n            }\n        }\n        if (data.drawVerticalLine !== undefined) {\n            if (typeof data.drawVerticalLine != \"function\") {\n                const err5 = {\n                    instancePath: instancePath + \"/drawVerticalLine\",\n                    schemaPath: \"#/properties/drawVerticalLine/typeof\",\n                    keyword: \"typeof\",\n                    params: {},\n                    message: \"must pass \\\"typeof\\\" keyword validation\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err5];\n                }\n                else {\n                    vErrors.push(err5);\n                }\n                errors++;\n            }\n        }\n    }\n    else {\n        const err6 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err6];\n        }\n        else {\n            vErrors.push(err6);\n        }\n        errors++;\n    }\n    validate76.errors = vErrors;\n    return errors === 0;\n}\n//# sourceMappingURL=validators.js.map"]},"metadata":{},"sourceType":"script"}