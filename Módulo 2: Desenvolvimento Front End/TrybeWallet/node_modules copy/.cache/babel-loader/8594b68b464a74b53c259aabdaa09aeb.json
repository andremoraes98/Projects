{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documentos/Projetos/sd-019-b-project-trybewallet/src/components/Expenses.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Expenses extends Component {\n  render() {\n    const {\n      expenses\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }\n    }, expenses.map((expense, index) => {\n      const twoDecimalDigitsValue = parseFloat(expense.value).toFixed(2);\n      const twoDecimalDigitsConvertedValue = (expense.value * currencyArray[0][1].ask).toFixed(2);\n      const currencyArray = Object.entries(expense.exchangeRates).filter(currency => currency[0] === expense.currency);\n      const currencyName = currencyArray[0][1].name;\n      const currencyChange = parseFloat(currencyArray[0][1].ask).toFixed(2);\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }\n      }, expense.description), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }\n      }, expense.tag), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }\n      }, expense.method), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }\n      }, twoDecimalDigitsValue), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }\n      }, currencyName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }\n      }, currencyChange), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }\n      }, twoDecimalDigitsConvertedValue), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }, \"Real\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, \"Editar\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, \"Excluir\")));\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  expenses: state.wallet.expenses\n});\n\nExpenses.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default connect(mapStateToProps)(Expenses);","map":{"version":3,"sources":["/home/andre/Documentos/Projetos/sd-019-b-project-trybewallet/src/components/Expenses.js"],"names":["React","Component","connect","PropTypes","Expenses","render","expenses","props","map","expense","index","twoDecimalDigitsValue","parseFloat","value","toFixed","twoDecimalDigitsConvertedValue","currencyArray","ask","Object","entries","exchangeRates","filter","currency","currencyName","name","currencyChange","description","tag","method","mapStateToProps","state","wallet","propTypes","arrayOf","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC/BI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACID,QAAQ,CAACE,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACjC,YAAMC,qBAAqB,GAAGC,UAAU,CAACH,OAAO,CAACI,KAAT,CAAV,CAA0BC,OAA1B,CAAkC,CAAlC,CAA9B;AACA,YAAMC,8BAA8B,GAAG,CAACN,OAAO,CAACI,KAAR,GAAgBG,aAAa,CAAC,CAAD,CAAb,CAAiB,CAAjB,EAAoBC,GAArC,EACpCH,OADoC,CAC5B,CAD4B,CAAvC;AAEA,YAAME,aAAa,GAAGE,MAAM,CACzBC,OADmB,CACXV,OAAO,CAACW,aADG,EAEnBC,MAFmB,CAEXC,QAAD,IAAcA,QAAQ,CAAC,CAAD,CAAR,KAAgBb,OAAO,CAACa,QAF1B,CAAtB;AAGA,YAAMC,YAAY,GAAGP,aAAa,CAAC,CAAD,CAAb,CAAiB,CAAjB,EAAoBQ,IAAzC;AACA,YAAMC,cAAc,GAAGb,UAAU,CAACI,aAAa,CAAC,CAAD,CAAb,CAAiB,CAAjB,EAAoBC,GAArB,CAAV,CAAoCH,OAApC,CAA4C,CAA5C,CAAvB;AACA,0BACE;AAAI,QAAA,GAAG,EAAGJ,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,OAAO,CAACiB,WAAb,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKjB,OAAO,CAACkB,GAAb,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKlB,OAAO,CAACmB,MAAb,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKjB,qBAAL,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKY,YAAL,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKE,cAAL,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKV,8BAAL,CAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CATF,CADF;AAgBD,KAzBC,CADJ,CADF;AA6BD;;AAhC8B;;AAmCjC,MAAMc,eAAe,GAAIC,KAAD,KAAY;AAClCxB,EAAAA,QAAQ,EAAEwB,KAAK,CAACC,MAAN,CAAazB;AADW,CAAZ,CAAxB;;AAIAF,QAAQ,CAAC4B,SAAT,GAAqB;AACnB1B,EAAAA,QAAQ,EAAEH,SAAS,CAAC8B,OAAV,CAAkB9B,SAAS,CAAC+B,MAA5B,EAAoCC;AAD3B,CAArB;AAIA,eAAejC,OAAO,CAAC2B,eAAD,CAAP,CAAyBzB,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Expenses extends Component {\n  render() {\n    const { expenses } = this.props;\n    return (\n      <tbody>\n        { expenses.map((expense, index) => {\n          const twoDecimalDigitsValue = parseFloat(expense.value).toFixed(2);\n          const twoDecimalDigitsConvertedValue = (expense.value * currencyArray[0][1].ask)\n            .toFixed(2);\n          const currencyArray = Object\n            .entries(expense.exchangeRates)\n            .filter((currency) => currency[0] === expense.currency);\n          const currencyName = currencyArray[0][1].name;\n          const currencyChange = parseFloat(currencyArray[0][1].ask).toFixed(2);\n          return (\n            <tr key={ index }>\n              <td>{expense.description}</td>\n              <td>{expense.tag}</td>\n              <td>{expense.method}</td>\n              <td>{twoDecimalDigitsValue}</td>\n              <td>{currencyName}</td>\n              <td>{currencyChange}</td>\n              <td>{twoDecimalDigitsConvertedValue}</td>\n              <td>Real</td>\n              <td>\n                <button type=\"button\">Editar</button>\n                <button type=\"button\">Excluir</button>\n              </td>\n            </tr>\n          );\n        }) }\n      </tbody>);\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nExpenses.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default connect(mapStateToProps)(Expenses);\n"]},"metadata":{},"sourceType":"module"}