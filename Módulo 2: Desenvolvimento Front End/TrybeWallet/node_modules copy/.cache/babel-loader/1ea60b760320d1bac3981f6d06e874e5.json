{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documentos/Projetos/sd-019-b-project-trybewallet/src/pages/Wallet.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Proptypes from 'prop-types';\nimport { fetchCurrencyJSONFromAPI } from '../actions';\nimport Header from '../components/Header';\nimport WalletForm from '../components/WalletForm';\nimport Table from '../components/Table';\nimport EdittionWalletForm from '../components/EdittionWalletForm';\n\nclass Wallet extends React.Component {\n  componentDidMount() {\n    const {\n      getDataFromAPI\n    } = this.props;\n    getDataFromAPI();\n  }\n\n  render() {\n    const {\n      wantToEdit\n    } = this.props;\n    console.log(wantToEdit);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }), wantToEdit ? /*#__PURE__*/React.createElement(EdittionWalletForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 24\n      }\n    }) : /*#__PURE__*/React.createElement(WalletForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  wantToEdit: state.wallet.wantToEdit\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getDataFromAPI: () => dispatch(fetchCurrencyJSONFromAPI())\n});\n\nWallet.propTypes = {\n  getDataFromAPI: Proptypes.func.isRequired,\n  wantToEdit: Proptypes.bool.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);","map":{"version":3,"sources":["/home/andre/Documentos/Projetos/sd-019-b-project-trybewallet/src/pages/Wallet.js"],"names":["React","connect","Proptypes","fetchCurrencyJSONFromAPI","Header","WalletForm","Table","EdittionWalletForm","Wallet","Component","componentDidMount","getDataFromAPI","props","render","wantToEdit","console","log","mapStateToProps","state","wallet","mapDispatchToProps","dispatch","propTypes","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,wBAAT,QAAyC,YAAzC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;;AAEA,MAAMC,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAqC;AACnCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAqB,KAAKC,KAAhC;AACAD,IAAAA,cAAc;AACf;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAiB,KAAKF,KAA5B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,wBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEIA,UAAU,gBAAG,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,gBAA4B,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF1C,eAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AAhBkC;;AAmBrC,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCJ,EAAAA,UAAU,EAAEI,KAAK,CAACC,MAAN,CAAaL;AADS,CAAZ,CAAxB;;AAIA,MAAMM,kBAAkB,GAAIC,QAAD,KAAe;AACxCV,EAAAA,cAAc,EAAE,MAAMU,QAAQ,CAAClB,wBAAwB,EAAzB;AADU,CAAf,CAA3B;;AAIAK,MAAM,CAACc,SAAP,GAAmB;AACjBX,EAAAA,cAAc,EAAET,SAAS,CAACqB,IAAV,CAAeC,UADd;AAEjBV,EAAAA,UAAU,EAAEZ,SAAS,CAACuB,IAAV,CAAeD;AAFV,CAAnB;AAKA,eAAevB,OAAO,CAACgB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CZ,MAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Proptypes from 'prop-types';\nimport { fetchCurrencyJSONFromAPI } from '../actions';\nimport Header from '../components/Header';\nimport WalletForm from '../components/WalletForm';\nimport Table from '../components/Table';\nimport EdittionWalletForm from '../components/EdittionWalletForm';\n\nclass Wallet extends React.Component {\n  componentDidMount() {\n    const { getDataFromAPI } = this.props;\n    getDataFromAPI();\n  }\n\n  render() {\n    const { wantToEdit } = this.props;\n    console.log(wantToEdit);\n    return (\n      <>\n        <Header />\n        { wantToEdit ? <EdittionWalletForm /> : <WalletForm /> }\n        <Table />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  wantToEdit: state.wallet.wantToEdit,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getDataFromAPI: () => dispatch(fetchCurrencyJSONFromAPI()),\n});\n\nWallet.propTypes = {\n  getDataFromAPI: Proptypes.func.isRequired,\n  wantToEdit: Proptypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n"]},"metadata":{},"sourceType":"module"}