{"ast":null,"code":"export const SAVE_EMAIL = 'SAVE_EMAIL';\nexport const START_REQUEST = 'START_REQUEST';\nexport const SAVE_CURRENCY = 'SAVE_CURRENCY';\nexport const SAVE_ECONOMY_CURRENCY = 'SAVE_ECONOMY_CURRENCY';\nexport const SAVE_EXPENSE_INFO = 'SAVE_EXPENSE_INFO';\nexport const DELETE_EXPENSE = 'DELETE_EXPENSE';\nexport const EDIT_EXPENSE = 'EDIT_EXPENSE';\nexport const CHANGE_EXPENSE = 'CHANGE_EXPENSE';\nconst URL_ECONOMIA = 'https://economia.awesomeapi.com.br/json/all';\nexport const saveEmail = email => ({\n  type: SAVE_EMAIL,\n  email\n});\nexport const requestJSON = () => ({\n  type: START_REQUEST\n});\nexport const getInitialsOfCurrency = (currencies, expenses) => {\n  const startValues = expenses.map(expense => expense.value * Object.entries(expense.exchangeRates).filter(currency => currency[0] === expense.currency)[0][1].ask);\n  console.log(startValues);\n  return {\n    type: SAVE_CURRENCY,\n    currencies,\n    expenses\n  };\n};\nexport const deleteExpense = (expenseId, expenseValue) => ({\n  type: DELETE_EXPENSE,\n  expenseId,\n  expenseValue: parseFloat(expenseValue)\n});\nexport const editExpense = expenseId => ({\n  type: EDIT_EXPENSE,\n  expenseId\n});\nexport const fetchCurrencyJSONFromAPI = expenses => async dispatch => {\n  dispatch(requestJSON());\n  const response = await fetch(URL_ECONOMIA);\n  const data = await response.json();\n  const dataWithOutUSDT = Object.keys(data).filter(currency => currency !== 'USDT');\n  return dispatch(getInitialsOfCurrency(dataWithOutUSDT, expenses));\n};\nexport const saveExpenseInfos = (id, expenseInfos, exchangeRates) => {\n  const valueCurrencyInBRL = Object.entries(exchangeRates).filter(currency => currency[0] === expenseInfos.currency);\n  return {\n    type: SAVE_EXPENSE_INFO,\n    expenseInfos: {\n      id,\n      ...expenseInfos,\n      exchangeRates\n    },\n    value: expenseInfos.value * valueCurrencyInBRL[0][1].ask\n  };\n};\nexport const fetchEconomyJSONFromAPI = (id, expenseInfos) => async dispatch => {\n  dispatch(requestJSON());\n  const response = await fetch(URL_ECONOMIA);\n  const data = await response.json();\n  return dispatch(saveExpenseInfos(id, expenseInfos, data));\n};\nexport const changeExpense = editedExpense => ({\n  type: CHANGE_EXPENSE,\n  editedExpense\n});","map":{"version":3,"sources":["/home/andre/Documentos/Projetos/sd-019-b-project-trybewallet/src/actions/index.js"],"names":["SAVE_EMAIL","START_REQUEST","SAVE_CURRENCY","SAVE_ECONOMY_CURRENCY","SAVE_EXPENSE_INFO","DELETE_EXPENSE","EDIT_EXPENSE","CHANGE_EXPENSE","URL_ECONOMIA","saveEmail","email","type","requestJSON","getInitialsOfCurrency","currencies","expenses","startValues","map","expense","value","Object","entries","exchangeRates","filter","currency","ask","console","log","deleteExpense","expenseId","expenseValue","parseFloat","editExpense","fetchCurrencyJSONFromAPI","dispatch","response","fetch","data","json","dataWithOutUSDT","keys","saveExpenseInfos","id","expenseInfos","valueCurrencyInBRL","fetchEconomyJSONFromAPI","changeExpense","editedExpense"],"mappings":"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","sourcesContent":["export const SAVE_EMAIL = 'SAVE_EMAIL';\nexport const START_REQUEST = 'START_REQUEST';\nexport const SAVE_CURRENCY = 'SAVE_CURRENCY';\nexport const SAVE_ECONOMY_CURRENCY = 'SAVE_ECONOMY_CURRENCY';\nexport const SAVE_EXPENSE_INFO = 'SAVE_EXPENSE_INFO';\nexport const DELETE_EXPENSE = 'DELETE_EXPENSE';\nexport const EDIT_EXPENSE = 'EDIT_EXPENSE';\nexport const CHANGE_EXPENSE = 'CHANGE_EXPENSE';\nconst URL_ECONOMIA = 'https://economia.awesomeapi.com.br/json/all';\n\nexport const saveEmail = (email) => ({\n  type: SAVE_EMAIL,\n  email,\n});\n\nexport const requestJSON = () => ({\n  type: START_REQUEST,\n});\n\nexport const getInitialsOfCurrency = (currencies, expenses) => {\n  const startValues = expenses\n    .map((expense) => expense.value * Object.entries(expense.exchangeRates)\n      .filter((currency) => currency[0] === expense.currency)[0][1].ask);\n  console.log(startValues);\n  return {\n    type: SAVE_CURRENCY,\n    currencies,\n    expenses,\n  };\n};\n\nexport const deleteExpense = (expenseId, expenseValue) => ({\n  type: DELETE_EXPENSE,\n  expenseId,\n  expenseValue: parseFloat(expenseValue),\n});\n\nexport const editExpense = (expenseId) => ({\n  type: EDIT_EXPENSE,\n  expenseId,\n});\n\nexport const fetchCurrencyJSONFromAPI = (expenses) => async (dispatch) => {\n  dispatch(requestJSON());\n  const response = await fetch(URL_ECONOMIA);\n  const data = await response.json();\n  const dataWithOutUSDT = Object.keys(data).filter((currency) => currency !== 'USDT');\n  return dispatch(getInitialsOfCurrency(dataWithOutUSDT, expenses));\n};\n\nexport const saveExpenseInfos = (id, expenseInfos, exchangeRates) => {\n  const valueCurrencyInBRL = Object.entries(exchangeRates)\n    .filter((currency) => currency[0] === expenseInfos.currency);\n  return ({\n    type: SAVE_EXPENSE_INFO,\n    expenseInfos: {\n      id,\n      ...expenseInfos,\n      exchangeRates,\n    },\n    value: expenseInfos.value * (valueCurrencyInBRL[0][1].ask),\n  });\n};\n\nexport const fetchEconomyJSONFromAPI = (id, expenseInfos) => async (dispatch) => {\n  dispatch(requestJSON());\n  const response = await fetch(URL_ECONOMIA);\n  const data = await response.json();\n  return dispatch(saveExpenseInfos(id, expenseInfos, data));\n};\n\nexport const changeExpense = (editedExpense) => ({\n  type: CHANGE_EXPENSE,\n  editedExpense,\n});\n"]},"metadata":{},"sourceType":"module"}